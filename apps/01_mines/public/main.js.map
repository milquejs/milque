{
  "version": 3,
  "sources": ["node-modules-polyfills:path", "node-modules-polyfills-commonjs:path", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/constants.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/utils.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/scan.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/parse.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/lib/picomatch.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.0/node_modules/picomatch/index.js", "../../../packages/display/dist/esm/index.js", "../../../packages/input/dist/esm/index.js", "../../../common/temp/node_modules/.pnpm/fflate@0.6.10/node_modules/fflate/esm/browser.js", "../../../packages/asset/dist/esm/index.js", "../src/error.js", "../../../packages/util/dist/esm/index.js", "../../../packages/random/dist/esm/index.js", "../src/Mines.js", "../src/MinesControls.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.3.0/node_modules/gl-matrix/esm/common.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.3.0/node_modules/gl-matrix/esm/mat3.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.3.0/node_modules/gl-matrix/esm/mat4.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.3.0/node_modules/gl-matrix/esm/quat.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.3.0/node_modules/gl-matrix/esm/vec3.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.3.0/node_modules/gl-matrix/esm/vec4.js", "../src/Camera2D.js", "../src/CanvasView.js", "../src/MainScene.js", "../src/ImageLoader.js", "../src/MinesRenderer.js", "../src/MainRender.js", "../src/main.js"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n", "\nconst polyfill = require('path')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\nif (polyfill) {\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n}\n", "'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n", "'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n", "'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n", "'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        output = token.close = `)${rest})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n", "'use strict';\n\nmodule.exports = require('./lib/picomatch');\n", "var INNER_HTML = \"<div class=\\\"container\\\">\\n    <label class=\\\"hidden\\\" id=\\\"title\\\">display-port</label>\\n    <label class=\\\"hidden\\\" id=\\\"fps\\\">00</label>\\n    <label class=\\\"hidden\\\" id=\\\"dimension\\\">0x0</label>\\n    <div class=\\\"content\\\">\\n        <canvas>\\n            Oh no! Your browser does not support canvas.\\n        </canvas>\\n        <slot id=\\\"inner\\\"></slot>\\n    </div>\\n    <slot name=\\\"frame\\\"></slot>\\n</div>\";\n\nvar INNER_STYLE = \":host {\\n    display: inline-block;\\n    color: #555555;\\n}\\n\\n.container {\\n    display: flex;\\n    position: relative;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.content {\\n    position: relative;\\n    margin: auto;\\n}\\n\\n.content > *:not(canvas) {\\n    width: 100%;\\n    height: 100%;\\n}\\n\\ncanvas {\\n    background: #000000;\\n    image-rendering: pixelated;\\n}\\n\\nlabel {\\n    position: absolute;\\n    font-family: monospace;\\n    color: currentColor;\\n}\\n\\n#inner {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    pointer-events: none;\\n}\\n\\n#title {\\n    left: 0.5rem;\\n    top: 0.5rem;\\n}\\n\\n#fps {\\n    right: 0.5rem;\\n    top: 0.5rem;\\n}\\n\\n#dimension {\\n    left: 0.5rem;\\n    bottom: 0.5rem;\\n}\\n\\n.hidden {\\n    display: none;\\n}\\n\\n:host([debug]) .container {\\n    outline: 6px dashed rgba(0, 0, 0, 0.1);\\n    outline-offset: -4px;\\n    background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n:host([mode=\\\"noscale\\\"]) canvas {\\n    margin: 0;\\n    top: 0;\\n    left: 0;\\n}\\n\\n:host([mode=\\\"stretch\\\"]) canvas,\\n:host([mode=\\\"scale\\\"]) canvas {\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n:host([mode=\\\"fit\\\"]),\\n:host([mode=\\\"scale\\\"]),\\n:host([mode=\\\"center\\\"]),\\n:host([mode=\\\"stretch\\\"]),\\n:host([mode=\\\"fill\\\"]) {\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n:host([full]) {\\n    width: 100vw !important;\\n    height: 100vh !important;\\n}\\n\\n:host([disabled]) {\\n    display: none;\\n}\\n\\nslot {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    pointer-events: none;\\n}\\n\\n::slotted(*) {\\n    pointer-events: auto;\\n}\\n\";\n\n/**\n * No scaling is applied. The canvas size maintains a\n * 1:1 pixel ratio to the defined display dimensions.\n */\nconst MODE_NOSCALE = 'noscale';\n\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio. This will adjust\n * canvas resolution to fit the viewport dimensions.\n * In other words, the canvas pixel size remains\n * constant, but the number of pixels in the canvas\n * will increase or decrease to compensate. This is\n * the default scaling mode.\n */\nconst MODE_FIT = 'fit';\n\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio and pixel\n * resolution. This will upscale and downscale the\n * pixel size depending on the viewport dimentions\n * in order to preserve the canvas pixel count. In\n * other words, the number of pixels in the canvas\n * remain constant but appear larger or smaller to\n * compensate.\n */\nconst MODE_SCALE = 'scale';\n\n/**\n * Resizes the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio nor pixel\n * count (adds and removes pixels to fill size). If you\n * care about aspect ratio but not pixel count, consider\n * using 'fit' mode instead.\n */\nconst MODE_FILL = 'fill';\n\n/**\n * Scales the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio but\n * does preserve pixel count (by stretching the pixel\n * size). If you care about aspect ratio and pixel\n * count, consider using 'scale' mode instead.\n */\nconst MODE_STRETCH = 'stretch';\n\n/**\n * The default display x dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_WIDTH = 300;\n/**\n * The default display y dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_HEIGHT = 150;\n\n/** The default display scaling mode. */\nconst DEFAULT_MODE = MODE_FIT;\n\n/** The default resize timeout */\nconst DELAYED_RESIZE_MILLIS = 200;\n\n/**\n * @typedef {CustomEvent} FrameEvent\n * @property {number} detail.now\n * The current time in milliseconds.\n * @property {number} detail.prevTime\n * The previous frame time in milliseconds.\n * @property {number} detail.deltaTime\n * The time taken between the current and previous\n * frame in milliseconds.\n * @property {HTMLCanvasElement} detail.canvas\n * The canvas element.\n */\n\n/**\n * @typedef {MODE_CENTER\n *          |MODE_FIT\n *          |MODE_NOSCALE\n *          |MODE_SCALE\n *          |MODE_STRETCH} DisplayScaling\n */\n\n/**\n * A canvas that can scale and stretch with respect to the aspect ratio to fill\n * the viewport size.\n * \n * To start drawing, you should get the canvas context like so:\n * \n * For Canvas2D:\n * ```\n * const display = document.querySelector('display-port');\n * const ctx = display.canvas.getContext('2d');\n * ctx.drawText(0, 0, 'Hello World!');\n * ```\n * \n * For WebGL:\n * ```\n * const display = document.querySelector('display-port');\n * const gl = display.canvas.getContext('webgl');\n * gl.clear(gl.COLOR_BUFFER_BIT);\n * ```\n * \n * Usually, you would want to set the `width` and `height` attributes to define\n * the canvas size and aspect ratio in pixels. You can also change the scaling\n * behavior by setting the `mode` attribute.\n * \n * And for convenience, this element also dispatches a `frame` event every animation\n * frame (60 fps). This is basically the same as calling `requestAnimationFrame()`.\n * \n * NOTE: The viewport size is usually the parent container size. However, in the\n * rare case the element must be nested in a child container, you can define the\n * boolean attribute `full` to force the dimensions to be the actual window size.\n */\nclass DisplayPort extends HTMLElement\n{\n    /** @private */\n    static get [Symbol.for('templateNode')]()\n    {\n        let t = document.createElement('template');\n        t.innerHTML = INNER_HTML;\n        Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n        return t;\n    }\n\n    /** @private */\n    static get [Symbol.for('styleNode')]()\n    {\n        let t = document.createElement('style');\n        t.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n        return t;\n    }\n\n    static define(customElements = window.customElements)\n    {\n        customElements.define('display-port', this);\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'debug',\n            'disabled',\n            // 'mode',\n            'width',\n            'height',\n            'onframe',\n            // Built-in attributes\n            'id',\n            'class',\n        ];\n    }\n\n    /**\n     * The scaling mode.\n     * - `noscale`: Do not perform scaling.\n     * - `center`: Do not perform scaling but stretch the display to fill the entire\n     * viewport. The unscaled canvas is centered.\n     * - `fit`: Resize resolution to fill the entire viewport and maintains the aspect\n     * ratio. The pixel resolution is changed. This is the default behavior.\n     * - `fill`: Resize resolution to fill the entire viewport but does not maintain\n     * aspect ratio.\n     * - `stretch`: Perform scaling to fill the entire viewport but does not maintain\n     * aspect ratio.\n     * - `scale`: Perform scaling to fill the entire viewport and maintains the\n     * aspect ratio and resolution. The pixel resolution remains constant.\n     * @returns {DisplayScaling} The current scaling mode.\n     */\n    get mode()\n    {\n        return /** @type {DisplayScaling} */(this.getAttribute('mode'));\n    }\n\n    set mode(value)\n    {\n        this.setAttribute('mode', value);\n    }\n\n    /**\n     * Set to true for debug information.\n     * @returns {boolean}\n     */\n    get debug()\n    {\n        return this._debug;\n    }\n\n    set debug(value)\n    {\n        this.toggleAttribute('debug', value);\n    }\n\n    /**\n     * If disabled, animation frames will not fire.\n     * @returns {boolean}\n     */\n    get disabled()\n    {\n        return this._disabled;\n    }\n\n    set disabled(value)\n    {\n        this.toggleAttribute('disabled', value);\n    }\n\n    /**\n     * The canvas width in pixels. This determines the aspect ratio and canvas buffer size.\n     * @returns {number}\n     */\n    get width()\n    {\n        return this._width;\n    }\n\n    set width(value)\n    {\n        this.setAttribute('width', String(value));\n    }\n\n    /**\n     * The canvas height in pixels. This determines the aspect ratio and canvas buffer size.\n     */\n    get height()\n    {\n        return this._height;\n    }\n\n    set height(value)\n    {\n        this.setAttribute('height', String(value));\n    }\n\n    /** Fired every animation frame. */\n    get onframe()\n    {\n        return this._onframe;\n    }\n\n    set onframe(value)\n    {\n        if (this._onframe) this.removeEventListener('frame', this._onframe);\n        this._onframe = value;\n        if (this._onframe) this.addEventListener('frame', value);\n    }\n\n    constructor()\n    {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[Symbol.for('templateNode')].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[Symbol.for('styleNode')].cloneNode(true));\n        \n        /** @private */\n        this._canvasElement = this.shadowRoot.querySelector('canvas');\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        this._contentElement = this.shadowRoot.querySelector('.content');\n        /**\n         * @private\n         * @type {HTMLSlotElement}\n         */\n        this._innerElement = this.shadowRoot.querySelector('#inner');\n\n        /** @private */\n        this._titleElement = this.shadowRoot.querySelector('#title');\n        /** @private */\n        this._fpsElement = this.shadowRoot.querySelector('#fps');\n        /** @private */\n        this._dimensionElement = this.shadowRoot.querySelector('#dimension');\n\n        /** @private */\n        this._debug = false;\n        /** @private */\n        this._disabled = false;\n        /** @private */\n        this._width = DEFAULT_WIDTH;\n        /** @private */\n        this._height = DEFAULT_HEIGHT;\n        /** @private */\n        this._onframe = undefined;\n\n        /** @private */\n        this._animationRequestHandle = 0;\n        /** @private */\n        this._prevAnimationFrameTime = 0;\n\n        /** @private */\n        this._resizeTimeoutHandle = 0;\n        this._resizeCanvasWidth = 0;\n        this._resizeCanvasHeight = 0;\n\n        /** @private */\n        this.update = this.update.bind(this);\n        /** @private */\n        this.onDelayCanvasResize = this.onDelayCanvasResize.bind(this);\n    }\n\n    /** Get the canvas element. */\n    get canvas() { return this._canvasElement; }\n    \n    /** @override */\n    connectedCallback()\n    {\n        upgradeProperty(this, 'mode');\n        upgradeProperty(this, 'debug');\n        upgradeProperty(this, 'disabled');\n        upgradeProperty(this, 'width');\n        upgradeProperty(this, 'height');\n        upgradeProperty(this, 'onframe');\n\n        if (!this.hasAttribute('mode'))\n        {\n            this.setAttribute('mode', DEFAULT_MODE);\n        }\n\n        // Allows this element to be focusable\n        if (!this.hasAttribute('tabindex'))\n        {\n            this.setAttribute('tabindex', '0');\n        }\n        \n        this.updateCanvasSize(true);\n        this.resume();\n    }\n\n    /** @override */\n    disconnectedCallback()\n    {\n        this.pause();\n    } \n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute) {\n            case 'debug':\n                {\n                    this._debug = value !== null;\n                }\n                break;\n            case 'disabled':\n                {\n                    this._disabled = value !== null;\n                }\n                break;\n            case 'width':\n                {\n                    this._width = Number(value);\n                }\n                break;\n            case 'height':\n                {\n                    this._height = Number(value);\n                }\n                break;\n            case 'onframe':\n                {\n                    this.onframe = new Function('event',\n                        'with(document){with(this){' + value + '}}').bind(this);\n                }\n                break;\n        }\n\n        switch(attribute) {\n            case 'disabled':\n                if (value)\n                {\n                    this.update(0);\n                    this.pause();\n                }\n                else\n                {\n                    this.resume();\n                }\n                break;\n            // NOTE: For debugging purposes...\n            case 'id':\n            case 'class':\n                this._titleElement.innerHTML = `display-port${this.className ? '.' + this.className : ''}${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n                break;\n            case 'debug':\n                this._titleElement.classList.toggle('hidden', value);\n                this._fpsElement.classList.toggle('hidden', value);\n                this._dimensionElement.classList.toggle('hidden', value);\n                break;\n        }\n    }\n\n    /**\n     * @param {'2d'|'webgl'|'webgl2'} [contextId]\n     * @param {CanvasRenderingContext2DSettings} [options] \n     */\n    getContext(contextId = '2d', options = undefined)\n    {\n        return this._canvasElement.getContext(contextId, options);\n    }\n\n    /** Pause animation of the display frames. */\n    pause()\n    {\n        cancelAnimationFrame(this._animationRequestHandle);\n    }\n\n    /** Resume animation of the display frames. */\n    resume()\n    {\n        this._animationRequestHandle = requestAnimationFrame(this.update);\n    }\n\n    /** @private */\n    update(now)\n    {\n        this._animationRequestHandle = requestAnimationFrame(this.update);\n        this.updateCanvasSize(false);\n        const deltaTime = now - this._prevAnimationFrameTime;\n        this._prevAnimationFrameTime = now;\n\n        // NOTE: For debugging purposes...\n        if (this._debug)\n        {\n            // Update FPS...\n            const frames = deltaTime <= 0\n                ? '--'\n                : String(Math.round(1000 / deltaTime)).padStart(2, '0');\n            if (this._fpsElement.textContent !== frames)\n            {\n                this._fpsElement.textContent = frames;\n            }\n\n            // Update dimensions...\n            const mode = this.mode;\n            if (mode === MODE_NOSCALE)\n            {\n                let result = `${this._width}x${this._height}`;\n                if (this._dimensionElement.textContent !== result)\n                {\n                    this._dimensionElement.textContent = result;\n                }\n            }\n            else\n            {\n                let result = `${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;\n                if (this._dimensionElement.textContent !== result)\n                {\n                    this._dimensionElement.textContent = result;\n                }\n            }\n        }\n\n        this.dispatchEvent(new CustomEvent('frame', {\n            detail: {\n                now,\n                prevTime: this._prevAnimationFrameTime,\n                deltaTime: deltaTime,\n                canvas: this._canvasElement,\n            },\n            bubbles: false,\n            composed: true\n        }));\n    }\n\n    /** @private */\n    onDelayCanvasResize()\n    {\n        this._resizeTimeoutHandle = 0;\n        this.updateCanvasSize(true);\n    }\n\n    delayCanvasResize(canvasWidth, canvasHeight)\n    {\n        if (canvasWidth !== this._resizeCanvasWidth || canvasHeight !== this._resizeCanvasHeight)\n        {\n            // Only call onDelayCanvasResize, if new canvas size actually changed since last time.\n            this._resizeCanvasWidth = canvasWidth;\n            this._resizeCanvasHeight = canvasHeight;\n            if (this._resizeTimeoutHandle)\n            {\n                clearTimeout(this._resizeTimeoutHandle);\n            }\n            this._resizeTimeoutHandle = setTimeout(this.onDelayCanvasResize, DELAYED_RESIZE_MILLIS);\n        }\n    }\n    \n    /** @private */\n    updateCanvasSize(force = true)\n    {\n        const clientRect = this.shadowRoot.host.getBoundingClientRect();\n        const clientWidth = clientRect.width;\n        const clientHeight = clientRect.height;\n\n        let canvas = this._canvasElement;\n        let canvasWidth = this._width;\n        let canvasHeight = this._height;\n\n        const mode = this.mode;\n        if (mode === MODE_STRETCH || mode === MODE_FILL)\n        {\n            canvasWidth = clientWidth;\n            canvasHeight = clientHeight;\n        }\n        else if (mode !== MODE_NOSCALE)\n        {\n            if (clientWidth < canvasWidth\n                || clientHeight < canvasHeight\n                || mode === MODE_FIT\n                || mode == MODE_SCALE)\n            {\n                let ratioX = clientWidth / canvasWidth;\n                let ratioY = clientHeight / canvasHeight;\n\n                if (ratioX < ratioY)\n                {\n                    canvasWidth = clientWidth;\n                    canvasHeight = canvasHeight * ratioX;\n                }\n                else\n                {\n                    canvasWidth = canvasWidth * ratioY;\n                    canvasHeight = clientHeight;\n                }\n            }\n        }\n\n        canvasWidth = Math.floor(canvasWidth);\n        canvasHeight = Math.floor(canvasHeight);\n\n        if (typeof force === 'undefined')\n        {\n            force = canvas.clientWidth !== canvasWidth || canvas.clientHeight !== canvasHeight;\n        }\n\n        if (!force)\n        {\n            this.delayCanvasResize(canvasWidth, canvasHeight);\n            return;\n        }\n\n        let fontSize = Math.min(\n            canvasWidth / this._width,\n            canvasHeight / this._height) * 0.5;\n        // NOTE: Update the inner container for the default slotted children.\n        // To anchor children outside the canvas, use the slot named 'frame'.\n        this._innerElement.style.fontSize = `font-size: ${fontSize}em`;\n        if (force)\n        {\n            if (mode === MODE_SCALE)\n            {\n                canvas.width = this._width;\n                canvas.height = this._height;\n            }\n            else if (mode !== MODE_STRETCH)\n            {\n                canvas.width = canvasWidth;\n                canvas.height = canvasHeight;\n            }\n            let contentStyle = this._contentElement.style;\n            contentStyle.width = `${canvasWidth}px`;\n            contentStyle.height = `${canvasHeight}px`;\n\n            if (mode === MODE_FIT || mode === MODE_FILL)\n            {\n                this._width = canvasWidth;\n                this._height = canvasHeight;\n            }\n\n            this.dispatchEvent(new CustomEvent('resize', { detail: {\n                width: canvasWidth,\n                height: canvasHeight\n            }, bubbles: false, composed: true }));\n        }\n    }\n}\nDisplayPort.define();\n\nfunction upgradeProperty(element, propertyName)\n{\n    if (Object.prototype.hasOwnProperty.call(element, propertyName))\n    {\n        let value = element[propertyName];\n        delete element[propertyName];\n        element[propertyName] = value;\n    }\n}\n\nexport { DisplayPort };\n", "/**\n * @typedef {number} BindingIndex\n * \n * @typedef BindingOptions\n * @property {boolean} inverted\n * \n * @typedef InputReadOnly\n * @property {number} value\n * @property {boolean} polling\n */\n\nclass InputBase\n{\n    get polling()\n    {\n        let dt = performance.now() - this._lastPollingTime;\n        return dt < 1_000;\n    }\n\n    /** @abstract */\n    get value()\n    {\n        return 0;\n    }\n\n    /** @protected */\n    get size()\n    {\n        return this._size;\n    }\n\n    /**\n     * @abstract\n     * @param {number} size The initial binding state size.\n     */\n    constructor(size)\n    {\n        /** @private */\n        this._size = size;\n        /** @private */\n        this._lastPollingTime = Number.MIN_SAFE_INTEGER;\n    }\n\n    /**\n     * Called to internally resize to accomodate more/less\n     * binding states.\n     * \n     * @protected\n     * @param {number} newSize \n     */\n    resize(newSize)\n    {\n        this._size = newSize;\n    }\n\n    /**\n     * @abstract\n     * @param {BindingIndex} code \n     * @returns {number}\n     */\n    // eslint-disable-next-line no-unused-vars\n    getState(code)\n    {\n        throw new Error('Missing implementation.');\n    }\n\n    /**\n     * @abstract\n     * @param {BindingIndex} code \n     * @param {number} value \n     * @param {number} delta \n     */\n    // eslint-disable-next-line no-unused-vars\n    onUpdate(code, value, delta)\n    {\n        throw new Error('Missing implementation.');\n    }\n\n    /**\n     * @abstract\n     * @param {BindingIndex} code \n     * @param {number} value \n     */\n    // eslint-disable-next-line no-unused-vars\n    onStatus(code, value)\n    {\n        throw new Error('Missing implementation.');\n    }\n\n    /**\n     * Called to poll all bound states.\n     * \n     * @param {number} now \n     */\n    onPoll(now)\n    {\n        this._lastPollingTime = now;\n    }\n\n    /**\n     * Called to bind a state to the given binding code.\n     * \n     * @param {BindingIndex} code\n     * @param {BindingOptions} [opts]\n     */\n    // eslint-disable-next-line no-unused-vars\n    onBind(code, opts = {})\n    {\n        if (code >= this._size)\n        {\n            this.resize(code + 1);\n        }\n    }\n\n    /**\n     * Called to unbind all states.\n     */\n    onUnbind()\n    {\n        this.resize(0);\n    }\n}\n\n/**\n * @typedef {import('./InputBase.js').BindingIndex} BindingIndex The binding index\n * @typedef {import('./InputBase.js').BindingOptions} BindingOptions The binding options\n * \n * @typedef AxisBindingState\n * @property {number} value\n * @property {number} delta\n * @property {boolean} inverted\n * \n * @typedef AxisReadOnly\n * @property {number} value\n * @property {number} delta\n * @property {boolean} polling\n */\n\nclass Axis extends InputBase\n{\n    /** @returns {AxisBindingState} */\n    static createAxisBindingState()\n    {\n        return {\n            value: 0,\n            delta: 0,\n            inverted: false,\n        };\n    }\n\n    /** @returns {number} */\n    get delta()\n    {\n        return this._delta;\n    }\n\n    /**\n     * @override\n     * @returns {number}\n     */\n    get value()\n    {\n        return this._value;\n    }\n\n    /**\n     * @param {number} [size] \n     */\n    constructor(size = 0)\n    {\n        super(size);\n        let state = new Array();\n        for(let i = 0; i < size; ++i)\n        {\n            state.push(this.constructor.createAxisBindingState());\n        }\n        /**\n         * @private\n         * @type {Array<AxisBindingState>}\n         */\n        this._state = state;\n        /** @private */\n        this._value = 0;\n        /** @private */\n        this._delta = 0;\n    }\n\n    /**\n     * @override\n     * @protected\n     */\n    resize(newSize)\n    {\n        let oldState = this._state;\n        let oldSize = oldState.length;\n        let newState;\n        if (newSize <= oldSize)\n        {\n            newState = oldState.slice(0, newSize);\n        }\n        else\n        {\n            newState = oldState;\n            // Fill with new states\n            for(let i = oldSize; i < newSize; ++i)\n            {\n                newState.push(this.constructor.createAxisBindingState());\n            }\n        }\n        this._state = newState;\n        super.resize(newSize);\n    }\n\n    /**\n     * @override\n     * @param {BindingIndex} code\n     * @returns {number}\n     */\n    getState(code)\n    {\n        return this._state[code].value;\n    }\n\n    /**\n     * @override\n     * @param {number} now\n     */\n    onPoll(now)\n    {\n        let state = this._state;\n        let accumulatedValue = 0;\n        let accumulatedDelta = 0;\n        const len = state.length;\n        for(let i = 0; i < len; ++i)\n        {\n            let value = state[i];\n            accumulatedValue += value.value * (value.inverted ? -1 : 1);\n            accumulatedDelta += value.delta;\n            state[i].delta = 0;\n        }\n        this._value = accumulatedValue;\n        this._delta = accumulatedDelta;\n        super.onPoll(now);\n    }\n\n    /**\n     * @override\n     * @param {BindingIndex} code \n     * @param {number} value \n     * @param {number} delta \n     */\n    onUpdate(code, value, delta)\n    {\n        if (typeof value === 'undefined')\n        {\n            this.onAxisChange(code, delta);\n        }\n        else\n        {\n            this.onAxisMove(code, value, delta);\n        }\n    }\n\n    /**\n     * @override\n     * @param {BindingIndex} code \n     * @param {number} value \n     */\n    onStatus(code, value)\n    {\n        this.onAxisStatus(code, value);\n    }\n    \n    /**\n     * @override\n     * @param {BindingIndex} code\n     * @param {BindingOptions} [opts]\n     */\n    onBind(code, opts = {})\n    {\n        super.onBind(code, opts);\n        const { inverted = false } = opts;\n        let state = this._state;\n        state[code].inverted = inverted;\n    }\n\n    /**\n     * @protected\n     * @param {BindingIndex} code \n     * @param {number} x \n     * @param {number} dx \n     */\n    onAxisMove(code, x, dx)\n    {\n        let state = this._state[code];\n        state.value = x;\n        state.delta += dx;\n    }\n\n    /**\n     * @protected\n     * @param {BindingIndex} code \n     * @param {number} dx \n     */\n    onAxisChange(code, dx)\n    {\n        let state = this._state[code];\n        state.value += dx;\n        state.delta += dx;\n    }\n\n    /**\n     * @protected\n     * @param {BindingIndex} code \n     * @param {number} x \n     */\n    onAxisStatus(code, x)\n    {\n        let state = this._state[code];\n        let prev = state.value;\n        state.value = x;\n        state.delta = x - prev;\n    }\n}\n\n/**\n * @typedef {import('./InputBase.js').BindingIndex} BindingIndex\n * @typedef {import('./InputBase.js').BindingOptions} BindingOptions\n * \n * @typedef ButtonReadOnly\n * @property {number} value\n * @property {boolean} pressed\n * @property {boolean} repeated\n * @property {boolean} released\n * @property {boolean} down\n * @property {boolean} polling\n */\n\nconst CLEAR_POLL_BITS = 0b1111_0001;\nconst CLEAR_DOWN_STATE_BITS = 0b1111_1110;\nconst CLEAR_INVERTED_MODIFIER_BITS = 0b1110_1111;\n\nconst DOWN_STATE_BIT = 0b0000_0001;\nconst PRESSED_STATE_BIT = 0b0000_0010;\nconst REPEATED_STATE_BIT = 0b0000_0100;\nconst RELEASED_STATE_BIT = 0b0000_1000;\nconst INVERTED_MODIFIER_BIT = 0b0001_0000;\n\nclass Button extends InputBase\n{\n    /** @returns {boolean} */\n    get pressed()\n    {\n        return this._pressed;\n    }\n\n    /** @returns {boolean} */\n    get repeated()\n    {\n        return this._repeated;\n    }\n\n    /** @returns {boolean} */\n    get released()\n    {\n        return this._released;\n    }\n\n    /** @returns {boolean} */\n    get down()\n    {\n        return this._down;\n    }\n\n    /**\n     * @override\n     * @returns {number}\n     */\n    get value()\n    {\n        return this._value;\n    }\n    \n    /**\n     * @param {number} [size] \n     */\n    constructor(size = 0)\n    {\n        super(size);\n        /** @private */\n        this._state = new Uint8Array(size);\n        /** @private */\n        this._value = 0;\n        /** @private */\n        this._down = false;\n        /** @private */\n        this._pressed = false;\n        /** @private */\n        this._repeated = false;\n        /** @private */\n        this._released = false;\n    }\n\n    /**\n     * @override\n     * @protected\n     */\n    resize(newSize)\n    {\n        let oldState = this._state;\n        let oldSize = oldState.length;\n        let newState;\n        if (newSize <= oldSize)\n        {\n            newState = oldState.slice(0, newSize);\n        }\n        else\n        {\n            newState = new Uint8Array(newSize);\n            newState.set(oldState);\n        }\n        this._state = newState;\n        super.resize(newSize);\n    }\n\n    /**\n     * @override\n     * @param {BindingIndex} code\n     * @returns {number}\n     */\n    getState(code)\n    {\n        let state = this._state[code];\n        let modifier = state & INVERTED_MODIFIER_BIT ? -1 : 1;\n        let value = state & DOWN_STATE_BIT ? 1 : 0;\n        return value * modifier;\n    }\n\n    /**\n     * @override\n     * @param {number} now\n     */\n    onPoll(now)\n    {\n        let state = this._state;\n        let result = 0;\n        let down = 0;\n        let pressed = 0;\n        let repeated = 0;\n        let released = 0;\n        const len = state.length;\n        for(let i = 0; i < len; ++i)\n        {\n            let value = state[i];\n            let v = value & DOWN_STATE_BIT;\n            let m = value & INVERTED_MODIFIER_BIT;\n            down |= v;\n            pressed |= value & PRESSED_STATE_BIT;\n            repeated |= value & REPEATED_STATE_BIT;\n            released |= value & RELEASED_STATE_BIT;\n            result += (v ? 1 : 0) * (m ? -1 : 1);\n            state[i] &= CLEAR_POLL_BITS;\n        }\n        this._value = result;\n        this._down = down !== 0;\n        this._pressed = pressed !== 0;\n        this._repeated = repeated !== 0;\n        this._released = released !== 0;\n        super.onPoll(now);\n    }\n\n    /**\n     * @override\n     * @param {BindingIndex} code \n     * @param {number} value \n     * @param {number} delta \n     */\n    onUpdate(code, value, delta)\n    {\n        if (delta > 0)\n        {\n            this.onButtonPressed(code);\n        }\n        else\n        {\n            this.onButtonReleased(code);\n        }\n    }\n\n    /**\n     * @override\n     * @param {BindingIndex} code \n     * @param {number} value \n     */\n    onStatus(code, value)\n    {\n        this.onButtonStatus(code, value !== 0);\n    }\n\n    /**\n     * @override\n     * @param {BindingIndex} code\n     * @param {BindingOptions} [opts]\n     */\n    onBind(code, opts = {})\n    {\n        super.onBind(code, opts);\n        const { inverted = false } = opts;\n        let state = this._state;\n        if (inverted)\n        {\n            state[code] |= INVERTED_MODIFIER_BIT;\n        }\n        else\n        {\n            state[code] &= CLEAR_INVERTED_MODIFIER_BITS;\n        }\n    }\n\n    /**\n     * @protected\n     * @param {BindingIndex} code \n     */\n    onButtonPressed(code)\n    {\n        let state = this._state;\n        let bits = state[code];\n        if (!(bits & DOWN_STATE_BIT))\n        {\n            bits |= PRESSED_STATE_BIT;\n            bits |= DOWN_STATE_BIT;\n        }\n        bits |= REPEATED_STATE_BIT;\n        state[code] = bits;\n    }\n\n    /**\n     * @protected\n     * @param {BindingIndex} code \n     */\n    onButtonReleased(code)\n    {\n        let state = this._state;\n        let bits = state[code];\n        if (bits & DOWN_STATE_BIT)\n        {\n            bits |= RELEASED_STATE_BIT;\n            bits &= CLEAR_DOWN_STATE_BITS;\n        }\n        state[code] = bits;\n    }\n\n    /**\n     * @protected\n     * @param {BindingIndex} code \n     * @param {boolean} isDown\n     */\n    onButtonStatus(code, isDown)\n    {\n        let state = this._state;\n        let bits = state[code];\n        let wasDown = Boolean(bits & DOWN_STATE_BIT);\n        if (isDown)\n        {\n            bits |= DOWN_STATE_BIT;\n        }\n        else\n        {\n            bits &= CLEAR_DOWN_STATE_BITS;\n        }\n        if (wasDown && !isDown)\n        {\n            bits |= RELEASED_STATE_BIT;\n        }\n        if (!wasDown && isDown)\n        {\n            bits |= PRESSED_STATE_BIT;\n            bits |= REPEATED_STATE_BIT;\n        }\n        state[code] = bits;\n    }\n}\n\n/**\n * @typedef InputDeviceEvent\n * @property {EventTarget} target\n * @property {string} device\n * @property {string} code\n * @property {string} event\n * @property {number} [value] The input value of the triggered event (usually this is 1).\n * @property {number} [movement] The change in value for the triggered event.\n * @property {boolean} [control] Whether any control keys are down (false if up).\n * @property {boolean} [shift] Whether any shift keys are down (false if up).\n * @property {boolean} [alt] Whether any alt keys are down (false if up).\n * \n * @callback InputDeviceEventListener\n * @param {InputDeviceEvent} e\n */\n\n/**\n * A class that represents a raw system device that\n * emits input events.\n */\nclass InputDevice\n{\n    /** @abstract */\n    // eslint-disable-next-line no-unused-vars\n    static isAxis(code)\n    {\n        return false;\n    }\n\n    /** @abstract */\n    // eslint-disable-next-line no-unused-vars\n    static isButton(code)\n    {\n        return false;\n    }\n\n    /**\n     * @param {string} deviceName \n     * @param {EventTarget} eventTarget \n     */\n    constructor(deviceName, eventTarget)\n    {\n        if (!eventTarget)\n        {\n            throw new Error(`Missing event target for device ${deviceName}.`);\n        }\n\n        this.name = deviceName;\n        this.eventTarget = eventTarget;\n\n        /**\n         * @private\n         * @type {Record<string, Array<InputDeviceEventListener>>}\n         */\n        this.listeners = {\n            input: []\n        };\n    }\n\n    /**\n     * @param {EventTarget} eventTarget \n     */\n    setEventTarget(eventTarget)\n    {\n        if (!eventTarget)\n        {\n            throw new Error(`Missing event target for device ${this.name}.`);\n        }\n        this.eventTarget = eventTarget;\n    }\n\n    destroy()\n    {\n        let listeners = this.listeners;\n        for(let event in listeners)\n        {\n            listeners[event].length = 0;\n        }\n    }\n\n    /**\n     * @param {string} event \n     * @param {InputDeviceEventListener} listener \n     */\n    addEventListener(event, listener)\n    {\n        let listeners = this.listeners;\n        if (event in listeners)\n        {\n            listeners[event].push(listener);\n        }\n        else\n        {\n            listeners[event] = [listener];\n        }\n    }\n\n    /**\n     * @param {string} event \n     * @param {InputDeviceEventListener} listener \n     */\n    removeEventListener(event, listener)\n    {\n        let listeners = this.listeners;\n        if (event in listeners)\n        {\n            let list = listeners[event];\n            let i = list.indexOf(listener);\n            if (i >= 0)\n            {\n                list.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * @param {InputDeviceEvent} e\n     * @returns {boolean} Whether the input event should be consumed.\n     */\n    dispatchInputEvent(e)\n    {\n        let flag = 0;\n        for(let listener of this.listeners.input)\n        {\n            flag |= listener(e);\n        }\n        return Boolean(flag);\n    }\n}\n\n/** @typedef {import('./InputDevice.js').InputDeviceEvent} InputDeviceEvent */\n\n/**\n * A class that listens to the keyboard events from the event target and\n * transforms the events into a valid {@link InputEvent} for the added\n * listeners.\n * \n * - This device uses the `event.code` standard to reference each key.\n * - Use this to help you determine the key code: https://keycode.info/\n */\nclass KeyboardDevice extends InputDevice\n{\n    /** @override */\n    // eslint-disable-next-line no-unused-vars\n    static isAxis(keyCode)\n    {\n        return false;\n    }\n\n    /** @override */\n    // eslint-disable-next-line no-unused-vars\n    static isButton(keyCode)\n    {\n        return true;\n    }\n\n    /**\n     * Constructs a listening keyboard with no listeners (yet).\n     * \n     * @param {string} deviceName\n     * @param {EventTarget} eventTarget \n     * @param {object} [opts] Any additional options.\n     * @param {boolean} [opts.ignoreRepeat] Whether to\n     * accept repeated key events.\n     */\n    constructor(deviceName, eventTarget, opts = {})\n    {\n        super(deviceName, eventTarget);\n\n        const { ignoreRepeat = true } = opts;\n        this.ignoreRepeat = ignoreRepeat;\n\n        /**\n         * @private\n         * @type {InputDeviceEvent}\n         */\n        this._eventObject = {\n            target: eventTarget,\n            device: deviceName,\n            code: '',\n            event: '',\n            // Key values\n            value: 0,\n            control: false,\n            shift: false,\n            alt: false,\n        };\n\n        /** @private */\n        this.onKeyDown = this.onKeyDown.bind(this);\n        /** @private */\n        this.onKeyUp = this.onKeyUp.bind(this);\n\n        eventTarget.addEventListener('keydown', this.onKeyDown);\n        eventTarget.addEventListener('keyup', this.onKeyUp);\n    }\n\n    /** @override */\n    setEventTarget(eventTarget)\n    {\n        if (this.eventTarget) this.destroy();\n        super.setEventTarget(eventTarget);\n        eventTarget.addEventListener('keydown', this.onKeyDown);\n        eventTarget.addEventListener('keyup', this.onKeyUp);\n    }\n\n    /** @override */\n    destroy()\n    {\n        let eventTarget = this.eventTarget;\n        eventTarget.removeEventListener('keydown', this.onKeyDown);\n        eventTarget.removeEventListener('keyup', this.onKeyUp);\n        super.destroy();\n    }\n\n    /**\n     * @private\n     * @param {KeyboardEvent} e\n     */\n    onKeyDown(e)\n    {\n        if (e.repeat && this.ignoreRepeat)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n\n        let event = this._eventObject;\n        // We care more about location (code) than print char (key).\n        event.code = e.code;\n        event.event = 'pressed';\n        event.value = 1;\n        event.control = e.ctrlKey;\n        event.shift = e.shiftKey;\n        event.alt = e.altKey;\n\n        let result = this.dispatchInputEvent(event);\n        if (result)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n\n    /**\n     * @private\n     * @param {KeyboardEvent} e\n     */\n    onKeyUp(e)\n    {\n        /** @type {InputDeviceEvent} */\n        let event = this._eventObject;\n        // We care more about location (code) than print char (key).\n        event.code = e.code;\n        event.event = 'released';\n        event.value = 1;\n        event.control = e.ctrlKey;\n        event.shift = e.shiftKey;\n        event.alt = e.altKey;\n\n        let result = this.dispatchInputEvent(event);\n        if (result)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n}\n\n/**\n * @typedef {import('./InputDevice.js').InputDeviceEvent} InputDeviceEvent\n */\n\nconst DEFAULT_LINE_PIXELS = 10;\nconst DEFAULT_PAGE_PIXELS = 100;\n\n/**\n * A class that listens to the mouse events from the event target and\n * transforms the events into a valid {@link InputDeviceEvent} for its\n * listeners.\n * \n * - PosX\n * - PosY\n * - WheelX\n * - WheelY\n * - WheelZ\n * - Button0 (left button)\n * - Button1 (middle button)\n * - Button2 (right button)\n * - Button3 (next button)\n * - Button4 (back button)\n */\nclass MouseDevice extends InputDevice\n{\n    /** @override */\n    static isAxis(keyCode)\n    {\n        return keyCode === 'PosX'\n            || keyCode === 'PosY'\n            || keyCode === 'WheelX'\n            || keyCode === 'WheelY'\n            || keyCode === 'WheelZ';\n    }\n\n    /** @override */\n    static isButton(keyCode)\n    {\n        return !this.isAxis(keyCode);\n    }\n\n    /**\n     * Constructs a listening mouse with no listeners (yet).\n     * \n     * @param {string} deviceName\n     * @param {EventTarget} eventTarget\n     * @param {Object} [opts] Any additional options.\n     * @param {Boolean} [opts.eventsOnFocus=true] Whether to capture events only when it has focus.\n     */\n    constructor(deviceName, eventTarget, opts = {})\n    {\n        super(deviceName, eventTarget);\n\n        const { eventsOnFocus = true } = opts;\n        this.eventsOnFocus = eventsOnFocus;\n        this.canvasTarget = this.getCanvasFromEventTarget(eventTarget);\n\n        /** @private */\n        this._downHasFocus = false;\n\n        /**\n         * @private\n         * @type {InputDeviceEvent}\n         */\n        this._eventObject = {\n            target: eventTarget,\n            device: deviceName,\n            code: '',\n            event: '',\n            // Button values\n            value: 0,\n            control: false,\n            shift: false,\n            alt: false,\n        };\n        /**\n         * @private\n         * @type {InputDeviceEvent}\n         */\n        this._positionObject = {\n            target: eventTarget,\n            device: deviceName,\n            code: '',\n            event: 'move',\n            // Pos values\n            value: 0,\n            movement: 0,\n        };\n        /**\n         * @private\n         * @type {InputDeviceEvent}\n         */\n        this._wheelObject = {\n            target: eventTarget,\n            device: deviceName,\n            code: '',\n            event: 'wheel',\n            // Wheel values\n            movement: 0,\n        };\n\n        /** @private */\n        this.onMouseDown = this.onMouseDown.bind(this);\n        /** @private */\n        this.onMouseUp = this.onMouseUp.bind(this);\n        /** @private */\n        this.onMouseMove = this.onMouseMove.bind(this);\n        /** @private */\n        this.onContextMenu = this.onContextMenu.bind(this);\n        /** @private */\n        this.onWheel = this.onWheel.bind(this);\n        \n        eventTarget.addEventListener('mousedown', this.onMouseDown);\n        eventTarget.addEventListener('contextmenu', this.onContextMenu);\n        eventTarget.addEventListener('wheel', this.onWheel);\n        document.addEventListener('mousemove', this.onMouseMove);\n        document.addEventListener('mouseup', this.onMouseUp);\n    }\n\n    /** @override */\n    setEventTarget(eventTarget)\n    {\n        if (this.eventTarget) this.destroy();\n        super.setEventTarget(eventTarget);\n        this.canvasTarget = this.getCanvasFromEventTarget(eventTarget);\n        eventTarget.addEventListener('mousedown', this.onMouseDown);\n        eventTarget.addEventListener('contextmenu', this.onContextMenu);\n        eventTarget.addEventListener('wheel', this.onWheel);\n        document.addEventListener('mousemove', this.onMouseMove);\n        document.addEventListener('mouseup', this.onMouseUp);\n    }\n\n    /** @override */\n    destroy()\n    {\n        let eventTarget = this.eventTarget;\n        eventTarget.removeEventListener('mousedown', this.onMouseDown);\n        eventTarget.removeEventListener('contextmenu', this.onContextMenu);\n        eventTarget.removeEventListener('wheel', this.onWheel);\n        document.removeEventListener('mousemove', this.onMouseMove);\n        document.removeEventListener('mouseup', this.onMouseUp);\n        super.destroy();\n    }\n\n    setPointerLock(force = true)\n    {\n        if (force)\n        {\n            this.eventTarget.requestPointerLock();\n        }\n        else\n        {\n            this.eventTarget.exitPointerLock();\n        }\n    }\n\n    hasPointerLock()\n    {\n        return document.pointerLockElement === this.eventTarget;\n    }\n\n    /**\n     * @private\n     * @param {MouseEvent} e\n     */\n    onMouseDown(e)\n    {\n        this._downHasFocus = true;\n\n        let event = this._eventObject;\n        // We care more about location (code) than print char (key).\n        event.code = 'Button' + e.button;\n        event.event = 'pressed';\n        event.value = 1;\n        event.control = e.ctrlKey;\n        event.shift = e.shiftKey;\n        event.alt = e.altKey;\n\n        let result = this.dispatchInputEvent(event);\n        if (result)\n        {\n            // Make sure it has focus first.\n            if (document.activeElement === this.eventTarget)\n            {\n                e.preventDefault();\n                e.stopPropagation();\n                return false;\n            }\n        }\n    }\n\n    /**\n     * @private\n     * @param {MouseEvent} e\n     */\n    onContextMenu(e)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    /**\n     * @private\n     * @param {WheelEvent} e\n     */\n    onWheel(e)\n    {\n        let dx, dy, dz;\n        switch(e.deltaMode)\n        {\n            case WheelEvent.DOM_DELTA_LINE:\n                dx = e.deltaX * DEFAULT_LINE_PIXELS;\n                dy = e.deltaY * DEFAULT_LINE_PIXELS;\n                dz = e.deltaZ * DEFAULT_LINE_PIXELS;\n                break;\n            case WheelEvent.DOM_DELTA_PAGE:\n                dx = e.deltaX * DEFAULT_PAGE_PIXELS;\n                dy = e.deltaY * DEFAULT_PAGE_PIXELS;\n                dz = e.deltaZ * DEFAULT_PAGE_PIXELS;\n                break;\n            case WheelEvent.DOM_DELTA_PIXEL:\n            default:\n                dx = e.deltaX;\n                dy = e.deltaY;\n                dz = e.deltaZ;\n                break;\n        }\n\n        let result = 0;\n        let event = this._wheelObject;\n        event.code = 'WheelX';\n        event.movement = dx;\n        result |= this.dispatchInputEvent(event);\n        event.code = 'WheelY';\n        event.movement = dy;\n        result |= this.dispatchInputEvent(event);\n        event.code = 'WheelZ';\n        event.movement = dz;\n        result |= this.dispatchInputEvent(event);\n        if (result)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n\n    /**\n     * @private\n     * @param {MouseEvent} e\n     */\n    onMouseUp(e)\n    {\n        // Make sure mouse down was pressed before this (with focus).\n        if (!this._downHasFocus) return;\n        this._downHasFocus = false;\n\n        let event = this._eventObject;\n        // We care more about location (code) than print char (key).\n        event.code = 'Button' + e.button;\n        event.event = 'released';\n        event.value = 1;\n        event.control = e.ctrlKey;\n        event.shift = e.shiftKey;\n        event.alt = e.altKey;\n\n        let result = this.dispatchInputEvent(event);\n        if (result)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n\n    /**\n     * @private\n     * @param {MouseEvent} e\n     */\n    onMouseMove(e)\n    {\n        if (this.eventsOnFocus && document.activeElement !== this.eventTarget) return;\n\n        const element = this.canvasTarget;\n        const { clientWidth, clientHeight } = element;\n        const rect = element.getBoundingClientRect();\n    \n        let dx = e.movementX / clientWidth;\n        let dy = e.movementY / clientHeight;\n        let x = (e.clientX - rect.left) / clientWidth;\n        let y = (e.clientY - rect.top) / clientHeight;\n    \n        let event = this._positionObject;\n        event.code = 'PosX';\n        event.value = x;\n        event.movement = dx;\n        this.dispatchInputEvent(event);\n        event.code = 'PosY';\n        event.value = y;\n        event.movement = dy;\n        this.dispatchInputEvent(event);\n    }\n    \n    /** @private */\n    getCanvasFromEventTarget(eventTarget)\n    {\n        if (eventTarget instanceof HTMLCanvasElement)\n        {\n            return eventTarget;\n        }\n        else\n        {\n            return eventTarget.canvas\n                || eventTarget.querySelector('canvas')\n                || (eventTarget.shadowRoot && eventTarget.shadowRoot.querySelector('canvas'))\n                || eventTarget;\n        }\n    }\n}\n\nvar INNER_HTML$1 = \"<kbd>\\n    <span id=\\\"name\\\"><slot></slot></span>\\n    <span id=\\\"value\\\" class=\\\"hidden\\\"></span>\\n</kbd>\\n\";\n\nvar INNER_STYLE$1 = \"kbd {\\n    position: relative;\\n    display: inline-block;\\n    border-radius: 3px;\\n    border: 1px solid #888888;\\n    font-size: 0.85em;\\n    font-weight: 700;\\n    text-rendering: optimizeLegibility;\\n    line-height: 12px;\\n    height: 14px;\\n    padding: 2px 4px;\\n    color: #444444;\\n    background-color: #eeeeee;\\n    box-shadow: inset 0 -3px 0 #aaaaaa;\\n    overflow: hidden;\\n}\\n\\nkbd:empty::after {\\n    content: \\\"<?>\\\";\\n    opacity: 0.6;\\n}\\n\\n.disabled {\\n    opacity: 0.6;\\n    box-shadow: none;\\n    background-color: #aaaaaa;\\n}\\n\\n.hidden {\\n    display: none;\\n}\\n\\n#value {\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    right: 0;\\n    font-size: 0.85em;\\n    padding: 0 4px;\\n    padding-top: 2px;\\n    color: #cccccc;\\n    background-color: #333333;\\n    box-shadow: inset 0 3px 0 #222222;\\n}\\n\";\n\nclass InputCode extends HTMLElement\n{\n    /** @protected */\n    static get [Symbol.for('templateNode')]()\n    {\n        let t = document.createElement('template');\n        t.innerHTML = INNER_HTML$1;\n        Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n        return t;\n    }\n\n    /** @protected */\n    static get [Symbol.for('styleNode')]()\n    {\n        let t = document.createElement('style');\n        t.innerHTML = INNER_STYLE$1;\n        Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n        return t;\n    }\n\n    static define(customElements = window.customElements)\n    {\n        customElements.define('input-code', this);\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'name',\n            'value',\n            'disabled'\n        ];\n    }\n    \n    /** @returns {boolean} */\n    get disabled()\n    {\n        return this._disabled;\n    }\n\n    set disabled(value)\n    {\n        this.toggleAttribute('disabled', value);\n    }\n\n    /** @returns {string} */\n    get value()\n    {\n        return this._value;\n    }\n\n    set value(value)\n    {\n        this.setAttribute('value', value);\n    }\n\n    /** @returns {string} */\n    get name()\n    {\n        return this._name;\n    }\n\n    set name(value)\n    {\n        this.setAttribute('name', value);\n    }\n\n    constructor()\n    {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[Symbol.for('templateNode')].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[Symbol.for('styleNode')].cloneNode(true));\n\n        /** @private */\n        this._name = '';\n        /** @private */\n        this._value = '';\n        /** @private */\n        this._disabled = false;\n\n        /** @private */\n        this._kbdElement = this.shadowRoot.querySelector('kbd');\n        /** @private */\n        this._nameElement = this.shadowRoot.querySelector('#name');\n        /** @private */\n        this._valueElement = this.shadowRoot.querySelector('#value');\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch (attribute)\n        {\n            case 'name':\n                this._name = value;\n                this._nameElement.textContent = value;\n                break;\n            case 'value':\n                this._value = value;\n                if (value !== null)\n                {\n                    this._valueElement.classList.toggle('hidden', false);\n                    this._valueElement.textContent = value;\n                    this._kbdElement.style.paddingRight = `${this._valueElement.clientWidth + 4}px`;\n                }\n                else\n                {\n                    this._valueElement.classList.toggle('hidden', true);\n                }\n                break;\n            case 'disabled':\n                this._disabled = value !== null;\n                this._kbdElement.classList.toggle('disabled', value !== null);\n                break;\n        }\n    }\n\n    /** @override */\n    connectedCallback()\n    {\n        if (Object.prototype.hasOwnProperty.call(this, 'name'))\n        {\n            let value = this.name;\n            delete this.name;\n            this.name = value;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(this, 'value'))\n        {\n            let value = this.value;\n            delete this.value;\n            this.value = value;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(this, 'disabled'))\n        {\n            let value = this.disabled;\n            delete this.disabled;\n            this.disabled = value;\n        }\n    }\n}\nInputCode.define();\n\nvar INNER_HTML = \"<table>\\n    <thead>\\n        <tr class=\\\"tableHeader\\\">\\n            <th colspan=3>\\n                <span class=\\\"tableTitle\\\">\\n                    <label id=\\\"title\\\">\\n                        input-source\\n                    </label>\\n                    <span id=\\\"slotContainer\\\">\\n                        <slot></slot>\\n                    </span>\\n                    <p>\\n                        <label for=\\\"poll\\\">poll</label>\\n                        <output id=\\\"poll\\\"></output>\\n                    </p>\\n                    <p>\\n                        <label for=\\\"focus\\\">focus</label>\\n                        <output id=\\\"focus\\\"></output>\\n                    </p>\\n                </span>\\n            </th>\\n        </tr>\\n        <tr class=\\\"colHeader\\\">\\n            <th>name</th>\\n            <th>value</th>\\n            <th>key</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n    </tbody>\\n</table>\\n\";\n\nvar INNER_STYLE = \":host {\\n    display: block;\\n}\\n\\ntable {\\n    border-collapse: collapse;\\n    font-family: monospace;\\n}\\n\\ntable,\\nth,\\ntd {\\n    border: 1px solid #666666;\\n}\\n\\nth,\\ntd {\\n    padding: 5px 10px;\\n}\\n\\ntd {\\n    text-align: center;\\n}\\n\\nthead th {\\n    padding: 0;\\n}\\n\\n.colHeader > th {\\n    font-size: 0.8em;\\n    padding: 0 10px;\\n    letter-spacing: 3px;\\n    background-color: #aaaaaa;\\n    color: #666666;\\n}\\n\\ntbody output {\\n    border-radius: 0.3em;\\n    padding: 3px;\\n}\\n\\ntr:not(.primary) .name,\\ntr:not(.primary) .value {\\n    opacity: 0.3;\\n}\\n\\ntr:nth-child(2n) {\\n    background-color: #eeeeee;\\n}\\n\\n.tableHeader {\\n    color: #666666;\\n}\\n\\n.tableTitle {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    padding: 4px;\\n}\\n\\n#slotContainer {\\n    flex: 1;\\n}\\n\\np {\\n    display: inline;\\n    margin: 0;\\n    padding: 0;\\n    padding-right: 10px;\\n}\\n\\n#poll:empty::after,\\n#focus:empty::after {\\n    content: \\\"\u2717\\\";\\n    color: #ff0000;\\n}\\n\";\n\n/**\n * @callback OnPollCallback\n * @param {number} now\n * \n * @typedef Pollable\n * @property {OnPollCallback} onPoll\n */\n\n/**\n * A class to automatically call onPoll() on animation frame.\n */\nclass AutoPoller\n{\n    /**\n     * @param {Pollable} pollable \n     */\n    constructor(pollable)\n    {\n        /** @private */\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        /** @private */\n        this.animationFrameHandle = null;\n        /** @private */\n        this.pollable = pollable;\n    }\n\n    get running()\n    {\n        return this.animationFrameHandle !== null;\n    }\n\n    start()\n    {\n        let handle = this.animationFrameHandle;\n        if (handle) cancelAnimationFrame(handle);\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    stop()\n    {\n        let handle = this.animationFrameHandle;\n        if (handle) cancelAnimationFrame(handle);\n        this.animationFrameHandle = null;\n    }\n    \n    /** @private */\n    onAnimationFrame(now)\n    {\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n        this.pollable.onPoll(now);\n    }\n}\n\n/** @typedef {import('./InputBindings.js').InputBindings} InputBindings */\n\n/**\n * A class to listen and transform device events through\n * each mapped bindings into an input state.\n * \n * It requires onPoll() to be called to keep the input\n * state up to date. This is usually called from \n * requestAnimationFrame() or using the AutoPoller.\n */\nclass DeviceInputAdapter\n{\n    /**\n     * @param {InputBindings} bindings \n     */\n    constructor(bindings)\n    {\n        /** @private */\n        this.onInput = this.onInput.bind(this);\n        this.onPoll = this.onPoll.bind(this);\n        \n        this.bindings = bindings;\n    }\n\n    onPoll(now)\n    {\n        for(let input of this.bindings.getInputs())\n        {\n            input.onPoll(now);\n        }\n    }\n\n    onInput(e)\n    {\n        const {\n            device, code, event,\n            value, movement,\n            // eslint-disable-next-line no-unused-vars\n            control, shift, alt,\n        } = e;\n        let bindings = this.bindings.getBindings(device, code);\n        switch(event)\n        {\n            case 'pressed':\n                for(let { input, index } of bindings)\n                {\n                    input.onUpdate(index, 1, 1);\n                }\n                break;\n            case 'released':\n                for(let { input, index } of bindings)\n                {\n                    input.onUpdate(index, 0, -1);\n                }\n                break;\n            case 'move':\n                for(let { input, index } of bindings)\n                {\n                    input.onUpdate(index, value, movement);\n                }\n                break;\n            case 'wheel':\n                for(let { input, index } of bindings)\n                {\n                    input.onUpdate(index, undefined, movement);\n                }\n                break;\n        }\n        return bindings.length > 0;\n    }\n}\n\n/**\n * @typedef {import('./axisbutton/InputBase.js').InputBase} InputBase\n * @typedef {import('./axisbutton/InputBase.js').BindingOptions} BindingOptions\n * \n * @typedef {string} DeviceName\n * @typedef {string} KeyCode\n */\n\nclass Binding\n{\n    /**\n     * @param {DeviceName} device The name of the device\n     * @param {KeyCode} code The key code for the device\n     * @param {InputBase} input The parent input\n     * @param {number} index The binding index for the input\n     */\n    constructor(device, code, input, index)\n    {\n        /** Name of the device */\n        this.device = device;\n        /** The key code for the device */\n        this.code = code;\n        /** The parent input */\n        this.input = input;\n        /** The binding index for the input */\n        this.index = index;\n    }\n}\n\n/**\n * A class that maps inputs to their respective key bindings.\n * \n * This does not handle input state (refer to InputBase.js) nor\n * input events (refer to InputDevice.js). It is only responsible\n * for the redirection of key codes to their bound input. Usually\n * this is used together with the interfaces referenced above.\n */\nclass InputBindings\n{\n    constructor()\n    {\n        /**\n         * @private\n         * @type {Record<DeviceName, Record<KeyCode, Array<Binding>>}\n         */\n        this.bindingMap = {};\n        /** \n         * @private\n         * @type {Map<InputBase, Array<Binding>>}\n         */\n        this.inputMap = new Map();\n    }\n\n    clear()\n    {\n        for(let input of this.inputMap.keys())\n        {\n            input.onUnbind();\n        }\n        this.inputMap.clear();\n        this.bindingMap = {};\n    }\n\n    /**\n     * @param {InputBase} input \n     * @param {DeviceName} device \n     * @param {KeyCode} code \n     * @param {BindingOptions} [opts]\n     */\n    bind(input, device, code, opts = {})\n    {\n        let binding;\n\n        let inputMap = this.inputMap;\n        if (inputMap.has(input))\n        {\n            let bindings = inputMap.get(input);\n            let index = input.size;\n            input.onBind(index, opts);\n            binding = new Binding(device, code, input, index);\n            bindings.push(binding);\n        }\n        else\n        {\n            let bindings = [];\n            inputMap.set(input, bindings);\n            let index = 0;\n            input.onBind(index, opts);\n            binding = new Binding(device, code, input, index);\n            bindings.push(binding);\n        }\n\n        let bindingMap = this.bindingMap;\n        if (device in bindingMap)\n        {\n            if (code in bindingMap[device])\n            {\n                bindingMap[device][code].push(binding);\n            }\n            else\n            {\n                bindingMap[device][code] = [binding];\n            }\n        }\n        else\n        {\n            bindingMap[device] = { [code]: [binding] };\n        }\n    }\n\n    /**\n     * @param {InputBase} input \n     */\n    unbind(input)\n    {\n        let inputMap = this.inputMap;\n        if (inputMap.has(input))\n        {\n            let bindingMap = this.bindingMap;\n            let bindings = inputMap.get(input);\n            for(let binding of bindings)\n            {\n                let { device, code } = binding;\n                let boundList = bindingMap[device][code];\n                let i = boundList.indexOf(binding);\n                boundList.splice(i, 1);\n            }\n            bindings.length = 0;\n            input.onUnbind();\n            inputMap.delete(input);\n        }\n    }\n\n    /**\n     * @param {InputBase} input\n     * @returns {boolean}\n     */\n    isBound(input)\n    {\n        return this.inputMap.has(input);\n    }\n    \n    /** @returns {IterableIterator<InputBase>} */\n    getInputs()\n    {\n        return this.inputMap.keys();\n    }\n\n    /** @returns {IterableIterator<Binding>} */\n    getBindingsByInput(input)\n    {\n        return this.inputMap.get(input);\n    }\n\n    /**\n     * @param {DeviceName} device \n     * @param {KeyCode} code \n     * @returns {IterableIterator<Binding>}\n     */\n    getBindings(device, code)\n    {\n        let deviceCodeBindings = this.bindingMap;\n        if (device in deviceCodeBindings)\n        {\n            let codeBindings = deviceCodeBindings[device];\n            if (code in codeBindings)\n            {\n                return codeBindings[code];\n            }\n        }\n        return [];\n    }\n}\n\n/**\n * @typedef {import('../device/InputDevice.js').InputDevice} InputDevice\n * @typedef {import('../device/InputDevice.js').InputDeviceEvent} InputDeviceEvent\n * @typedef {import('../axisbutton/InputBase.js').InputBase} InputBase\n * @typedef {import('../InputBindings.js').DeviceName} DeviceName\n * @typedef {import('../InputBindings.js').KeyCode} KeyCode\n * @typedef {import('../InputBindings.js').BindingOptions} BindingOptions\n * \n * @typedef {string} InputName\n */\n\n/**\n * @typedef {'bind'|'unbind'|'focus'|'blur'} InputContextEventType\n * @typedef {(e: InputContextEvent) => boolean} InputContextEventListener\n * @typedef InputContextEvent\n * @property {InputContextEventType} type\n */\n\nclass InputContext\n{\n    /**\n     * @param {EventTarget} eventTarget \n     * @param {object} [opts]\n     */\n    constructor(eventTarget, opts = {})\n    {\n        /**\n         * @type {Record<string, Axis|Button>}\n         */\n        this.inputs = {};\n        /**\n         * @type {Array<InputDevice>}\n         */\n        this.devices = [\n            new MouseDevice('Mouse', eventTarget),\n            new KeyboardDevice('Keyboard', eventTarget),\n        ];\n        this.bindings = new InputBindings();\n        this.adapter = new DeviceInputAdapter(this.bindings);\n        this.autopoller = new AutoPoller(this.adapter);\n\n        /** @protected */\n        this.eventTarget = eventTarget;\n        /** @protected */\n        this.anyButton = new Button(1);\n        /** @protected */\n        this.anyButtonDevice = '';\n        /** @protected */\n        this.anyButtonCode = '';\n        /** @protected */\n        this.anyAxis = new Axis(1);\n        /** @protected */\n        this.anyAxisDevice = '';\n        /** @protected */\n        this.anyAxisCode = '';\n\n        /**\n         * @private\n         * @type {Record<InputContextEventType, Array<InputContextEventListener>>}\n         */\n        this.listeners = {\n            bind: [],\n            unbind: [],\n            focus: [],\n            blur: [],\n        };\n\n        // Prepare listeners\n        /** @private */\n        this.onInput = this.onInput.bind(this);\n        /** @private */\n        this.onEventTargetBlur = this.onEventTargetBlur.bind(this);\n        /** @private */\n        this.onEventTargetFocus = this.onEventTargetFocus.bind(this);\n\n        // Attach listeners\n        eventTarget.addEventListener('focus', this.onEventTargetFocus);\n        eventTarget.addEventListener('blur', this.onEventTargetBlur);\n        for(let device of this.devices)\n        {\n            device.addEventListener('input', this.onInput);\n        }\n    }\n\n    get autopoll()\n    {\n        return this.autopoller.running;\n    }\n\n    set autopoll(value = undefined)\n    {\n        this.toggleAutoPoll(value);\n    }\n\n    destroy()\n    {\n        let listeners = this.listeners;\n        for(let event in listeners)\n        {\n            listeners[event].length = 0;\n        }\n        if (this.autopoller.running)\n        {\n            this.autopoller.stop();\n        }\n        for(let device of this.devices)\n        {\n            device.removeEventListener('input', this.onInput);\n            device.destroy();\n        }\n        let eventTarget = this.eventTarget;\n        eventTarget.removeEventListener('focus', this.onEventTargetFocus);\n        eventTarget.removeEventListener('blur', this.onEventTargetBlur);\n    }\n\n    setEventTarget(eventTarget)\n    {\n        let oldEventTarget = this.eventTarget;\n        oldEventTarget.removeEventListener('focus', this.onEventTargetFocus);\n        oldEventTarget.removeEventListener('blur', this.onEventTargetBlur);\n        \n        this.eventTarget = eventTarget;\n        for(let device of this.devices)\n        {\n            device.setEventTarget(eventTarget);\n        }\n        eventTarget.addEventListener('focus', this.onEventTargetFocus);\n        eventTarget.addEventListener('blur', this.onEventTargetBlur);\n    }\n\n    toggleAutoPoll(force = undefined)\n    {\n        let current = this.autopoller.running;\n        let next = typeof force === 'undefined' ? !current : Boolean(force);\n        if (next === current) return;\n        if (next)\n        {\n            this.autopoller.start();\n        }\n        else\n        {\n            this.autopoller.stop();\n        }\n    }\n\n    /**\n     * @param {InputContextEventType} event\n     * @param {InputContextEventListener} listener \n     */\n    addEventListener(event, listener)\n    {\n        let listeners = this.listeners;\n        if (event in listeners)\n        {\n            listeners[event].push(listener);\n        }\n        else\n        {\n            listeners[event] = [listener];\n        }\n    }\n\n    /**\n     * @param {InputContextEventType} event \n     * @param {InputContextEventListener} listener\n     */\n    removeEventListener(event, listener)\n    {\n        let listeners = this.listeners;\n        if (event in listeners)\n        {\n            let list = listeners[event];\n            let i = list.indexOf(listener);\n            if (i >= 0)\n            {\n                list.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * @param {InputContextEvent} e\n     * @returns {boolean} Whether the event should be consumed.\n     */\n    dispatchEvent(e)\n    {\n        const { type } = e;\n        let flag = 0;\n        for(let listener of this.listeners[type])\n        {\n            flag |= listener(e);\n        }\n        return Boolean(flag);\n    }\n\n    /**\n     * @param {number} now \n     */\n    poll(now = performance.now())\n    {\n        if (this.autopoller.running)\n        {\n            throw new Error('Should not manually poll() while autopolling.');\n        }\n        this.onPoll(now);\n    }\n\n    /**\n     * @private\n     * @param {InputDeviceEvent} e\n     */\n    onInput(e)\n    {\n        let result = this.adapter.onInput(e);\n        switch(e.event)\n        {\n            case 'pressed':\n                this.anyButtonDevice = e.device;\n                this.anyButtonCode = e.code;\n                this.anyButton.onUpdate(0, 1, 1);\n                break;\n            case 'released':\n                this.anyButtonDevice = e.device;\n                this.anyButtonCode = e.code;\n                this.anyButton.onUpdate(0, 0, -1);\n                break;\n            case 'move':\n            case 'wheel':\n                this.anyAxisDevice = e.device;\n                this.anyAxisCode = e.code;\n                this.anyAxis.onUpdate(0, e.value, e.movement);\n                break;\n        }\n        return result;\n    }\n\n    /**\n     * @private\n     * @param {number} now\n     */\n    onPoll(now)\n    {\n        this.adapter.onPoll(now);\n        this.anyButton.onPoll(now);\n        this.anyAxis.onPoll(now);\n    }\n\n    /** @private */\n    onBind()\n    {\n        this.dispatchEvent({\n            type: 'bind'\n        });\n    }\n\n    /** @private */\n    onUnbind()\n    {\n        this.dispatchEvent({\n            type: 'unbind'\n        });\n    }\n\n    /** @private */\n    onEventTargetFocus()\n    {\n        this.dispatchEvent({\n            type: 'focus'\n        });\n    }\n\n    /** @private */\n    onEventTargetBlur()\n    {\n        // Clear all input states.\n        for(let input of this.bindings.getInputs())\n        {\n            input.onStatus(0, 0);\n        }\n        this.anyButton.onStatus(0, 0);\n        this.anyAxis.onStatus(0, 0);\n        this.dispatchEvent({\n            type: 'blur'\n        });\n    }\n\n    /**\n     * @param {InputName} name \n     * @param {DeviceName} device \n     * @param {KeyCode} code \n     * @param {BindingOptions} [opts] \n     */\n    bindButton(name, device, code, opts = undefined)\n    {\n        let input;\n        if (this.hasButton(name))\n        {\n            input = this.getButton(name);\n        }\n        else\n        {\n            input = new Button(1);\n            this.inputs[name] = input;\n        }\n        this.bindings.bind(input, device, code, opts);\n        this.onBind();\n    }\n\n    /**\n     * @param {string} name \n     * @param {DeviceName} device \n     * @param {KeyCode} code \n     * @param {BindingOptions} [opts] \n     */\n    bindAxis(name, device, code, opts = undefined)\n    {\n        let input;\n        if (this.hasAxis(name))\n        {\n            input = this.getAxis(name);\n        }\n        else\n        {\n            input = new Axis(1);\n            this.inputs[name] = input;\n        }\n        this.bindings.bind(input, device, code, opts);\n        this.onBind();\n    }\n\n    /**\n     * @param {string} name \n     * @param {DeviceName} device \n     * @param {KeyCode} negativeCode \n     * @param {KeyCode} positiveCode \n     */\n    bindAxisButtons(name, device, negativeCode, positiveCode)\n    {\n        let input;\n        if (this.hasAxis(name))\n        {\n            input = this.getAxis(name);\n        }\n        else\n        {\n            input = new Axis(2);\n            this.inputs[name] = input;\n        }\n        this.bindings.bind(input, device, positiveCode);\n        this.bindings.bind(input, device, negativeCode, { inverted: true });\n        this.onBind();\n    }\n\n    /**\n     * @param {string} name \n     */\n    unbindButton(name)\n    {\n        if (this.hasButton(name))\n        {\n            let input = this.getButton(name);\n            delete this.inputs[name];\n            this.bindings.unbind(input);\n            this.onUnbind();\n        }\n    }\n\n    /**\n     * @param {string} name \n     */\n    unbindAxis(name)\n    {\n        if (this.hasAxis(name))\n        {\n            let input = this.getAxis(name);\n            delete this.inputs[name];\n            this.bindings.unbind(input);\n            this.onUnbind();\n        }\n    }\n\n    /**\n     * Get the input for the given name. Assumes the input already exists for the name.\n     * @param {InputName} name \n     * @returns {InputBase}\n     */\n    getInput(name)\n    {\n        return this.inputs[name];\n    }\n\n    /**\n     * Get the button for the given name. Assumes a button already exists for the name.\n     * @param {InputName} name\n     * @returns {Button}\n     */\n    getButton(name)\n    {\n        return this.inputs[name];\n    }\n\n    /**\n     * Get the axis for the given name. Assumes an axis already exists for the name.\n     * @param {InputName} name\n     * @returns {Axis}\n     */\n    getAxis(name)\n    {\n        return this.inputs[name];\n    }\n\n    /**\n     * Whether a button exists for the name and that it is of type {@link Button}.\n     * @returns {boolean}\n     */\n    hasButton(name)\n    {\n        return name in this.inputs && this.inputs[name] instanceof Button;\n    }\n\n    /**\n     * Whether an axis exists for the name and that it is of type {@link Axis}.\n     * @returns {boolean}\n     */\n    hasAxis(name)\n    {\n        return name in this.inputs && this.inputs[name] instanceof Axis;\n    }\n\n    /**\n     * Get whether a button for the given name is down. Assumes a button already exists for the name.\n     * @param {InputName} name\n     * @returns {boolean}\n     */\n    isButtonDown(name)\n    {\n        return this.inputs[name].down;\n    }\n\n    /**\n     * Get whether a button for the given name is pressed. Assumes a button already exists for the name.\n     * @param {InputName} name\n     * @returns {boolean}\n     */\n    isButtonPressed(name)\n    {\n        return this.inputs[name].pressed;\n    }\n\n    /**\n     * Get whether a button for the given name is released. Assumes a button already exists for the name.\n     * @param {InputName} name\n     * @returns {boolean}\n     */\n    isButtonReleased(name)\n    {\n        return this.inputs[name].released;\n    }\n\n    /**\n     * @param {InputName} name\n     * @returns {number}\n     */\n    getInputValue(name)\n    {\n        return this.inputs[name].value;\n    }\n\n    /**\n     * @param {InputName} name\n     * @returns {number}\n     */\n    getButtonValue(name)\n    {\n        return this.inputs[name].value;\n    }\n\n    /**\n     * @param {InputName} name\n     * @returns {number}\n     */\n    getAxisValue(name)\n    {\n        return this.inputs[name].value;\n    }\n\n    /**\n     * @param {InputName} name\n     * @returns {number}\n     */\n    getAxisDelta(name)\n    {\n        return this.inputs[name].delta;\n    }\n\n    /** @returns {boolean} */\n    isAnyButtonDown(include = undefined)\n    {\n        if (typeof include === 'undefined')\n        {\n            return this.anyButton.down;\n        }\n        else\n        {\n            let buttons = this.inputs;\n            for(let name of include)\n            {\n                let button = buttons[name];\n                if (button.down)\n                {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** @returns {boolean} */\n    isAnyButtonPressed(include = undefined)\n    {\n        if (typeof include === 'undefined')\n        {\n            return this.anyButton.pressed;\n        }\n        else\n        {\n            let buttons = this.inputs;\n            for(let name of include)\n            {\n                let button = buttons[name];\n                if (button.pressed)\n                {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** @returns {boolean} */\n    isAnyButtonReleased(include = undefined)\n    {\n        if (typeof include === 'undefined')\n        {\n            return this.anyButton.released;\n        }\n        else\n        {\n            let buttons = this.inputs;\n            for(let name of include)\n            {\n                let button = buttons[name];\n                if (button.released)\n                {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** @returns {number} */\n    getAnyAxisValue(include = undefined)\n    {\n        if (typeof include === 'undefined')\n        {\n            return this.anyAxis.value;\n        }\n        else\n        {\n            let axes = this.inputs;\n            for(let name of include)\n            {\n                let axis = axes[name];\n                if (axis.value)\n                {\n                    return axis.value;\n                }\n            }\n        }\n        return 0;\n    }\n\n    /** @returns {number} */\n    getAnyAxisDelta(include = undefined)\n    {\n        if (typeof include === 'undefined')\n        {\n            return this.anyAxis.delta;\n        }\n        else\n        {\n            let axes = this.inputs;\n            for(let name of include)\n            {\n                let axis = axes[name];\n                if (axis.delta)\n                {\n                    return axis.delta;\n                }\n            }\n        }\n        return 0;\n    }\n\n    getLastButtonDevice()\n    {\n        return this.anyButtonDevice;\n    }\n\n    getLastButtonCode()\n    {\n        return this.anyButtonCode;\n    }\n\n    getLastAxisDevice()\n    {\n        return this.anyAxisDevice;\n    }\n\n    getLastAxisCode()\n    {\n        return this.anyAxisCode;\n    }\n\n    /** @returns {MouseDevice} */\n    getMouse()\n    {\n        return this.devices[0];\n    }\n\n    /** @returns {KeyboardDevice} */\n    getKeyboard()\n    {\n        return this.devices[1];\n    }\n}\n\n/**\n * @typedef {import('../device/InputDevice.js').InputDevice} InputDevice\n * @typedef {import('../device/InputDevice.js').InputDeviceEvent} InputDeviceEvent\n * @typedef {import('../axisbutton/InputBase.js').InputBase} InputBase\n * @typedef {import('../InputBindings.js').DeviceName} DeviceName\n * @typedef {import('../InputBindings.js').KeyCode} KeyCode\n * @typedef {import('../InputBindings.js').BindingOptions} BindingOptions\n * \n * @typedef {string} InputName\n */\n\nclass InputPort extends HTMLElement\n{\n    /** @protected */\n    static get [Symbol.for('templateNode')]()\n    {\n        let t = document.createElement('template');\n        t.innerHTML = INNER_HTML;\n        Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n        return t;\n    }\n\n    /** @protected */\n    static get [Symbol.for('styleNode')]()\n    {\n        let t = document.createElement('style');\n        t.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n        return t;\n    }\n\n    static define(customElements = window.customElements)\n    {\n        customElements.define('input-port', this);\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'autopoll',\n            'for',\n        ];\n    }\n\n    /** @returns {boolean} */\n    get autopoll()\n    {\n        return this._autopoll;\n    }\n\n    set autopoll(value)\n    {\n        this.toggleAttribute('autopoll', value);\n    }\n\n    /** @returns {string} */\n    get for()\n    {\n        return this._for;\n    }\n\n    set for(value)\n    {\n        this.setAttribute('for', value);\n    }\n\n    constructor()\n    {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[Symbol.for('templateNode')].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[Symbol.for('styleNode')].cloneNode(true));\n\n        /** @private */\n        this._titleElement = this.shadowRoot.querySelector('#title');\n        /** @private */\n        this._pollElement = this.shadowRoot.querySelector('#poll');\n        /** @private */\n        this._focusElement = this.shadowRoot.querySelector('#focus');\n        /** @private */\n        this._bodyElement = this.shadowRoot.querySelector('tbody');\n        /** @private */\n        this._outputElements = {};\n\n        /** @private */\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        /** @private */\n        this.animationFrameHandle = null;\n\n        const eventTarget = this;\n        /** @private */\n        this._for = '';\n        /** @private */\n        this._eventTarget = eventTarget;\n        /** @private */\n        this._autopoll = false;\n\n        /** @private */\n        this._context = null;\n        this.onInputContextBind = this.onInputContextBind.bind(this);\n        this.onInputContextUnbind = this.onInputContextUnbind.bind(this);\n        this.onInputContextFocus = this.onInputContextFocus.bind(this);\n        this.onInputContextBlur = this.onInputContextBlur.bind(this);\n    }\n    \n    /** @override */\n    connectedCallback()\n    {\n        if (Object.prototype.hasOwnProperty.call(this, 'for'))\n        {\n            let value = this.for;\n            delete this.for;\n            this.for = value;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(this, 'autopoll'))\n        {\n            let value = this.autopoll;\n            delete this.autopoll;\n            this.autopoll = value;\n        }\n\n        // Make sure the table and values are up to date\n        this.updateTable();\n        this.updateTableValues();\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    /** @override */\n    disconnectedCallback()\n    {\n        if (this._context)\n        {\n            this._context.removeEventListener('bind', this.onInputContextBind);\n            this._context.removeEventListener('unbind', this.onInputContextUnbind);\n            this._context.removeEventListener('blur', this.onInputContextBlur);\n            this._context.removeEventListener('focus', this.onInputContextFocus);\n            this._context.destroy();\n            this._context = null;\n        }\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch (attribute)\n        {\n            case 'for':\n                {\n                    this._for = value;\n                    let target;\n                    let name;\n                    if (value)\n                    {\n                        target = document.getElementById(value);\n                        name = `${target.tagName.toLowerCase()}#${value}`;\n                    }\n                    else\n                    {\n                        target = this;\n                        name = 'input-port';\n                    }\n                    this._eventTarget = target;\n                    if (this._context)\n                    {\n                        this._context.setEventTarget(this._eventTarget);\n                    }\n                    // For debug info\n                    this._titleElement.innerHTML = `for ${name}`;\n                }\n                break;\n            case 'autopoll':\n                this._autopoll = value !== null;\n                if (this._context)\n                {\n                    this._context.toggleAutoPoll(this._autopoll);\n                }\n                break;\n        }\n    }\n\n    /** @private */\n    onAnimationFrame()\n    {\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n        this.updateTableValues();\n        this.updatePollStatus();\n    }\n\n    /** @private */\n    onInputContextBind()\n    {\n        this.updateTable();\n    }\n\n    /** @private */\n    onInputContextUnbind()\n    {\n        this.updateTable();\n    }\n\n    /** @private */\n    onInputContextFocus()\n    {\n        this._focusElement.innerHTML = '\u2713';\n    }\n\n    /** @private */\n    onInputContextBlur()\n    {\n        this._focusElement.innerHTML = '';\n    }\n\n    /**\n     * @param {'axisbutton'} [contextId]\n     * @param {object} [options]\n     * @returns {InputContext}\n     */\n    getContext(contextId = 'axisbutton', options = undefined)\n    {\n        switch(contextId)\n        {\n            case 'axisbutton':\n                if (!this._context)\n                {\n                    this._context = new InputContext(this._eventTarget, options);\n                    this._context.addEventListener('bind', this.onInputContextBind);\n                    this._context.addEventListener('unbind', this.onInputContextUnbind);\n                    this._context.addEventListener('blur', this.onInputContextBlur);\n                    this._context.addEventListener('focus', this.onInputContextFocus);\n                    if (this._autopoll)\n                    {\n                        this._context.toggleAutoPoll(true);\n                    }\n                }\n                return this._context;\n            default:\n                throw new Error(`Input context id '${contextId}' is not supported.`);\n        }\n    }\n\n    /** @private */\n    updateTable()\n    {\n        if (!this.isConnected)\n        {\n            // Don't update the DOM if not connected to any :(\n            return;\n        }\n        else if (!this._context)\n        {\n            // Clear all values if no context is available\n            this._outputElements = {};\n            this._bodyElement.innerHTML = '';\n            return;\n        }\n        else\n        {\n            let context = this._context;\n            let inputs = context.inputs;\n            let bindings = context.bindings;\n            let primaryElements = {};\n            let entries = [];\n            for(let name of Object.keys(inputs))\n            {\n                let input = inputs[name];\n                let primary = true;\n                for(let binding of bindings.getBindingsByInput(input))\n                {\n                    let element = createInputTableEntry(\n                        `${input.constructor.name}.${name}`,\n                        `${binding.device}.${binding.code}`,\n                        0,\n                        primary);\n                    entries.push(element);\n                    if (primary)\n                    {\n                        primaryElements[name] = element.querySelector('output');\n                        primary = false;\n                    }\n                }\n            }\n            this._outputElements = primaryElements;\n            this._bodyElement.innerHTML = '';\n            for (let entry of entries)\n            {\n                this._bodyElement.appendChild(entry);\n            }\n        }\n    }\n\n    /** @private */\n    updateTableValues()\n    {\n        if (!this.isConnected)\n        {\n            // Don't update the DOM if not connected to any :(\n            return;\n        }\n        else if (!this._context)\n        {\n            // Clear all values if no context is available\n            for(let name of Object.keys(this._outputElements))\n            {\n                let element = this._outputElements[name];\n                element.innerText = '---';\n            }\n            return;\n        }\n        else\n        {\n            let context = this._context;\n            let inputs = context.inputs;\n            for(let name of Object.keys(this._outputElements))\n            {\n                let element = this._outputElements[name];\n                let value = inputs[name].value;\n                element.innerText = Number(value).toFixed(2);\n            }\n        }\n    }\n\n    /** @private */\n    updatePollStatus()\n    {\n        if (!this.isConnected)\n        {\n            // Don't update the DOM if not connected to any :(\n            return;\n        }\n        else if (!this._context)\n        {\n            // Clear all values if no context is available\n            this._pollElement.innerHTML = '-';\n            return;\n        }\n        else\n        {\n            let context = this._context;\n            let inputs = context.inputs;\n            for(let input of Object.values(inputs))\n            {\n                if (!input.polling)\n                {\n                    this._pollElement.innerHTML = '';\n                    return;\n                }\n            }\n            this._pollElement.innerHTML = '\u2713';\n        }\n    }\n}\nInputPort.define();\n\nfunction createInputTableEntry(name, key, value, primary = true)\n{\n    let row = document.createElement('tr');\n    if (primary)\n    {\n        row.classList.add('primary');\n    }\n    // Name\n    {\n        let data = document.createElement('td');\n        data.textContent = name;\n        data.classList.add('name');\n        row.appendChild(data);\n    }\n    // Value\n    {\n        let data = document.createElement('td');\n        let output = document.createElement('output');\n        if (primary)\n        {\n            output.innerText = Number(value).toFixed(2);\n        }\n        else\n        {\n            output.innerText = '---';\n        }\n        output.classList.add('value');\n        data.appendChild(output);\n        row.appendChild(data);\n    }\n    // Key\n    {\n        let data = document.createElement('td');\n        data.classList.add('key');\n        let kbd = new InputCode();\n        kbd.innerText = key;\n        data.appendChild(kbd);\n        row.appendChild(data);\n    }\n    return row;\n}\n\n/**\n * @typedef {import('./axisbutton/Button.js').ButtonReadOnly} ButtonReadOnly\n */\n\nconst KEYBOARD_SOURCE = Symbol('keyboardSource');\nclass Keyboard\n{\n    constructor(eventTarget, opts)\n    {\n        /** @type {ButtonReadOnly} */\n        this.KeyA = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyB = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyC = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyD = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyE = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyF = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyG = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyH = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyI = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyJ = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyK = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyL = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyM = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyN = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyO = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyP = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyQ = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyR = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyS = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyT = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyU = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyV = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyW = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyX = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyY = new Button();\n        /** @type {ButtonReadOnly} */\n        this.KeyZ = new Button();\n\n        /** @type {ButtonReadOnly} */\n        this.Digit0 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit1 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit2 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit3 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit4 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit5 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit6 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit7 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit8 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Digit9 = new Button();\n\n        /** @type {ButtonReadOnly} */\n        this.Minus = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Equal = new Button();\n        /** @type {ButtonReadOnly} */\n        this.BracketLeft = new Button();\n        /** @type {ButtonReadOnly} */\n        this.BracketRight = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Semicolon = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Quote = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Backquote = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Backslash = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Comma = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Period = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Slash = new Button();\n\n        /** @type {ButtonReadOnly} */\n        this.Escape = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Space = new Button();\n        /** @type {ButtonReadOnly} */\n        this.CapsLock = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Backspace = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Delete = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Tab = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Enter = new Button();\n\n        /** @type {ButtonReadOnly} */\n        this.ArrowUp = new Button();\n        /** @type {ButtonReadOnly} */\n        this.ArrowDown = new Button();\n        /** @type {ButtonReadOnly} */\n        this.ArrowLeft = new Button();\n        /** @type {ButtonReadOnly} */\n        this.ArrowRight = new Button();\n        \n        const deviceName = 'Keyboard';\n        const device = new KeyboardDevice(deviceName, eventTarget, opts);\n        const bindings = new InputBindings();\n        for(let key in this)\n        {\n            if (Object.prototype.hasOwnProperty.call(this, key))\n            {\n                let input = this[key];\n                bindings.bind(input, deviceName, key);\n            }\n        }\n        const adapter = new DeviceInputAdapter(bindings);\n        device.addEventListener('input', adapter.onInput);\n        const autopoller = new AutoPoller(adapter);\n        autopoller.start();\n        this[KEYBOARD_SOURCE] = {\n            device,\n            bindings,\n            adapter,\n            autopoller,\n        };\n    }\n\n    destroy()\n    {\n        const source = this[KEYBOARD_SOURCE];\n        source.autopoller.stop();\n        source.device.removeEventListener('input', source.adapter.onInput);\n        source.device.destroy();\n        source.bindings.clear();\n    }\n}\n\n/**\n * @typedef {import('./axisbutton/Axis.js').AxisReadOnly} AxisReadOnly\n * @typedef {import('./axisbutton/Button.js').ButtonReadOnly} ButtonReadOnly\n */\n\nconst MOUSE_SOURCE = Symbol('mouseSource');\nclass Mouse\n{\n    constructor(eventTarget, opts)\n    {\n        /** @type {AxisReadOnly} */\n        this.PosX = new Axis();\n        /** @type {AxisReadOnly} */\n        this.PosY = new Axis();\n        \n        /** @type {AxisReadOnly} */\n        this.WheelX = new Axis();\n        /** @type {AxisReadOnly} */\n        this.WheelY = new Axis();\n        /** @type {AxisReadOnly} */\n        this.WheelZ = new Axis();\n\n        /** @type {ButtonReadOnly} */\n        this.Button0 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Button1 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Button2 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Button3 = new Button();\n        /** @type {ButtonReadOnly} */\n        this.Button4 = new Button();\n        \n        const deviceName = 'Mouse';\n        const device = new MouseDevice(deviceName, eventTarget, opts);\n        const bindings = new InputBindings();\n        for(let key in this)\n        {\n            if (Object.prototype.hasOwnProperty.call(this, key))\n            {\n                let input = this[key];\n                bindings.bind(input, deviceName, key);\n            }\n        }\n        const adapter = new DeviceInputAdapter(bindings);\n        device.addEventListener('input', adapter.onInput);\n        const autopoller = new AutoPoller(adapter);\n        autopoller.start();\n        this[MOUSE_SOURCE] = {\n            device,\n            bindings,\n            adapter,\n            autopoller,\n        };\n    }\n\n    destroy()\n    {\n        const source = this[MOUSE_SOURCE];\n        source.autopoller.stop();\n        source.device.removeEventListener('input', source.adapter.onInput);\n        source.device.destroy();\n        source.bindings.clear();\n    }\n}\n\nexport { AutoPoller, Axis, Button, CLEAR_DOWN_STATE_BITS, CLEAR_INVERTED_MODIFIER_BITS, CLEAR_POLL_BITS, DOWN_STATE_BIT, DeviceInputAdapter, INVERTED_MODIFIER_BIT, InputBase, InputBindings, InputCode, InputContext, InputDevice, InputPort, Keyboard, KeyboardDevice, Mouse, MouseDevice, PRESSED_STATE_BIT, RELEASED_STATE_BIT, REPEATED_STATE_BIT };\n", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([c], { type: 'text/javascript' }))));\n    w.onerror = function (e) { return cb(e.error, null); };\n    w.onmessage = function (e) { return cb(null, e.data); };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i)\n        ++l[cd[i] - 1];\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p / 8) | 0) + (p & 7 && 1); };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && !st.l && sl < 5))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e < s) {\n                // write full block\n                pos = wfblk(w, pos, dat.subarray(i, e));\n            }\n            else {\n                // write final block\n                w[i] = lst;\n                pos = wfblk(w, pos, dat.subarray(i, s));\n            }\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (t)\n            throw 'stream finished';\n        if (!strm.ondata)\n            throw 'no stream handler';\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        throw 'invalid gzip data';\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                throw 'invalid gzip stream';\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                throw 'invalid zlib stream';\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no stream handler';\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k;\n        if (val instanceof u8)\n            t[n] = [val, o];\n        else if (Array.isArray(val))\n            t[n] = [val[0], mrg(o, val[1])];\n        else\n            fltn(val, n + '/', t, o);\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    throw 'invalid utf-8 data';\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            throw 'stream finished';\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                throw 'invalid utf-8 data';\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        if (this.d)\n            throw 'stream finished';\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            throw 'invalid utf-8 data';\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                throw 'extra field too long';\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        throw 'date not in range 1980-2099';\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback - add to ZIP archive before pushing';\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (this.d & 2)\n            throw 'stream finished';\n        var f = strToU8(file.filename), fl = f.length;\n        var com = file.comment, o = com && strToU8(com);\n        var u = fl != file.filename.length || (o && (com.length != o.length));\n        var hl = fl + exfl(file.extra) + 30;\n        if (fl > 65535)\n            throw 'filename too long';\n        var header = new u8(hl);\n        wzh(header, 0, file, f, u);\n        var chks = [header];\n        var pAll = function () {\n            for (var _i = 0, chks_1 = chks; _i < chks_1.length; _i++) {\n                var chk = chks_1[_i];\n                _this_1.ondata(null, chk, false);\n            }\n            chks = [];\n        };\n        var tr = this.d;\n        this.d = 0;\n        var ind = this.u.length;\n        var uf = mrg(file, {\n            f: f,\n            u: u,\n            o: o,\n            t: function () {\n                if (file.terminate)\n                    file.terminate();\n            },\n            r: function () {\n                pAll();\n                if (tr) {\n                    var nxt = _this_1.u[ind + 1];\n                    if (nxt)\n                        nxt.r();\n                    else\n                        _this_1.d = 1;\n                }\n                tr = 1;\n            }\n        });\n        var cl = 0;\n        file.ondata = function (err, dat, final) {\n            if (err) {\n                _this_1.ondata(err, dat, final);\n                _this_1.terminate();\n            }\n            else {\n                cl += dat.length;\n                chks.push(dat);\n                if (final) {\n                    var dd = new u8(16);\n                    wbytes(dd, 0, 0x8074B50);\n                    wbytes(dd, 4, file.crc);\n                    wbytes(dd, 8, cl);\n                    wbytes(dd, 12, file.size);\n                    chks.push(dd);\n                    uf.c = cl, uf.b = hl + cl + 16, uf.crc = file.crc, uf.size = file.size;\n                    if (tr)\n                        uf.r();\n                    tr = 1;\n                }\n                else if (tr)\n                    pAll();\n            }\n        };\n        this.u.push(uf);\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            if (this.d & 1)\n                throw 'stream finishing';\n            throw 'stream finished';\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cb(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cb(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl('filename too long', null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            throw 'filename too long';\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, data, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            throw 'no callback';\n        if (!this.p)\n            throw 'stream finished';\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_2 = [];\n                        this_1.k.unshift(chks_2);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    throw 'no callback';\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        throw 'unknown compression type ' + cmp_1;\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_3 = chks_2; _i < chks_3.length; _i++) {\n                                        var dat = chks_3[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_2 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                throw 'invalid zip file';\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\n/**\n * Asynchronously decompresses a ZIP archive\n * @param data The raw compressed ZIP file\n * @param cb The callback to call with the decompressed files\n * @returns A function that can be used to immediately terminate the unzipping\n */\nexport function unzip(data, cb) {\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cb('invalid zip file', null);\n            return;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (!lft)\n        cb(null, {});\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50) {\n            cb('invalid zip file', null);\n            return;\n        }\n        c = lft = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var _loop_3 = function (i) {\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                files[fn] = d;\n                if (!--lft)\n                    cb(null, files);\n            }\n        };\n        if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n        else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (sc < 320000) {\n                try {\n                    cbl(null, inflateSync(infl, new u8(su)));\n                }\n                catch (e) {\n                    cbl(e, null);\n                }\n            }\n            else\n                term.push(inflate(infl, { size: su }, cbl));\n        }\n        else\n            cbl('unknown compression type ' + c_1, null);\n    };\n    for (var i = 0; i < c; ++i) {\n        _loop_3(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @returns The decompressed files\n */\nexport function unzipSync(data) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            throw 'invalid zip file';\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!c_2)\n            files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n        else\n            throw 'unknown compression type ' + c_2;\n    }\n    return files;\n}\n", "import { unzip } from 'fflate';\nimport { makeRe } from 'picomatch';\n\nclass FileBufferMap\n{\n    constructor()\n    {\n        /**\n         * @private\n         * @type {Record<string, Uint8Array>}\n         */\n        this._buffers = {};\n    }\n\n    clear()\n    {\n        this._buffers = {};\n    }\n\n    /**\n     * @param {string} filePath \n     * @param {Uint8Array} fileBuffer \n     */\n    put(filePath, fileBuffer)\n    {\n        this._buffers[filePath] = fileBuffer;\n    }\n\n    /**\n     * @param {string} filePath \n     * @returns {Uint8Array}\n     */\n    get(filePath)\n    {\n        return this._buffers[filePath];\n    }\n\n    /**\n     * @returns {Array<string>}\n     */\n    keys()\n    {\n        return Object.keys(this._buffers);\n    }\n}\n\nconst INNER_HTML = '';\nconst INNER_STYLE = '';\n\nconst DEFAULT_TIMEOUT_MILLIS = 5_000;\n\nclass AssetPack extends HTMLElement\n{\n    /** @private */\n    static get [Symbol.for('templateNode')]()\n    {\n        let t = document.createElement('template');\n        t.innerHTML = INNER_HTML;\n        Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n        return t;\n    }\n\n    /** @private */\n    static get [Symbol.for('styleNode')]()\n    {\n        let t = document.createElement('style');\n        t.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n        return t;\n    }\n    \n    static define(customElements = window.customElements)\n    {\n        customElements.define('asset-pack', AssetPack);\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'src'\n        ];\n    }\n\n    /** @param {string} value */\n    set src(value)\n    {\n        this.setAttribute('src', value);\n    }\n\n    /** @returns {string} */\n    get src()\n    {\n        return this._src;\n    }\n\n    constructor()\n    {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[Symbol.for('templateNode')].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[Symbol.for('styleNode')].cloneNode(true));\n\n        /** @private */\n        this._src = '';\n        /** @private */\n        this._files = new FileBufferMap();\n        /** @private */\n        this._cache = {};\n        /**\n         * @private\n         * @type {Record<string, Loading>}\n         */\n        this._loading = {};\n        /**\n         * @private\n         * @type {Record<string, PipelineStage>}\n         */\n        this._pipeline = {};\n\n        /** @private */\n        this.onLoad = this.onLoad.bind(this);\n    }\n\n    get files()\n    {\n        return this._files;\n    }\n\n    /**\n     * @param {string|RegExp} filter \n     * @param {(assetData, uri) => Promise<any>} handler\n     */\n    async pipe(filter, handler)\n    {\n        let filterKey;\n        if (typeof filter === 'string')\n        {\n            filterKey = filter;\n            if (!(filterKey in this._pipeline))\n            {\n                filter = makeRe(filter);\n            }\n        }\n        else if (filter instanceof RegExp)\n        {\n            filterKey = filter.source;\n        }\n        else\n        {\n            throw new Error('Filter must be either a RegExp or glob string.');\n        }\n\n        /** @type {PipelineStage} */\n        let stage;\n        if (filterKey in this._pipeline)\n        {\n            stage = this._pipeline[filterKey];\n        }\n        else\n        {\n            stage = new PipelineStage(filter);\n            this._pipeline[filterKey] = stage;\n        }\n        stage.addHandler(handler);\n        \n        // Process old assets with new handler...\n        await Promise.all(Object.entries(this._cache).map(([key, value]) => {\n            if (stage.matches(key))\n            {\n                return handler(value, key);\n            }\n            else\n            {\n                return null;\n            }\n        }));\n    }\n\n    /**\n     * @param {string} uri \n     * @param {any} asset \n     * @param {object} [opts]\n     * @param {boolean} [opts.ephemeral]\n     */\n    async cache(uri, asset, opts = {})\n    {\n        const { ephemeral } = opts;\n        const prevValue = this._cache[uri];\n        const loading = this._loading[uri];\n        this._cache[uri] = asset;\n        // Process the asset...\n        await Promise.all(Object.values(this._pipeline).map(stage => {\n            if (stage.matches(uri))\n            {\n                return stage.process(uri, asset);\n            }\n            else\n            {\n                return null;\n            }\n        }));\n        // Send asset to awaiting loaders...\n        if (loading)\n        {\n            loading.resolve(asset);\n            delete this._loading[asset];\n        }\n        // Delete asset if ephemeral (and not yet replaced)...\n        if (ephemeral && this._cache[asset] === asset)\n        {\n            if (prevValue)\n            {\n                this._cache[asset] = prevValue;\n            }\n            else\n            {\n                delete this._cache[asset];\n            }\n        }\n    }\n\n    async loadAsset(uri, timeout = DEFAULT_TIMEOUT_MILLIS)\n    {\n        let value = this._cache[uri];\n        if (value)\n        {\n            return value;\n        }\n        else if (uri in this._loading)\n        {\n            return this._loading[uri].promise;\n        }\n        else\n        {\n            let loading = new Loading(timeout);\n            this._loading[uri] = loading;\n            return loading.promise;\n        }\n    }\n\n    clearAssets()\n    {\n        for(let loading of Object.values(this._loading))\n        {\n            loading.reject(new Error('Stop loading to clear all assets.'));\n        }\n        this._loading = {};\n        this._cache = {};\n    }\n\n    deleteAsset(uri)\n    {\n        if (uri in this._loading)\n        {\n            this._loading[uri].reject(new Error('Stop loading to delete asset.'));\n            delete this._loading[uri];\n        }\n        if (uri in this._cache)\n        {\n            delete this._cache[uri];\n        }\n    }\n\n    getAsset(uri)\n    {\n        return this._cache[uri];\n    }\n\n    hasAsset(uri)\n    {\n        let value = this._cache[uri];\n        if (value)\n        {\n            return value;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    /** @override */\n    connectedCallback()\n    {\n        upgradeProperty(this, 'src');\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'src':\n                this._src = value;\n                if (value)\n                {\n                    fetch(value)\n                        .then(this.onLoad)\n                        .catch(e => console.error(\n                            `Failed to load asset pack: ${e}`));\n                }\n                break;\n        }\n    }\n\n    /**\n     * @private\n     * @param {Response} response\n     */\n    async onLoad(response)\n    {\n        let arrayBuffer = await response.arrayBuffer();\n        await new Promise((resolve, reject) => {\n            unzip(new Uint8Array(arrayBuffer), (err, data) => {\n                if (err)\n                {\n                    reject(err);\n                }\n                else\n                {\n                    // TODO: These files should be ephemeral to save memory\n                    let result = this._files;\n                    Promise.all(Object.entries(data)\n                        .map(([path, data]) => {\n                            // Remove the zip directory name\n                            // let i = path.indexOf('/');\n                            // path = path.substring(i + 1);\n                            // Put the file in cache\n                            result.put(path, data);\n                            return this.cache(path, data);\n                        }))\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        });\n        this.dispatchEvent(new CustomEvent('load', {\n            composed: true,\n        }));\n    }\n}\nAssetPack.define();\n\nfunction upgradeProperty(element, propertyName)\n{\n    if (Object.prototype.hasOwnProperty.call(element, propertyName))\n    {\n        let value = element[propertyName];\n        delete element[propertyName];\n        element[propertyName] = value;\n    }\n}\n\nclass PipelineStage\n{\n    constructor(filter)\n    {\n        /** @type {RegExp} */\n        this.filter = filter;\n        this.handlers = [];\n    }\n\n    matches(string)\n    {\n        return this.filter.test(string);\n    }\n\n    async process(uri, asset)\n    {\n        return Promise.all(this.handlers.map(value => value(uri, asset)));\n    }\n\n    addHandler(handler)\n    {\n        this.handlers.push(handler);\n    }\n}\n\nclass Loading\n{\n    constructor(timeout)\n    {\n        /** @private */\n        this._resolve = null;\n        /** @private */\n        this._reject = null;\n        /** @private */\n        this._reason = null;\n        /** @private */\n        this._value = null;\n        /** @private */\n        this._timeoutHandle = timeout > 0\n            ? setTimeout(() => {\n                this.reject(`Asset loading exceeded timeout of ${timeout} ms.`);\n            }, timeout)\n            : null;\n        /** @private */\n        this._promise = new Promise((resolve, reject) => {\n            if (this._value)\n            {\n                resolve(this._value);\n            }\n            else\n            {\n                this._resolve = resolve;\n            }\n            if (this._reason)\n            {\n                reject(this._reason);\n            }\n            else\n            {\n                this._reject = reject;\n            }\n        });\n    }\n\n    get promise()\n    {\n        return this._promise;\n    }\n\n    resolve(value)\n    {\n        if (this._timeoutHandle)\n        {\n            clearTimeout(this._timeoutHandle);\n            this._timeoutHandle = null;\n        }\n        if (this._resolve)\n        {\n            this._resolve(value);\n        }\n        else\n        {\n            this._value = value;\n        }\n    }\n\n    reject(reason)\n    {\n        if (this._timeoutHandle)\n        {\n            clearTimeout(this._timeoutHandle);\n            this._timeoutHandle = null;\n        }\n        if (this._reject)\n        {\n            this._reject(reason);\n        }\n        else\n        {\n            this._reason = reason;\n        }\n    }\n}\n\nexport { AssetPack };\n", "window.addEventListener('error', error, true);\nwindow.addEventListener('unhandledrejection', error, true);\n\nexport function error(e)\n{\n    if (typeof e === 'object')\n    {\n        if (e instanceof PromiseRejectionEvent)\n        {\n            error(e.reason);\n        }\n        else if (e instanceof ErrorEvent)\n        {\n            error(e.error);\n        }\n        else if (e instanceof Error)\n        {\n            window.alert(e.stack);\n        }\n        else\n        {\n            window.alert(JSON.stringify(e));\n        }\n    }\n    else\n    {\n        window.alert(e);\n    }\n}\n", "/**\n * @typedef Eventable\n * @property {function} on\n * @property {function} off\n * @property {function} once\n * @property {function} emit\n */\n\n/**\n * @version 1.3.0\n * @description\n * # Changelog\n * ## 1.3.0\n * - Return results for emit()\n * ## 1.2.0\n * - Added named exports\n * - Added custom this context\n * - Added some needed explanations for the functions\n * ## 1.1.0\n * - Started versioning\n */\nconst EventableInstance = {\n    /**\n     * Registers an event handler to continually listen for the event.\n     * \n     * @param {string} event The name of the event to listen for.\n     * @param {function} callback The callback function to handle the event.\n     * @param {*} [handle = callback] The handle to refer to this registered callback.\n     * Used by off() to remove handlers. If none specified, it will use the callback\n     * itself as the handle. This must be unique.\n     * @return {Eventable} Self for method-chaining.\n     */\n    on(event, callback, handle = callback)\n    {\n        let callbacks;\n        if (!this.__events.has(event))\n        {\n            callbacks = new Map();\n            this.__events.set(event, callbacks);\n        }\n        else\n        {\n            callbacks = this.__events.get(event);\n        }\n\n        if (!callbacks.has(handle))\n        {\n            callbacks.set(handle, callback);\n        }\n        else\n        {\n            throw new Error(`Found callback for event '${event}' with the same handle '${handle}'.`);\n        }\n        return this;\n    },\n\n    /**\n     * Unregisters an event handler to stop listening for the event.\n     * \n     * @param {string} event The name of the event listened for.\n     * @param {*} handle The registered handle to refer to the registered\n     * callback. If no handle was provided when calling on(), the callback\n     * is used as the handle instead.\n     * @return {Eventable} Self for method-chaining.\n     */\n    off(event, handle)\n    {\n        if (this.__events.has(event))\n        {\n            const callbacks = this.__events.get(event);\n            if (callbacks.has(handle))\n            {\n                callbacks.delete(handle);\n            }\n            else\n            {\n                throw new Error(`Unable to find callback for event '${event}' with handle '${handle}'.`);\n            }\n        }\n        else\n        {\n            throw new Error(`Unable to find event '${event}'.`);\n        }\n        return this;\n    },\n    \n    /**\n     * Registers a one-off event handler to start listening for the next,\n     * and only the next, event.\n     * \n     * @param {string} event The name of the event to listen for.\n     * @param {function} callback The callback function to handle the event.\n     * @param {*} [handle = callback] The handle to refer to this registered callback.\n     * Used by off() to remove handlers. If none specified, it will use the callback\n     * itself as the handle. This must be unique.\n     * @return {Eventable} Self for method-chaining.\n     */\n    once(event, callback, handle = callback)\n    {\n        const func = (...args) => {\n            this.off(event, handle);\n            callback.apply(this.__context || this, args);\n        };\n        return this.on(event, func, handle);\n    },\n\n    /**\n     * Emits the event with the arguments passed on to the registered handlers.\n     * The context of the handlers, if none were initially bound, could be\n     * defined upon calling the Eventable's creation function. Otherwise, the\n     * handler is called with `this` context of the Eventable instance.\n     * \n     * @param {string} event The name of the event to emit.\n     * @param  {...any} args Any arguments to pass to registered handlers.\n     * @return {Array<any>} Array of any returned values of the callbacks.\n     */\n    emit(event, ...args)\n    {\n        if (this.__events.has(event))\n        {\n            let results = [];\n            const callbacks = Array.from(this.__events.get(event).values());\n            for(const callback of callbacks)\n            {\n                let result = callback.apply(this.__context || this, args);\n                if (result) results.push(result);\n            }\n            return results;\n        }\n        else\n        {\n            this.__events.set(event, new Map());\n            return [];\n        }\n    }\n};\n\n/**\n * Creates an eventable object.\n * \n * @param {Object} [context] The context used for the event handlers.\n * @return {Eventable} The created eventable object.\n */\nfunction create(context = undefined)\n{\n    const result = Object.create(EventableInstance);\n    result.__events = new Map();\n    result.__context = context;\n    return result;\n}\n\n/**\n * Assigns the passed-in object with eventable properties.\n * \n * @param {Object} dst The object to assign with eventable properties.\n * @param {Object} [context] The context used for the event handlers.\n * @return {Eventable} The resultant eventable object.\n */\nfunction assign(dst, context = undefined)\n{\n    const result = Object.assign(dst, EventableInstance);\n    result.__events = new Map();\n    result.__context = context;\n    return result;\n}\n\n/**\n * Mixins eventable properties into the passed-in class.\n * \n * @param {Class} targetClass The class to mixin eventable properties.\n * @param {Object} [context] The context used for the event handlers.\n * @return {Class<Eventable>} The resultant eventable-mixed-in class.\n */\nfunction mixin(targetClass, context = undefined)\n{\n    const targetPrototype = targetClass.prototype;\n    Object.assign(targetPrototype, EventableInstance);\n    targetPrototype.__events = new Map();\n    targetPrototype.__context = context;\n    return targetPrototype;\n}\n\nconst Eventable = {\n    create,\n    assign,\n    mixin,\n};\n\n// Log levels\nconst TRACE = 5;\nconst DEBUG = 4;\nconst INFO = 3;\nconst WARN = 2;\nconst ERROR = 1;\nconst OFF = 0;\n\nconst LOG_LEVEL_STYLES = {\n    [TRACE]: styledLogLevel('#7F8C8D'), // Gray\n    [DEBUG]: styledLogLevel('#2ECC71'), // Green\n    [INFO]: styledLogLevel('#4794C8'), // Blue\n    [WARN]: styledLogLevel('#F39C12'), // Yellow\n    [ERROR]: styledLogLevel('#C0392B'), // Red\n    [OFF]: [''],\n};\n\nfunction compareLogLevel(a, b)\n{\n    return a - b;\n}\n\nfunction styledLogLevel(color)\n{\n    return [\n        `background: ${color}`,\n        'border-radius: 0.5em',\n        'color: white',\n        'font-weight: bold',\n        'padding: 2px 0.5em',\n    ];\n}\n\n// Useful functions\nfunction noop() { /** Do nothing. */ }\n\nfunction getStyledMessage(message, styles)\n{\n    return [\n        `%c${message}`,\n        styles.join(';'),\n    ];\n}\n\nfunction getConsoleFunction(level)\n{\n    switch(level)\n    {\n        case TRACE:\n            return console.trace;\n        case DEBUG:\n            return console.log;\n        case INFO:\n            return console.log;\n        case WARN:\n            return console.warn;\n        case ERROR:\n            return console.error;\n        case OFF:\n            return noop;\n        default:\n            return console.log;\n    }\n}\n\nfunction prependMessageTags(out, name, domain, level)\n{\n    if (name)\n    {\n        out.unshift(`[${name}]`);\n    }\n\n    if (domain)\n    {\n        let tag = getStyledMessage(domain, LOG_LEVEL_STYLES[level]);\n        out.unshift(tag[0], tag[1]);\n    }\n\n    return out;\n}\n\nconst LEVEL = Symbol('level');\nconst DOMAIN = Symbol('domain');\nconst LOGGERS = { /** To be populated by logger instances. */ };\nlet DEFAULT_LEVEL = WARN;\nlet DEFAULT_DOMAIN = 'app';\nclass Logger\n{\n    static get TRACE() { return TRACE; }\n    static get DEBUG() { return DEBUG; }\n    static get INFO() { return INFO; }\n    static get WARN() { return WARN; }\n    static get ERROR() { return ERROR; }\n    static get OFF() { return OFF; }\n\n    /**\n     * Creates or gets the logger for the given unique name.\n     * @param {String} name \n     * @returns {Logger} The logger with the name.\n     */\n    static getLogger(name)\n    {\n        if (name in LOGGERS)\n        {\n            return LOGGERS[name];\n        }\n        else\n        {\n            return LOGGERS[name] = new Logger(name);\n        }\n    }\n\n    static useDefaultLevel(level)\n    {\n        DEFAULT_LEVEL = level;\n        return this;\n    }\n\n    static useDefaultDomain(domain)\n    {\n        DEFAULT_DOMAIN = domain;\n        return this;\n    }\n\n    constructor(name)\n    {\n        this.name = name;\n        this[LEVEL] = DEFAULT_LEVEL;\n        this[DOMAIN] = DEFAULT_DOMAIN;\n    }\n\n    setLevel(level)\n    {\n        this[LEVEL] = level;\n        return this;\n    }\n    \n    getLevel()\n    {\n        return this[LEVEL];\n    }\n\n    setDomain(domain)\n    {\n        this[DOMAIN] = domain;\n        return this;\n    }\n\n    getDomain()\n    {\n        return this[DOMAIN];\n    }\n\n    log(level, ...messages)\n    {\n        if (compareLogLevel(this[LEVEL], level) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], level);\n        getConsoleFunction(level)(...messages);\n    }\n\n    trace(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], TRACE) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], TRACE);\n        getConsoleFunction(TRACE)(...messages);\n    }\n\n    debug(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], DEBUG) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], DEBUG);\n        getConsoleFunction(DEBUG)(...messages);\n    }\n\n    info(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], INFO) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], INFO);\n        getConsoleFunction(INFO)(...messages);\n    }\n\n    warn(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], WARN) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], WARN);\n        getConsoleFunction(WARN)(...messages);\n    }\n\n    error(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], ERROR) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], ERROR);\n        getConsoleFunction(ERROR)(...messages);\n    }\n}\n\n// Bresenham's Line Algorithm\nfunction bresenhamLine(fromX, fromY, toX, toY, callback)\n{\n    let fx = Math.floor(fromX);\n    let fy = Math.floor(fromY);\n    let tx = Math.floor(toX);\n    let ty = Math.floor(toY);\n\n    let dx = Math.abs(toX - fromX);\n    let sx = fromX < toX ? 1 : -1;\n    let dy = -Math.abs(toY - fromY);\n    let sy = fromY < toY ? 1 : -1;\n    let er = dx + dy;\n\n    let x = fx;\n    let y = fy;\n    let flag = callback(x, y);\n    if (typeof flag !== 'undefined') return flag;\n    \n    let maxLength = dx * dx + dy * dy;\n    let length = 0;\n    while(length < maxLength && (x !== tx || y !== ty))\n    {\n        // Make sure it doesn't go overboard.\n        ++length;\n\n        let er2 = er * 2;\n\n        if (er2 >= dy)\n        {\n            er += dy;\n            x += sx;\n        }\n\n        if (er2 <= dx)\n        {\n            er += dx;\n            y += sy;\n        }\n\n        flag = callback(x, y);\n        if (typeof flag !== 'undefined') return flag;\n    }\n}\n\nconst FILE_TYPE_PNG = 'png';\nconst FILE_TYPE_SVG = 'svg';\n\nfunction downloadText(filename, textData)\n{\n    downloadURL(filename, getTextDataURI(textData));\n}\n\nfunction downloadImageFromSVG(filename, filetype, svg, width, height)\n{\n    const blob = createBlobFromSVG(svg);\n    switch (filetype)\n    {\n        case FILE_TYPE_PNG:\n            {\n                const url = URL.createObjectURL(blob);\n\n                const canvas = document.createElement('canvas');\n                const ctx = canvas.getContext('2d');\n                const pixelRatio = window.devicePixelRatio || 1;\n                canvas.width = width * pixelRatio;\n                canvas.height = height * pixelRatio;\n                canvas.style.width = width + 'px';\n                canvas.style.height = height + 'px';\n                ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n                const image = new Image();\n                image.onload = () => \n                {\n                    ctx.drawImage(image, 0, 0);\n                    URL.revokeObjectURL(url);\n\n                    const imageURI = canvas.toDataURL('image/' + filetype).replace('image/' + filetype, 'image/octet-stream');\n                    downloadURL(filename, imageURI);\n                };\n                image.src = url;\n            }\n            break;\n        case FILE_TYPE_SVG:\n            {\n                const reader = new FileReader();\n                reader.onload = () => \n                {\n                    downloadURL(filename, reader.result);\n                };\n                reader.readAsDataURL(blob);\n            }\n            break;\n        default:\n            throw new Error('Unknown file type \\'' + filetype + '\\'');\n    }\n}\n\nfunction downloadURL(filename, url)\n{\n    const element = document.createElement('a');\n    const headerIndex = url.indexOf(';');\n    url = url.substring(0, headerIndex + 1) + 'headers=Content-Disposition%3A%20attachment%3B%20filename=' + filename + ';' + url.substring(headerIndex + 1);\n    element.setAttribute('href', url);\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n    document.body.removeChild(element);\n}\n\nfunction createBlobFromSVG(svg)\n{\n    const styledSVG = computeSVGStyles(svg);\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(styledSVG);\n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    return blob;\n}\n\n// SOURCE: https://stackoverflow.com/questions/3975499/convert-svg-to-image-jpeg-png-etc-in-the-browser/44769098#44769098\nconst SVG_CONTAINERS = ['svg', 'g'];\nfunction computeSVGStyles(svg, dst = svg.cloneNode(true))\n{\n    let sourceChildren = svg.childNodes;\n    let children = dst.childNodes;\n\n    for (var index = 0; index < children.length; index++)\n    {\n        let child = children[index];\n        let tagName = child.tagName;\n        if (SVG_CONTAINERS.indexOf(tagName) != -1)\n        {\n            computeSVGStyles(sourceChildren[index], child);\n        }\n        else if (sourceChildren[index] instanceof Element)\n        {\n            const computedStyle = window.getComputedStyle(sourceChildren[index]);\n\n            let styleAttributes = [];\n            for(let styleName of Object.keys(computedStyle))\n            {\n                styleAttributes.push(`${styleName}:${computedStyle.getPropertyValue(styleName)};`);\n            }\n\n            child.setAttribute('style', styleAttributes.join(''));\n        }\n    }\n\n    return dst;\n}\n\nfunction getTextDataURI(data)\n{\n    return 'data:text/plain; charset=utf-8,' + encodeURIComponent(data);\n}\n\nasync function uploadFile(accept = [], multiple = false)\n{\n    return new Promise((resolve, reject) => {\n        const element = document.createElement('input');\n        element.addEventListener('change', (e) => {\n            if (multiple)\n            {\n                resolve(e.target.files);\n            }\n            else\n            {\n                resolve(e.target.files[0]);\n            }\n        });\n        element.type = 'file';\n        element.accept = accept.join(',');\n        element.style.display = 'none';\n        element.toggleAttribute('multiple', multiple);\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    });\n}\n\nconst TOP_INDEX = 0;\n\n// NOTE: Uses a binary heap to sort.\nclass PriorityQueue\n{\n    constructor(comparator)\n    {\n        this._heap = [];\n        this._comparator = comparator;\n    }\n\n    get size() { return this._heap.length; }\n\n    clear()\n    {\n        this._heap.length = 0;\n    }\n\n    push(...values)\n    {\n        for (const value of values)\n        {\n            this._heap.push(value);\n            this._shiftUp();\n        }\n    }\n\n    pop()\n    {\n        const result = this.peek();\n        let bottom = bottomIndex(this);\n        if (bottom > TOP_INDEX)\n        {\n            this._swap(TOP_INDEX, bottom);\n        }\n        this._heap.pop();\n        this._shiftDown();\n        return result;\n    }\n\n    /** Replaces the top value with the new value. */\n    replace(value)\n    {\n        const result = this.peek();\n        this._heap[TOP_INDEX] = value;\n        this._shiftDown();\n        return result;\n    }\n\n    peek()\n    {\n        return this._heap[TOP_INDEX];\n    }\n\n    /** @private */\n    _compare(i, j)\n    {\n        return this._comparator(this._heap[i], this._heap[j]);\n    }\n\n    /** @private */\n    _swap(i, j)\n    {\n        let result = this._heap[i];\n        this._heap[i] = this._heap[j];\n        this._heap[j] = result;\n    }\n\n    /** @private */\n    _shiftUp()\n    {\n        let node = this._heap.length - 1;\n        let nodeParent;\n        while (node > TOP_INDEX && this._compare(node, nodeParent = parentIndex(node)))\n        {\n            this._swap(node, nodeParent);\n            node = nodeParent;\n        }\n    }\n\n    /** @private */\n    _shiftDown()\n    {\n        const length = this._heap.length;\n        let node = TOP_INDEX;\n        let nodeMax;\n\n        let nodeLeft = leftIndex(node);\n        let flagLeft = nodeLeft < length;\n        let nodeRight = rightIndex(node);\n        let flagRight = nodeRight < length;\n\n        while ((flagLeft && this._compare(nodeLeft, node))\n            || (flagRight && this._compare(nodeRight, node)))\n        {\n            nodeMax = (flagRight && this._compare(nodeRight, nodeLeft)) ? nodeRight : nodeLeft;\n            this._swap(node, nodeMax);\n            node = nodeMax;\n\n            nodeLeft = leftIndex(node);\n            flagLeft = nodeLeft < length;\n            nodeRight = rightIndex(node);\n            flagRight = nodeRight < length;\n        }\n    }\n\n    values()\n    {\n        return this._heap;\n    }\n\n    [Symbol.iterator]()\n    {\n        return this._heap[Symbol.iterator]();\n    }\n}\n\nfunction bottomIndex(queue)\n{\n    return queue._heap.length - 1;\n}\n\nfunction parentIndex(i)\n{\n    return ((i + 1) >>> 1) - 1;\n}\n\nfunction leftIndex(i)\n{\n    return (i << 1) + 1;\n}\n\nfunction rightIndex(i)\n{\n    return (i + 1) << 1;\n}\n\n/**\n * Generates a uuid v4.\n * \n * @param {number} a The placeholder (serves for recursion within function).\n * @returns {string} The universally unique id.\n */\nfunction uuid(a = undefined)\n{\n    // https://gist.github.com/jed/982883\n    return a\n        ? (a ^ Math.random() * 16 >> a / 4).toString(16)\n        : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n}\n\nfunction lerp(a, b, t)\n{\n    return a + (b - a) * t;\n}\n\nfunction clamp(value, min, max)\n{\n    return Math.min(max, Math.max(min, value));\n}\n\nfunction cycle(value, min, max)\n{\n    let range = max - min;\n    let result = (value - min) % range;\n    if (result < 0) result += range;\n    return result + min;\n}\n\nfunction withinRadius(fromX, fromY, toX, toY, radius)\n{\n    const dx = fromX - toX;\n    const dy = fromY - toY;\n    return dx * dx + dy * dy <= radius * radius;\n}\n\nfunction distance2(fromX, fromY, toX, toY)\n{\n    let dx = toX - fromX;\n    let dy = toY - fromY;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction direction2(fromX, fromY, toX, toY)\n{\n    let dx = toX - fromX;\n    let dy = toY - fromY;\n    return Math.atan2(dy, dx);\n}\n\nfunction lookAt2(radians, target, dt)\n{\n    let step = cycle(target - radians, -Math.PI, Math.PI);\n    return clamp(radians + step, radians - dt, radians + dt);\n}\n\nconst TO_RAD_FACTOR = Math.PI / 180;\nconst TO_DEG_FACTOR = 180 / Math.PI;\nfunction toRadians(degrees)\n{\n    return degrees * TO_RAD_FACTOR;\n}\n\nfunction toDegrees(radians)\n{\n    return radians * TO_DEG_FACTOR;\n}\n\n/**\n * @callback DependencyCallback\n * @param {Object} node The target node to get the dependencies for.\n * @returns {Array<Object>} A list of all dependencies for the given node.\n */\n\n/**\n * Sort an array topologically.\n * \n * @param {Array<Object>} nodes List of all nodes (as long as it includes the root node).\n * @param {DependencyCallback} dependencyCallback A callback to get the dependencies of a node.\n * @returns {Array<Object>} A sorted array of node objects where the dependent nodes are always listed before the dependees.\n */\nfunction topoSort(nodes, dependencyCallback)\n{\n    let dependencyEntries = [];\n    for(let node of nodes)\n    {\n        let outs = dependencyCallback(node);\n        if (Array.isArray(outs))\n        {\n            dependencyEntries.push([node, ...outs]);\n        }\n        else if (outs)\n        {\n            throw new Error('Dependency callback must return an array.');\n        }\n    }\n    return computeDependencyList(\n        getNodesFromDependencyEntries(dependencyEntries),\n        getEdgesFromDependencyEntries(dependencyEntries)\n    );\n}\n\nfunction getNodesFromDependencyEntries(dependencyEntries)\n{\n    let result = new Set();\n    for(let dependencyEntry of dependencyEntries)\n    {\n        for(let value of dependencyEntry)\n        {\n            result.add(value);\n        }\n    }\n    return Array.from(result);\n}\n\nfunction getEdgesFromDependencyEntries(dependencyEntries)\n{\n    let result = [];\n    for(let dependencyEntry of dependencyEntries)\n    {\n        let source = dependencyEntry[0];\n        for(let i = 1; i < dependencyEntry.length; ++i)\n        {\n            let dependency = dependencyEntry[i];\n            result.push([source, dependency]);\n        }\n    }\n    return result;\n}\n\nfunction computeDependencyList(nodes, edges, dst = [])\n{\n    // Compute edge outs (more efficient lookup)\n    let edgeOuts = new Map();\n    for(let edge of edges)\n    {\n        if (edge.length > 1)\n        {\n            let source = edge[0];\n            let dest = edge[1];\n            if (!edgeOuts.has(source)) edgeOuts.set(source, new Set());\n            if (!edgeOuts.has(dest)) edgeOuts.set(dest, new Set());\n            edgeOuts.get(source).add(dest);\n        }\n    }\n\n    let context = {\n        edgeMap: edgeOuts,\n        index: nodes.length,\n        visited: new Set(),\n        dst,\n    };\n\n    for(let node of nodes)\n    {\n        visit(context, node, new Set());\n    }\n\n    return dst;\n}\n\nfunction visit(context, node, prev)\n{\n    if (prev.has(node))\n    {\n        throw new Error(`Found cyclic dependency for '${node.name || node}'.`);\n    }\n    \n    if (context.visited.has(node)) return;\n    context.visited.add(node);\n\n    if (context.edgeMap.has(node))\n    {\n        let outs = context.edgeMap.get(node);\n        if (outs.size > 0)\n        {\n            prev.add(node);\n            for(let out of outs)\n            {\n                visit(context, out, prev);\n            }\n            prev.delete(node);\n        }\n    }\n\n    context.dst.push(node);\n}\n\n/**\n * @template T\n * @typedef NodeCache<T>\n * @property {Record<T, number>} fscore\n * @property {Record<T, number>} gscore\n * @property {Record<T, number>} hscore\n * @property {Record<T, T>} parents\n */\n\n/**\n * @template T\n * @param {T} startId The unique representation of the starting position. Must be deterministic.\n * @param {T} goalId The unique representation of the stopping position. Must be deterministic.\n * @param {(node: T) => Array<T>} neighborsCallback Get all reachable neighbors from the given node.\n * @param {(from: T, to: T) => number} heuristicCallback Get the heuristics score across the two nodes.\n * @param {(from: T, to: T) => number} weightsCallback Get the weight if travelling between the two nodes.\n * @returns {Array<T>} If the goal is not reachable from the start, it will return an empty array.\n */\nfunction astarSearch(startId, goalId, neighborsCallback, heuristicCallback, weightsCallback)\n{\n    /** @type {NodeCache<T>} */\n    let cache = createCache();\n    cacheNode(cache, startId);\n    let opened = new Set();\n    let closed = new Set();\n    opened.add(startId);\n    while(opened.size > 0)\n    {\n        let minNodeId;\n        for(let openNodeId of opened)\n        {\n            if (minNodeId)\n            {\n                if (cache.fscore[openNodeId] < cache.fscore[minNodeId])\n                {\n                    minNodeId = openNodeId;\n                }\n            }\n            else\n            {\n                minNodeId = openNodeId;\n            }\n        }\n\n        let currentNodeId = minNodeId;\n        if (currentNodeId === goalId)\n        {\n            // Completed!\n            let result = [];\n            while(cache.parents[currentNodeId])\n            {\n                result.push(currentNodeId);\n                currentNodeId = cache.parents[currentNodeId];\n            }\n            result.push(currentNodeId);\n            return result.reverse();\n        }\n        else\n        {\n            // Not there yet...\n            closed.add(currentNodeId);\n            opened.delete(currentNodeId);\n            for(let neighborNodeId of neighborsCallback(currentNodeId))\n            {\n                if (closed.has(neighborNodeId)) continue;\n                let weight = weightsCallback(currentNodeId, neighborNodeId);\n                if (!Number.isFinite(weight)) continue;\n                let g = cache.gscore[currentNodeId] + weight;\n                let flag = false;\n                if (!opened.has(neighborNodeId))\n                {\n                    flag = true;\n                    cacheNode(cache, neighborNodeId);\n                    cache.hscore[neighborNodeId] = heuristicCallback(neighborNodeId, goalId);\n                    opened.add(neighborNodeId);\n                }\n                else if (g < cache.gscore[neighborNodeId])\n                {\n                    flag = true;\n                }\n                // Use the new g score if better\n                if (flag)\n                {\n                    cache.parents[neighborNodeId] = currentNodeId;\n                    cache.gscore[neighborNodeId] = g;\n                    cache.fscore[neighborNodeId] = g + cache.hscore[neighborNodeId];\n                }\n            }\n        }\n    }\n    return [];\n}\n\n/**\n * @template T\n * @returns {NodeCache<T>}\n */\nfunction createCache()\n{\n    return {\n        fscore: {},\n        gscore: {},\n        hscore: {},\n        parents: {},\n    };\n}\n\n/**\n * @template T\n * @param {NodeCache<T>} cache \n * @param {T} id \n * @param {number} f \n * @param {number} g \n * @param {number} h \n * @param {T} parent \n * @returns {T}\n */\nfunction cacheNode(cache, id, f = Number.POSITIVE_INFINITY, g = Number.POSITIVE_INFINITY, h = Number.NaN, parent = null)\n{\n    cache.fscore[id] = f;\n    cache.gscore[id] = g;\n    cache.hscore[id] = h;\n    cache.parents[id] = parent;\n    return id;\n}\n\nfunction fisherYatesShuffle(array)\n{\n    for(let i = array.length - 1; i > 0; --i)\n    {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n}\n\nfunction bitCount(n)\n{\n    n = n - ((n >> 1) & 0x55555555);\n    n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n    return ((n + (n >> 4) & 0xF0F0F0F) * 0x1010101) >> 24;\n}\n\nexport { Eventable, FILE_TYPE_PNG, FILE_TYPE_SVG, Logger, PriorityQueue, astarSearch, bitCount, bresenhamLine, clamp, cycle, direction2, distance2, downloadImageFromSVG, downloadText, downloadURL, fisherYatesShuffle, lerp, lookAt2, toDegrees, toRadians, topoSort, uploadFile, uuid, withinRadius };\n", "/**\n * @typedef RandomGeneratorLike\n * @property {NumberFunction} next \n * \n * @callback NumberFunction Generates a pseudo-random number\n * from 0 inclusive to 1 exclusive.\n * @returns {number} A pseudo-randomly generated number.\n */\n\n/**\n * Represents a pseudo-random number generator. This is only used for\n * type information.\n * \n * All random number generator instances are expected to implement\n * {@link RandomGeneratorLike}. If using classes, you can extend\n * {@link RandomBase} to enforce this, but this should not necessary\n * nor assumed.\n */\nclass RandomBase\n{\n    /**\n     * Generates a pseudo-random number from 0 inclusive to 1 exclusive.\n     * \n     * @abstract\n     * @returns {number} A pseudo-randomly generated number.\n     */\n    next()\n    {\n        return 0;\n    }\n}\n\nclass MathRandom extends RandomBase\n{\n    /** @override */\n    next()\n    {\n        return Math.random();\n    }\n}\n\n/**\n * A simple and fast 32-bit PRNG.\n * \n * @see {@link https://github.com/bryc/code/blob/master/jshash/PRNGs.md}\n */\nclass Mulberry32 extends RandomBase\n{\n    /**\n     * @param {number} seed An unsigned 32-bit integer.\n     */\n    constructor(seed)\n    {\n        super();\n\n        this.seed = seed;\n\n        /** @private */\n        this.a = seed;\n    }\n\n    /** @override */\n    next()\n    {\n        var t = this.a += 0x6D2B79F5;\n        t = Math.imul(t ^ t >>> 15, t | 1);\n        t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n        return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    }\n}\n\n/**\n * @typedef {import('./generators/RandomBase.js').RandomGeneratorLike} RandomGeneratorLike\n * @typedef {import('./generators/RandomBase.js').RandomBase} RandomBase\n */\n\nclass Random\n{\n    /**\n     * The lazily-initiated, static instance of this random class.\n     * \n     * @protected\n     */\n    static get RAND()\n    {\n        let instance = new (this)();\n        \n        this.next = this.next.bind(this);\n        this.choose = this.choose.bind(this);\n        this.range = this.range.bind(this);\n        this.rangeInt = this.rangeInt.bind(this);\n        this.sign = this.sign.bind(this);\n\n        Object.defineProperty(this, 'RAND', { value: instance });\n        return instance;\n    }\n\n    /**\n     * @param {RandomGeneratorLike|RandomBase|number} [randomGenerator]\n     * If number type, the param will be used as a seed for a Mulberry32 PRNG.\n     * Otherwise, it is the pseudo-random number generator object that provides\n     * the generated numbers through `next()`. By default, if undefined, this\n     * will use the browser-specific `Math.random()` implementation.\n     */\n    constructor(randomGenerator = undefined)\n    {\n        if (typeof randomGenerator === 'number')\n        {\n            this.generator = new Mulberry32(randomGenerator);\n        }\n        else if (randomGenerator)\n        {\n            this.generator = randomGenerator;\n        }\n        else\n        {\n            this.generator = new MathRandom();\n        }\n\n        this.next = this.next.bind(this);\n        this.choose = this.choose.bind(this);\n        this.range = this.range.bind(this);\n        this.rangeInt = this.rangeInt.bind(this);\n        this.sign = this.sign.bind(this);\n    }\n\n    static next() { return this.RAND.next(); }\n    next()\n    {\n        return this.generator.next();\n    }\n\n    static choose(list) { return this.RAND.choose(list); }\n    choose(list)\n    {\n        return list[Math.floor(this.generator.next() * list.length)];\n    }\n\n    static range(min, max) { return this.RAND.range(min, max); }\n    range(min, max)\n    {\n        return ((max - min) * this.generator.next()) + min;\n    }\n\n    static rangeInt(min, max) { return this.RAND.rangeInt(min, max); }\n    rangeInt(min, max)\n    {\n        return Math.trunc(this.range(min, max));\n    }\n    \n    static sign() { return this.RAND.sign(); }\n    sign()\n    {\n        return this.generator.next() < 0.5 ? -1 : 1;\n    }\n}\n\n/**\n * A very fast 32-bit PRNG.\n * \n * @see https://github.com/bryc/code/blob/master/jshash/PRNGs.md\n */\nclass SmallFastCounter32 extends RandomBase\n{\n    /**\n     * @param {number} a An unsigned 32-bit integer.\n     * @param {number} b An unsigned 32-bit integer.\n     * @param {number} c An unsigned 32-bit integer.\n     * @param {number} d An unsigned 32-bit integer.\n     */\n    constructor(a, b, c, d)\n    {\n        super();\n        \n        /** @private */\n        this.a = a;\n        /** @private */\n        this.b = b;\n        /** @private */\n        this.c = c;\n        /** @private */\n        this.d = d;\n    }\n\n    /** @override */\n    next()\n    {\n        let { a, b, c, d } = this;\n        a |= 0; b |= 0; c |= 0; d |= 0;\n        let t = (a + b | 0) + d | 0;\n        d = d + 1 | 0;\n        a = b ^ b >>> 9;\n        b = c + (c << 3) | 0;\n        c = c << 21 | c >>> 11;\n        c = c + t | 0;\n        this.a = a; this.b = b; this.c = c; this.d = d;\n        return (t >>> 0) / 4294967296;\n    }\n}\n\nexport { MathRandom, Mulberry32, Random, RandomBase, SmallFastCounter32 };\n", "import { Random } from '@milque/random';\n\nexport class Mines\n{\n    constructor(width, height, rand = new Random())\n    {\n        this.width = width;\n        this.height = height;\n        this.length = width * height;\n        this.rand = rand;\n\n        this.dangerCount = this.length * 0.2;\n        \n        this.data = {\n            tiles: new Array(length),\n            overlay: new Array(length),\n            regions: new Array(length),\n            solids: new Array(length),\n            marks: new Array(length),\n        };\n\n        setupChunkData(this, this.dangerCount, this.rand);\n    }\n\n    dig(tileX, tileY)\n    {\n        const chunkWidth = this.width;\n        const chunkHeight = this.height;\n        let chunkData = this.data;\n\n        let tileIndex = tileX + tileY * chunkWidth;\n        if (chunkData.solids[tileIndex] <= 0) return true;\n        if (chunkData.marks[tileIndex] > 0) return true;\n        \n        // Got the bad square :(\n        if (chunkData.tiles[tileIndex] > 0)\n        {\n            chunkData.solids[tileIndex] = 0;\n            return false;\n        }\n    \n        let visited = new Set();\n        let unchecked = [];\n        unchecked.push(tileIndex);\n        while(unchecked.length > 0)\n        {\n            let next = unchecked.pop();\n            visited.add(next);\n    \n            let nextX = next % chunkWidth;\n            let nextY = Math.floor(next / chunkWidth);\n    \n            chunkData.solids[next] = 0;\n            if (chunkData.overlay[next] <= 0)\n            {\n                let neighbors = getNeighbors(nextX, nextY, chunkWidth, chunkHeight);\n                for(let neighbor of neighbors)\n                {\n                    if (!visited.has(neighbor) && chunkData.marks[neighbor] <= 0)\n                    {\n                        unchecked.push(neighbor);\n                    }\n                }\n            }\n        }\n    \n        return true;\n    }\n\n    mark(tileX, tileY)\n    {\n        const chunkWidth = this.width;\n        let chunkData = this.data;\n        \n        let tileIndex = tileX + tileY * chunkWidth;\n        if (chunkData.solids[tileIndex] <= 0) return false;\n    \n        if (chunkData.marks[tileIndex] > 0)\n        {\n            chunkData.marks[tileIndex] = 0;\n        }\n        else\n        {\n            chunkData.marks[tileIndex] = 1;\n        }\n        return true;\n    }\n\n    checkWinCondition()\n    {\n        const chunkData = this.data;\n        for(let i = 0; i < chunkData.tiles.length; ++i)\n        {\n            if (chunkData.solids[i] > 0 && chunkData.tiles[i] <= 0)\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    reset()\n    {\n        setupChunkData(this, this.dangerCount, this.rand);\n    }\n\n    clear()\n    {\n        let chunkData = this.data;\n        for(let i = 0; i < this.length; ++i)\n        {\n            chunkData.tiles[i] = 0;\n            chunkData.overlay[i] = 0;\n            chunkData.solids[i] = 1;\n            chunkData.regions[i] = 0;\n            chunkData.marks[i] = 0;\n        }\n    }\n}\n\nfunction setupChunkData(mines, mineCount, rand)\n{\n    mines.clear();\n    \n    const chunkWidth = mines.width;\n    const chunkHeight = mines.height;\n    const chunkRand = mines.rand;\n    let chunkData = mines.data;\n\n    for(let i = 0; i < mineCount; ++i)\n    {\n        let x = Math.floor(rand.range(0, chunkWidth));\n        let y = Math.floor(rand.range(0, chunkHeight));\n        let tileIndex = x + y * chunkWidth;\n\n        let tile = 1;\n        if (chunkData.tiles[tileIndex] === 0)\n        {\n            chunkData.tiles[tileIndex] += tile;\n            chunkData.overlay[tileIndex] = Infinity;\n            for(let neighbor of getNeighbors(x, y, chunkWidth, chunkHeight))\n            {\n                chunkData.overlay[neighbor] += tile;\n            }\n        }\n        else\n        {\n            --i;\n        }\n    }\n\n    const regions = Array.from(\n        regionize(chunkData, chunkWidth, chunkHeight, i => chunkData.overlay[i] > 0).values()\n    ).sort((a, b) => a.count - b.count);\n    const regionBySize = [ [ regions[0] ] ];\n    let sizeIndex = 0;\n    for(let region of regions)\n    {\n        if (regionBySize[sizeIndex][0].count !== region.count)\n        {\n            regionBySize[++sizeIndex] = [ region ];\n        }\n        else\n        {\n            regionBySize[sizeIndex].push(region);\n        }\n    }\n    let medianRegions = regionBySize[Math.floor(regionBySize.length / 2)];\n    let targetRegion = chunkRand.choose(medianRegions);\n    let targetTileIndex = targetRegion.tileIndex;\n\n    let digX = targetTileIndex % chunkWidth;\n    let digY = Math.floor(targetTileIndex / chunkWidth);\n    mines.dig(digX, digY);\n}\n\nfunction regionize(chunkData, chunkWidth, chunkHeight, isSeparator)\n{\n    const length = chunkData.tiles.length;\n\n    let regionMapping = new Map();\n    let tileToRegionMapping = new Map();\n\n    let regionIndex = 1;\n    for(let i = 0; i < length; ++i)\n    {\n        if (isSeparator(i))\n        {\n            chunkData.regions[i] = -1;\n        }\n        else\n        {\n            let result = subRegionize(chunkData, chunkWidth, chunkHeight, i, regionIndex++, isSeparator);\n            if (result)\n            {\n                if (tileToRegionMapping.has(result.tileIndex))\n                {\n                    const regionIndex = tileToRegionMapping.get(result.tileIndex);\n                    regionMapping.delete(regionIndex);\n                    tileToRegionMapping.delete(result.tileIndex);\n                }\n                tileToRegionMapping.set(result.tileIndex, result.regionIndex);\n                regionMapping.set(result.regionIndex, result);\n            }\n        }\n    }\n\n    return regionMapping;\n}\n\nfunction subRegionize(chunkData, chunkWidth, chunkHeight, index, regionIndex, isSeparator)\n{\n    let minIndex = Infinity;\n    let visited = new Set();\n    let unchecked = [];\n    unchecked.push(index);\n    while(unchecked.length > 0)\n    {\n        let next = unchecked.pop();\n        if (isSeparator(next)) continue;\n\n        visited.add(next);\n\n        let nextX = next % chunkWidth;\n        let nextY = Math.floor(next / chunkWidth);\n        \n        chunkData.regions[next] = regionIndex;\n        if (next < minIndex) minIndex = next;\n        \n        let neighbors = getNeighbors(nextX, nextY, chunkWidth, chunkHeight);\n        for(let neighbor of neighbors)\n        {\n            if (!visited.has(neighbor))\n            {\n                unchecked.push(neighbor);\n            }\n        }\n    }\n\n    if (minIndex < Infinity)\n    {\n        return {\n            tileIndex: minIndex,\n            regionIndex,\n            count: visited.size,\n        };\n    }\n    else\n    {\n        return null;\n    }\n}\n\nfunction getNeighbors(tileX, tileY, chunkWidth, chunkHeight)\n{\n    let dst = [];\n    let tileIndex = tileX + tileY * chunkWidth;\n    // Cardinals\n    if (tileX > 0) dst.push(tileIndex - 1);\n    if (tileX < chunkWidth - 1) dst.push(tileIndex + 1);\n    if (tileY > 0) dst.push(tileIndex - chunkWidth);\n    if (tileY < chunkHeight - 1) dst.push(tileIndex + chunkWidth);\n    // Inter-Cardinals\n    if (tileX > 0 && tileY > 0) dst.push(tileIndex - 1 - chunkWidth);\n    if (tileX < chunkWidth - 1 && tileY > 0) dst.push(tileIndex + 1 - chunkWidth);\n    if (tileX > 0 && tileY < chunkHeight - 1) dst.push(tileIndex - 1 + chunkWidth);\n    if (tileX < chunkWidth - 1 && tileY < chunkHeight - 1) dst.push(tileIndex + 1 + chunkWidth);\n    return dst;\n}\n", "/** @typedef {import('@milque/input').InputContext} InputContext */\n\nexport const INPUTS = {};\n\n/**\n * @param {InputContext} inputs \n */\nexport function attach(inputs)\n{\n    inputs.bindAxis('CursorX', 'Mouse', 'PosX');\n    inputs.bindAxis('CursorY', 'Mouse', 'PosY');\n    inputs.bindButton('Activate', 'Mouse', 'Button0');\n    inputs.bindButton('Mark', 'Mouse', 'Button2');\n    inputs.bindButton('Restart', 'Keyboard', 'KeyR');\n\n    INPUTS.CursorX = inputs.getInput('CursorX');\n    INPUTS.CursorY = inputs.getInput('CursorY');\n    INPUTS.Activate = inputs.getInput('Activate');\n    INPUTS.Mark = inputs.getInput('Mark');\n    INPUTS.Restart = inputs.getInput('Restart');\n}\n", "/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import { mat4, vec3, quat } from 'gl-matrix';\n\nexport class Camera2D\n{\n    static screenToWorld(screenX, screenY, viewMatrix, projectionMatrix)\n    {\n        let mat = mat4.multiply(mat4.create(), projectionMatrix, viewMatrix);\n        mat4.invert(mat, mat);\n        let result = vec3.fromValues(screenX, screenY, 0);\n        vec3.transformMat4(result, result, mat);\n        return result;\n    }\n    \n    constructor(left = -1, right = 1, top = -1, bottom = 1, near = 0, far = 1)\n    {\n        this.position = vec3.create();\n        this.rotation = quat.create();\n        this.scale = vec3.fromValues(1, 1, 1);\n\n        this.clippingPlane = {\n            left, right, top, bottom, near, far,\n        };\n        \n        this._viewMatrix = mat4.create();\n        this._projectionMatrix = mat4.create();\n    }\n\n    get x() { return this.position[0]; }\n    set x(value) { this.position[0] = value; }\n    get y() { return this.position[1]; }\n    set y(value) { this.position[1] = value; }\n    get z() { return this.position[2]; }\n    set z(value) { this.position[2] = value; }\n\n    /** Moves the camera. This is the only way to change the position. */\n    moveTo(x, y, z = 0, dt = 1)\n    {\n        let nextPosition = vec3.fromValues(x, y, z);\n        vec3.lerp(this.position, this.position, nextPosition, Math.min(1, dt));\n    }\n\n    getViewMatrix(out = this._viewMatrix)\n    {\n        let viewX = -Math.round(this.x);\n        let viewY = -Math.round(this.y);\n        let viewZ = this.z === 0 ? 1 : 1 / this.z;\n        let invPosition = vec3.fromValues(viewX, viewY, 0);\n        let invScale = vec3.fromValues(this.scale[0] * viewZ, this.scale[1] * viewZ, 1);\n        mat4.fromRotationTranslationScale(out, this.rotation, invPosition, invScale);\n        return out;\n    }\n\n    getProjectionMatrix(out = this._projectionMatrix)\n    {\n        let { left, right, top, bottom, near, far } = this.clippingPlane;\n        mat4.ortho(out, left, right, top, bottom, near, far);\n        return out;\n    }\n}\n", "export class CanvasView\n{\n    constructor()\n    {\n        this.prevTransformMatrix = null;\n\n        this.domProjectionMatrix = new DOMMatrix();\n        this.domViewMatrix = new DOMMatrix();\n\n        this.ctx = null;\n    }\n\n    begin(ctx, viewMatrix, projectionMatrix)\n    {\n        if (this.ctx)\n        {\n            throw new Error('View already begun - maybe missing end() call?');\n        }\n\n        if (viewMatrix) setDOMMatrix(this.domViewMatrix, viewMatrix);\n        if (projectionMatrix) setDOMMatrix(this.domProjectionMatrix, projectionMatrix);\n\n        this.prevTransformMatrix = ctx.getTransform();\n\n        ctx.setTransform(this.domProjectionMatrix);\n        const { a, b, c, d, e, f } = this.domViewMatrix;\n        ctx.transform(a, b, c, d, e, f);\n\n        this.ctx = ctx;\n    }\n\n    end(ctx)\n    {\n        ctx.setTransform(this.prevTransformMatrix);\n        \n        this.ctx = null;\n    }\n}\n\nexport function setDOMMatrix(domMatrix, glMatrix)\n{\n    domMatrix.a = glMatrix[0];\n    domMatrix.b = glMatrix[1];\n    domMatrix.c = glMatrix[4];\n    domMatrix.d = glMatrix[5];\n    domMatrix.e = glMatrix[12];\n    domMatrix.f = glMatrix[13];\n    return domMatrix;\n}\n", "import { clamp } from '@milque/util';\n\nimport { Mines } from './Mines.js';\nimport { INPUTS as MinesControls } from './MinesControls.js';\nimport { Camera2D } from './Camera2D.js';\nimport { CanvasView } from './CanvasView.js';\n\nexport const MAX_HEALTH = 3;\n\nexport const CHUNK_TILE_SIZE = 16;\nexport const CHUNK_OFFSET_X = 32;\nexport const CHUNK_OFFSET_Y = 32;\n\nexport function onStart()\n{\n    this.mines = new Mines(16, 16);\n    this.minesView = new CanvasView();\n    this.camera = new Camera2D();\n    this.camera.x = -32;\n    this.camera.y = -32;\n\n    this.firstAction = false;\n\n    this.health = MAX_HEALTH;\n    this.gameOver = false;\n    this.gameWin = false;\n    this.gameTime = 0;\n}\n\nexport function onPreUpdate(dt)\n{\n\n}\n\nexport function onUpdate(dt)\n{\n    // Check if restarting...\n    if (MinesControls.Restart.released)\n    {\n        restart(this);\n        return;\n    }\n\n    // Do stuff...\n    if (this.gameOver || this.gameWin)\n    {\n        // Do nothing...\n        if (MinesControls.Activate.value || MinesControls.Mark.value)\n        {\n            restart(this);\n            return;\n        }\n    }\n    else\n    {\n        const worldWidth = this.display.width;\n        const worldHeight = this.display.height;\n\n        if (this.firstAction)\n        {\n            this.gameTime += dt;\n        }\n\n        let flag = false;\n        if (MinesControls.Activate.released)\n        {\n            let mouseX = MinesControls.CursorX.value * worldWidth;\n            let mouseY = MinesControls.CursorY.value * worldHeight;\n\n            let minesPos = Camera2D.screenToWorld(mouseX, mouseY, this.camera.getViewMatrix(), this.camera.getProjectionMatrix());\n            let mouseTileX = clamp(Math.floor(minesPos[0] / CHUNK_TILE_SIZE), 0, this.mines.width - 1);\n            let mouseTileY = clamp(Math.floor(minesPos[1] / CHUNK_TILE_SIZE), 0, this.mines.height - 1);\n            let result = this.mines.dig(mouseTileX, mouseTileY);\n\n            if (!result)\n            {\n                dealDamage(this, 1);\n            }\n\n            if (this.mines.checkWinCondition())\n            {\n                gameWin(this);\n            }\n\n            flag = true;\n        }\n\n        if (MinesControls.Mark.released)\n        {\n            let mouseX = MinesControls.CursorX.value * worldWidth;\n            let mouseY = MinesControls.CursorY.value * worldHeight;\n            let minesPos = Camera2D.screenToWorld(mouseX, mouseY, this.camera.getViewMatrix(), this.camera.getProjectionMatrix());\n            let mouseTileX = clamp(Math.floor(minesPos[0] / CHUNK_TILE_SIZE), 0, this.mines.width - 1);\n            let mouseTileY = clamp(Math.floor(minesPos[1] / CHUNK_TILE_SIZE), 0, this.mines.height - 1);\n            this.mines.mark(mouseTileX, mouseTileY);\n\n            flag = true;\n        }\n\n        if (flag && !this.firstAction)\n        {\n            this.firstAction = true;\n        }\n    }\n}\n\nfunction dealDamage(scene, damage)\n{\n    scene.health -= damage;\n    if (scene.health <= 0)\n    {\n        gameOver(scene);\n    }\n}\n\nfunction restart(scene)\n{\n    scene.mines.reset();\n    scene.gameOver = false;\n    scene.gameWin = false;\n    scene.gameTime = 0;\n    scene.firstAction = false;\n    scene.health = MAX_HEALTH;\n}\n\nfunction gameWin(scene)\n{\n    scene.gameWin = true;\n}\n\nfunction gameOver(scene)\n{\n    scene.gameOver = true;\n}\n", "export async function loadImage(src, imageType = undefined)\n{\n    if (typeof src === 'string')\n    {\n        const response = await fetch(src);\n        const arrayBuffer = await response.arrayBuffer();\n        if (typeof imageType === 'undefined')\n        {\n            let i = src.lastIndexOf('.');\n            if (i < 0)\n            {\n                throw new Error('Cannot load from url - unknown image type.');\n            }\n            else\n            {\n                imageType = 'image/' + src.slice(i + 1);\n            }\n        }\n        return loadImage(arrayBuffer, imageType);\n    }\n    else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src)))\n    {\n        throw new Error(\n            'Cannot load from source - must be '\n            + 'an array buffer or fetchable url');\n    }\n    /** @type {ArrayBuffer} */\n    const arrayBuffer = src;\n    if (typeof imageType === 'undefined')\n    {\n        imageType = 'image/png';\n    }\n    let blob = new Blob([ arrayBuffer ], { type: imageType });\n    let imageUrl = URL.createObjectURL(blob);\n    let image = new Image();\n    return new Promise((resolve, reject) => {\n        image.addEventListener('load', () => {\n            resolve(image);\n        });\n        image.addEventListener('error', e => {\n            reject(e);\n        });\n        image.src = imageUrl;\n    });\n}\n", "import { loadImage } from './ImageLoader.js';\n\nconst ASSETS = {\n    LOADED: false,\n    TILE_IMAGE: null,\n    NUMS_IMAGE: null,\n    MARK_IMAGE: null,\n};\n\n/**\n * @param {import('@milque/asset').AssetPack} assets \n */\nexport async function load(assets)\n{\n    ASSETS.TILE_IMAGE = await loadImage(assets.files.get('res/tile.png'));\n    ASSETS.NUMS_IMAGE = await loadImage(assets.files.get('res/nums.png'));\n    ASSETS.MARK_IMAGE = await loadImage(assets.files.get('res/flag.png'));\n    ASSETS.LOADED = true;\n}\n\nexport function renderMines(ctx, mines, tileSize = 16)\n{\n    if (!ASSETS.LOADED) throw new Error('Assets for this renderer have not yet been loaded.');\n\n    const chunkWidth = mines.width;\n    const chunkHeight = mines.height;\n    const chunkData = mines.data;\n\n    const halfTileSize = tileSize / 2;\n\n    // Draw grid lines.\n    ctx.fillStyle = '#777777';\n    ctx.fillRect(0, 0, chunkWidth * tileSize, chunkHeight * tileSize);\n    drawGrid(ctx, 0, 0, chunkWidth * tileSize, chunkHeight * tileSize, tileSize, tileSize);\n\n    // Draw tiles.\n    for(let y = 0; y < chunkHeight; ++y)\n    {\n        for(let x = 0; x < chunkWidth; ++x)\n        {\n            let renderX = x * tileSize;\n            let renderY = y * tileSize;\n            let tileIndex = x + y * chunkWidth;\n\n            if (chunkData.solids[tileIndex] > 0)\n            {\n                ctx.drawImage(\n                    ASSETS.TILE_IMAGE,\n                    renderX,\n                    renderY,\n                    tileSize,\n                    tileSize);\n                    \n                if (chunkData.marks[tileIndex] > 0)\n                {\n                    ctx.drawImage(\n                        ASSETS.MARK_IMAGE,\n                        renderX,\n                        renderY,\n                        tileSize,\n                        tileSize);\n                }\n            }\n            else\n            {\n                if (chunkData.tiles[tileIndex] > 0)\n                {\n                    // ctx.drawImage(ASSETS.TILE_IMAGE, renderX - halfTileSize, renderY - halfTileSize, tileSize, tileSize);\n\n                    // Shaded box.\n                    ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n                    ctx.fillRect(renderX, renderY, tileSize, tileSize);\n\n                    // Text.\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    ctx.font = '10px sans-serif';\n                    ctx.fillStyle = '#000000';\n                    ctx.fillText('X', renderX + halfTileSize, renderY + halfTileSize);\n                }\n                else if (chunkData.overlay[tileIndex] > 0)\n                {\n                    let num = chunkData.overlay[tileIndex] - 1;\n                    ctx.drawImage(\n                        ASSETS.NUMS_IMAGE,\n                        32 * num, 0,\n                        32, 32,\n                        renderX, renderY,\n                        tileSize, tileSize);\n                }\n            }\n\n            // Utils.drawText(ctx, chunkData.regions[tileIndex], renderX, renderY, 0, 8, 'black');\n        }\n    }\n}\n\nfunction drawGrid(ctx, offsetX, offsetY, width, height, tileWidth, tileHeight)\n{\n    ctx.strokeStyle = '#888888';\n    ctx.beginPath();\n\n    for(let y = 0; y < height; y += tileHeight)\n    {\n        ctx.moveTo(offsetX, y + offsetY);\n        ctx.lineTo(offsetX + width, y + offsetY);\n    }\n\n    for(let x = 0; x < width; x += tileWidth)\n    {\n        ctx.moveTo(x + offsetX, offsetY);\n        ctx.lineTo(x + offsetX, offsetY + height);\n    }\n\n    ctx.stroke();\n}\n", "import { clamp } from '@milque/util';\n\nimport * as MainScene from './MainScene.js';\n\nimport { INPUTS as MinesControls } from './MinesControls.js';\nimport * as MinesRenderer from './MinesRenderer.js';\nimport { Camera2D } from './Camera2D.js';\n\nconst HEALTH_X = 0;\nconst HEALTH_Y = 0;\n\nexport async function load(assets)\n{\n    await MinesRenderer.load(assets);\n}\n\nexport function unload()\n{\n\n}\n\nexport function onRender(view, world)\n{\n    let ctx = view.context;\n    const viewMatrix = world.camera.getViewMatrix();\n    const projectionMatrix = world.camera.getProjectionMatrix();\n\n    world.minesView.begin(ctx, viewMatrix, projectionMatrix);\n    {\n        MinesRenderer.renderMines(ctx, world.mines, MainScene.CHUNK_TILE_SIZE);\n    }\n    world.minesView.end(ctx);\n\n    const chunkWidth = world.mines.width;\n    const chunkHeight = world.mines.height;\n    const chunkOffsetX = MainScene.CHUNK_OFFSET_X;\n    const chunkOffsetY = MainScene.CHUNK_OFFSET_Y;\n    const tileSize = MainScene.CHUNK_TILE_SIZE;\n\n    let mouseX = MinesControls.CursorX.value * view.width;\n    let mouseY = MinesControls.CursorY.value * view.height;\n    let minesPos = Camera2D.screenToWorld(mouseX, mouseY, viewMatrix, projectionMatrix);\n    let mouseTileX = clamp(Math.floor(minesPos[0] / tileSize), 0, chunkWidth - 1);\n    let mouseTileY = clamp(Math.floor(minesPos[1] / tileSize), 0, chunkHeight - 1);\n    \n    ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n    ctx.fillRect(\n        chunkOffsetX + mouseTileX * tileSize,\n        chunkOffsetY + mouseTileY * tileSize,\n        tileSize, tileSize);\n    \n    // Draw shadow\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n    ctx.fillRect(0, 0, view.width, chunkOffsetY);\n    ctx.fillRect(0, view.height - chunkOffsetY, view.width, chunkOffsetY);\n    ctx.fillRect(0, chunkOffsetY, chunkOffsetX, view.height - chunkOffsetY * 2);\n    ctx.fillRect(view.width - chunkOffsetX, chunkOffsetY, chunkOffsetX, view.height - chunkOffsetY * 2);\n    \n    // Draw health\n    for(let i = 0; i < MainScene.MAX_HEALTH; ++i)\n    {\n        let color = i < world.health ? 'salmon' : 'darkgray';\n        ctx.fillStyle = color;\n        ctx.fillRect(\n            HEALTH_X + i * tileSize,\n            HEALTH_Y,\n            tileSize - 3,\n            tileSize - 3);\n    }\n\n    if (world.gameOver)\n    {\n        drawBox(ctx, view.width / 2, view.height / 2, view.width * 0.7, 8, 'black');\n        drawText(ctx, view.width / 2 + 1, view.height / 2 + 1, 'Game Over', 32, 'black');\n        drawText(ctx, view.width / 2 - 1, view.height / 2 - 1, 'Game Over', 32, 'white');\n        \n        drawText(ctx, view.width / 2 + 1, view.height / 2 + 24 + 1, 'Click to continue', 16, 'black');\n        drawText(ctx, view.width / 2 - 1, view.height / 2 + 24 - 1, 'Click to continue', 16, 'white');\n    }\n    else if (world.gameWin)\n    {\n        drawBox(ctx, view.width / 2, view.height / 2, view.width * 0.7, 8, 'black');\n        drawText(ctx, view.width / 2 + 1, view.height / 2 + 1, 'Success!', 32, 'black');\n        drawText(ctx, view.width / 2 - 1, view.height / 2 - 1, 'Success!', 32, 'gold');\n        \n        drawText(ctx, view.width / 2 + 1, view.height / 2 + 24 + 1, 'Click to continue', 16, 'black');\n        drawText(ctx, view.width / 2 - 1, view.height / 2 + 24 - 1, 'Click to continue', 16, 'white');\n    }\n\n    drawText(ctx, view.width / 2, view.height - tileSize, `Time: ${Math.floor(world.gameTime)}`, 16, 'white');\n}\n\nfunction drawBox(ctx, x, y, width, height, color)\n{\n    ctx.translate(x, y);\n    {\n        let halfWidth = width / 2;\n        let halfHeight= height / 2;\n        ctx.fillStyle = color;\n        ctx.fillRect(-halfWidth, -halfHeight, width, height);\n    }\n    ctx.translate(-x, -y);\n}\n\nfunction drawText(ctx, x, y, text, fontSize, color)\n{\n    ctx.translate(x, y);\n    {\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.font = `${fontSize}px sans-serif`;\n        ctx.fillStyle = color;\n        ctx.fillText(text, 0, 0);\n    }\n    ctx.translate(-x, -y);\n}\n", "import '@milque/display';\nimport '@milque/input';\nimport '@milque/asset';\nimport './error.js';\n\nimport * as MainScene from './MainScene.js';\nimport * as MainRender from './MainRender.js';\n\nimport { attach } from './MinesControls.js';\n\n/**\n * @typedef {import('@milque/display').DisplayPort} DisplayPort\n * @typedef {import('@milque/input').InputContext} InputContext\n * @typedef {import('@milque/asset').AssetPack} AssetPack\n */\n\n/*\n\nWhat is good in Minesweeper?\n- Inherant scaling difficulty as the game progresses (less tiles)\n- Clean ruleset\n    - Deductive reasoning and arithmetic (best forms of logic for play)\n- Replay value (randomized maps)\n- Pure form\n\ndeterministic, mostly.\nHigh risk / High reward? (sadly, only high risk)\n\nWhat is bad in minesweeper?\n- Doesn't have a progression Curve.\n- Don't have low risk options.\n- DONT LIKE TIMED TASKS!!!\n    - Hard ceiling\n- CANNOT BE IMPOSSIBLE TO WIN\n\nMaybe:\n// Some of the bombs are treasures.\n// Either chance it, use a life, or use a scanner.\n\n*/\n\ndocument.addEventListener('DOMContentLoaded', main);\nasync function main()\n{\n    /** @type {DisplayPort} */\n    const display = document.querySelector('display-port');\n    const ctx = display.canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = false;\n\n    /** @type {InputContext} */\n    const inputs =  document.querySelector('input-port').getContext('axisbutton');\n    attach(inputs);\n\n    /** @type {AssetPack} */\n    const assets = document.querySelector('asset-pack');\n    await new Promise((resolve, reject) => {\n        assets.addEventListener('load', resolve);\n        assets.addEventListener('error', reject);\n    });\n\n    const world = { display };\n    await MainRender.load.call(world, assets);\n    MainScene.onStart.call(world);\n\n    display.addEventListener('frame', e => {\n        const dt = e.detail.deltaTime / 1000;\n\n        MainScene.onPreUpdate.call(world, dt);\n        inputs.poll();\n        MainScene.onUpdate.call(world, dt);\n\n        const view = {\n            context: ctx,\n            width: display.width,\n            height: display.height,\n        };\n        ctx.clearRect(0, 0, view.width, view.height);\n        MainRender.onRender.call(world, view, world);\n    });\n}\n"],
  "mappings": "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",
  "names": []
}
