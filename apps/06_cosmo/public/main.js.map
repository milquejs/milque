{
  "version": 3,
  "sources": ["node-modules-polyfills:path", "node-modules-polyfills-commonjs:path", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/constants.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/utils.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/scan.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/parse.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/picomatch.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/index.js", "../../../libs/display/src/DisplayPort.js", "../../../libs/input/src/state/InputState.js", "../../../libs/input/src/state/AxisState.js", "../../../libs/input/src/state/ButtonState.js", "../../../libs/input/src/keycode/KeyCode.js", "../../../libs/input/src/keycode/KeyCodes.js", "../../../libs/input/src/binding/InputBinding.js", "../../../libs/input/src/keycode/KeyCodeHelper.js", "../../../libs/input/src/binding/AxisBinding.js", "../../../libs/input/src/binding/ButtonBinding.js", "../../../libs/input/src/binding/AxisButtonBinding.js", "../../../libs/input/src/device/InputDevice.js", "../../../libs/input/src/device/KeyboardDevice.js", "../../../libs/input/src/device/MouseDevice.js", "../../../libs/input/src/inputcode/InputCode.js", "../../../libs/input/src/AutoPoller.js", "../../../libs/input/src/DeviceInputAdapter.js", "../../../libs/input/src/InputBindings.js", "../../../libs/input/src/InputContext.js", "../../../libs/input/src/inputport/InputPort.js", "../../../libs/input/src/Keyboard.js", "../../../libs/input/src/Mouse.js", "../../../common/temp/node_modules/.pnpm/fflate@0.7.4/node_modules/fflate/esm/browser.js", "../../../libs/asset/src/GlobExp.js", "../../../libs/asset/src/AssetStore.js", "../../../libs/asset/src/AssetManager.js", "../../../libs/asset/src/AssetRef.js", "../../../libs/asset/src/AssetHelper.js", "../../../libs/asset/src/loaders/AtlasLoader.js", "../../../libs/asset/src/loaders/BMFontLoader.js", "../../../libs/asset/src/loaders/ImageLoader.js", "../../../libs/asset/src/loaders/OBJLoader.js", "../../../libs/asset/src/loaders/TextLoader.js", "../../../libs/asset/src/loaders/AudioBufferLoader.js", "../src/error.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/common.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/vec3.js", "../../../libs/scene/src/camera/CameraHelper.js", "../../../libs/scene/src/camera/Camera.js", "../../../libs/scene/src/camera/PerspectiveCamera.js", "../../../libs/scene/src/camera/OrthographicCamera.js", "../../../libs/scene/src/camera/FirstPersonCameraController.js", "../../../libs/scene/src/scenegraph/SceneGraph.js", "../../../libs/scene/src/entity/ComponentClass.js", "../../../libs/scene/src/entity/EntityManager.js", "../../../libs/scene/src/topic/Topic.js", "../../../libs/scene/src/topic/CommandTopic.js", "../../../libs/scene/src/topic/EventTopic.js", "../../../libs/scene/src/topic/PriorityEventTopic.js", "../../../libs/scene/src/loop/AnimationFrameLoop.js", "../src/asteroid/Sound.js", "../src/asteroid/AudioBufferLoader.js", "../src/asteroid/SoundLoader.js", "../src/asteroid/Assets.js", "../src/asteroid/Inputs.js", "../../../libs/random/src/generators/RandomBase.js", "../../../libs/random/src/generators/MathRandom.js", "../../../libs/random/src/generators/Mulberry32.js", "../../../libs/random/src/Random.js", "../../../libs/random/src/generators/SmallFastCounter32.js", "../src/asteroid/util.js", "../src/asteroid/lib/M.js", "../src/asteroid/Particle.js", "../src/asteroid/Explode.js", "../src/asteroid/Asteroid.js", "../src/asteroid/PowerUp.js", "../src/asteroid/AsteroidGame.js", "../src/asteroid/Bullet.js", "../src/asteroid/Player.js", "../src/asteroid/Starfield.js", "../src/asteroid/lib/system/EffectManager.js", "../src/asteroid/lib/system/SystemContext.js", "../src/asteroid/lib/Assertion.js", "../src/asteroid/lib/system/SystemManager.js", "../src/asteroid/main.js", "../src/main.js"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n", "\nconst polyfill = require('path')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n", "'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n", "'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n", "'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n", "'use strict';\n\nmodule.exports = require('./lib/picomatch');\n", "import INNER_HTML from './DisplayPort.template.html';\nimport INNER_STYLE from './DisplayPort.module.css';\n\n/**\n * No scaling is applied. The canvas size maintains a\n * 1:1 pixel ratio to the defined display dimensions.\n */\nexport const MODE_NOSCALE = 'noscale';\n\n/**\n * No scaling is applied, but the element fills the\n * entire viewport. The canvas size maintains a 1:1\n * pixel ratio to the defined display dimensions and\n * is centered inside the scaled element.\n */\nexport const MODE_CENTER = 'center';\n\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio. This will adjust\n * canvas resolution to fit the viewport dimensions.\n * In other words, the canvas pixel size remains\n * constant, but the number of pixels in the canvas\n * will increase or decrease to compensate. This is\n * the default scaling mode.\n */\nexport const MODE_FIT = 'fit';\n\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio and pixel\n * resolution. This will upscale and downscale the\n * pixel size depending on the viewport dimentions\n * in order to preserve the canvas pixel count. In\n * other words, the number of pixels in the canvas\n * remain constant but appear larger or smaller to\n * compensate.\n */\nexport const MODE_SCALE = 'scale';\n\n/**\n * Resizes the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio nor pixel\n * count (adds and removes pixels to fill size). If you\n * care about aspect ratio but not pixel count, consider\n * using 'fit' mode instead.\n */\nexport const MODE_FILL = 'fill';\n\n/**\n * Scales the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio but\n * does preserve pixel count (by stretching the pixel\n * size). If you care about aspect ratio and pixel\n * count, consider using 'scale' mode instead.\n */\nexport const MODE_STRETCH = 'stretch';\n\n/**\n * The default display x dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_WIDTH = 300;\n/**\n * The default display y dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_HEIGHT = 150;\n\n/** The default display scaling mode. */\nconst DEFAULT_MODE = MODE_FIT;\n\n/** The default resize timeout */\nconst DELAYED_RESIZE_MILLIS = 200;\n\n/**\n * @typedef {CustomEvent} FrameEvent\n * @property {number} detail.now\n * The current time in milliseconds.\n * @property {number} detail.prevTime\n * The previous frame time in milliseconds.\n * @property {number} detail.deltaTime\n * The time taken between the current and previous\n * frame in milliseconds.\n * @property {HTMLCanvasElement} detail.canvas\n * The canvas element.\n */\n\n/**\n * @typedef {MODE_CENTER\n *          |MODE_FIT\n *          |MODE_NOSCALE\n *          |MODE_SCALE\n *          |MODE_FILL\n *          |MODE_STRETCH} DisplayScaling\n */\n\n/**\n * A canvas that can scale and stretch with respect to the aspect ratio to fill\n * the viewport size.\n *\n * To start drawing, you should get the canvas context like so:\n *\n * For Canvas2D:\n * ```\n * const display = document.querySelector('display-port');\n * const ctx = display.canvas.getContext('2d');\n * ctx.drawText(0, 0, 'Hello World!');\n * ```\n *\n * For WebGL:\n * ```\n * const display = document.querySelector('display-port');\n * const gl = display.canvas.getContext('webgl');\n * gl.clear(gl.COLOR_BUFFER_BIT);\n * ```\n *\n * Usually, you would want to set the `width` and `height` attributes to define\n * the canvas size and aspect ratio in pixels. You can also change the scaling\n * behavior by setting the `mode` attribute.\n *\n * And for convenience, this element also dispatches a `frame` event every animation\n * frame (60 fps). This is basically the same as calling `requestAnimationFrame()`.\n *\n * NOTE: The viewport size is usually the parent container size. However, in the\n * rare case the element must be nested in a child container, you can define the\n * boolean attribute `full` to force the dimensions to be the actual window size.\n */\nexport class DisplayPort extends HTMLElement {\n\n  /**\n   * @param {object} [opts]\n   * @param {HTMLElement} [opts.root]\n   * @param {DisplayScaling} [opts.mode]\n   * @param {number} [opts.width]\n   * @param {number} [opts.height]\n   * @param {boolean} [opts.debug]\n   */\n  static create(opts = {}) {\n    const {\n      root = document.body,\n      mode = DEFAULT_MODE,\n      width = DEFAULT_WIDTH,\n      height = DEFAULT_HEIGHT,\n      debug = false\n    } = opts || {};\n    let result = new DisplayPort();\n    result.mode = mode;\n    result.width = width;\n    result.height = height;\n    result.debug = debug;\n    root.appendChild(result);\n    return result;\n  }\n\n  /** @private */\n  static get [Symbol.for('templateNode')]() {\n    let t = document.createElement('template');\n    t.innerHTML = INNER_HTML;\n    Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n    return t;\n  }\n\n  /** @private */\n  static get [Symbol.for('styleNode')]() {\n    let t = document.createElement('style');\n    t.innerHTML = INNER_STYLE;\n    Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n    return t;\n  }\n\n  static define(customElements = window.customElements) {\n    customElements.define('display-port', this);\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  static get observedAttributes() {\n    return [\n      'debug',\n      'disabled',\n      // 'mode',\n      'width',\n      'height',\n      'onframe',\n      // Built-in attributes\n      'id',\n      'class',\n    ];\n  }\n\n  /**\n   * The scaling mode.\n   * - `noscale`: Do not perform scaling.\n   * - `center`: Do not perform scaling but stretch the display to fill the entire\n   * viewport. The unscaled canvas is centered.\n   * - `fit`: Resize resolution to fill the entire viewport and maintains the aspect\n   * ratio. The pixel resolution is changed. This is the default behavior.\n   * - `fill`: Resize resolution to fill the entire viewport but does not maintain\n   * aspect ratio.\n   * - `stretch`: Perform scaling to fill the entire viewport but does not maintain\n   * aspect ratio.\n   * - `scale`: Perform scaling to fill the entire viewport and maintains the\n   * aspect ratio and resolution. The pixel resolution remains constant.\n   * @returns {DisplayScaling} The current scaling mode.\n   */\n  get mode() {\n    return /** @type {DisplayScaling} */ (this.getAttribute('mode'));\n  }\n\n  set mode(value) {\n    this.setAttribute('mode', value);\n  }\n\n  /**\n   * Set to true for debug information.\n   * @returns {boolean}\n   */\n  get debug() {\n    return this._debug;\n  }\n\n  set debug(value) {\n    this.toggleAttribute('debug', value);\n  }\n\n  /**\n   * If disabled, animation frames will not fire.\n   * @returns {boolean}\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  /**\n   * The canvas width in pixels. This determines the aspect ratio and canvas buffer size.\n   * @returns {number}\n   */\n  get width() {\n    return this._width;\n  }\n\n  set width(value) {\n    this.setAttribute('width', String(value));\n  }\n\n  /**\n   * The canvas height in pixels. This determines the aspect ratio and canvas buffer size.\n   */\n  get height() {\n    return this._height;\n  }\n\n  set height(value) {\n    this.setAttribute('height', String(value));\n  }\n\n  /** Fired every animation frame. */\n  get onframe() {\n    return this._onframe;\n  }\n\n  set onframe(value) {\n    if (this._onframe) this.removeEventListener('frame', this._onframe);\n    this._onframe = value;\n    if (this._onframe) this.addEventListener('frame', value);\n  }\n\n  constructor() {\n    super();\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('templateNode')].content.cloneNode(true)\n    );\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('styleNode')].cloneNode(true)\n    );\n\n    /** @private */\n    this._canvasElement = shadowRoot.querySelector('canvas');\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this._contentElement = shadowRoot.querySelector('.content');\n    /**\n     * @private\n     * @type {HTMLSlotElement}\n     */\n    this._innerElement = shadowRoot.querySelector('#inner');\n\n    /** @private */\n    this._titleElement = shadowRoot.querySelector('#title');\n    /** @private */\n    this._fpsElement = shadowRoot.querySelector('#fps');\n    /** @private */\n    this._dimensionElement = shadowRoot.querySelector('#dimension');\n\n    /** @private */\n    this._debug = false;\n    /** @private */\n    this._disabled = false;\n    /** @private */\n    this._width = DEFAULT_WIDTH;\n    /** @private */\n    this._height = DEFAULT_HEIGHT;\n    /** @private */\n    this._onframe = undefined;\n\n    /** @private */\n    this._animationRequestHandle = 0;\n    /** @private */\n    this._prevAnimationFrameTime = 0;\n\n    /** @private */\n    this._resizeTimeoutHandle = 0;\n    /** @private */\n    this._resizeCanvasWidth = 0;\n    /** @private */\n    this._resizeCanvasHeight = 0;\n\n    /** @private */\n    this._frameEvent = new CustomEvent('frame', {\n      composed: true,\n      bubbles: false,\n      detail: {\n        now: 0,\n        prevTime: 0,\n        deltaTime: 0,\n        canvas: this._canvasElement,\n      },\n    });\n    /** @private */\n    this._resizeEvent = new CustomEvent('resize', {\n      composed: true,\n      bubbles: false,\n      detail: {\n        width: 0,\n        height: 0,\n      },\n    });\n\n    /** @private */\n    this.update = this.update.bind(this);\n    /** @private */\n    this.onDelayCanvasResize = this.onDelayCanvasResize.bind(this);\n  }\n\n  /** Get the canvas element. */\n  get canvas() {\n    return this._canvasElement;\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  connectedCallback() {\n    upgradeProperty(this, 'mode');\n    upgradeProperty(this, 'debug');\n    upgradeProperty(this, 'disabled');\n    upgradeProperty(this, 'width');\n    upgradeProperty(this, 'height');\n    upgradeProperty(this, 'onframe');\n\n    if (!this.hasAttribute('mode')) {\n      this.setAttribute('mode', DEFAULT_MODE);\n    }\n\n    // Allows this element to be focusable\n    if (!this.hasAttribute('tabindex')) {\n      this.setAttribute('tabindex', '0');\n    }\n\n    this.updateCanvasSize(true);\n    this.resume();\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  disconnectedCallback() {\n    this.pause();\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  attributeChangedCallback(attribute, prev, value) {\n    switch (attribute) {\n      case 'debug':\n        {\n          this._debug = value !== null;\n        }\n        break;\n      case 'disabled':\n        {\n          this._disabled = value !== null;\n        }\n        break;\n      case 'width':\n        {\n          this._width = Number(value);\n        }\n        break;\n      case 'height':\n        {\n          this._height = Number(value);\n        }\n        break;\n      case 'onframe':\n        {\n          this.onframe = new Function(\n            'event',\n            'with(document){with(this){' + value + '}}'\n          ).bind(this);\n        }\n        break;\n    }\n\n    switch (attribute) {\n      case 'disabled':\n        if (value) {\n          this.update(0);\n          this.pause();\n        } else {\n          this.resume();\n        }\n        break;\n      // NOTE: For debugging purposes...\n      case 'id':\n      case 'class':\n        this._titleElement.innerHTML = `display-port${\n          this.className ? '.' + this.className : ''\n        }${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n        break;\n      case 'debug':\n        this._titleElement.classList.toggle('hidden', value);\n        this._fpsElement.classList.toggle('hidden', value);\n        this._dimensionElement.classList.toggle('hidden', value);\n        break;\n    }\n  }\n\n  /**\n   * @param {'2d'|'webgl'|'webgl2'} [contextId]\n   * @param {CanvasRenderingContext2DSettings} [options]\n   */\n  getContext(contextId = '2d', options = undefined) {\n    return this._canvasElement.getContext(contextId, options);\n  }\n\n  /** Pause animation of the display frames. */\n  pause() {\n    window.cancelAnimationFrame(this._animationRequestHandle);\n  }\n\n  /** Resume animation of the display frames. */\n  resume() {\n    this._animationRequestHandle = window.requestAnimationFrame(this.update);\n  }\n\n  /** @private */\n  update(now) {\n    this._animationRequestHandle = window.requestAnimationFrame(this.update);\n    this.updateCanvasSize(false);\n    const deltaTime = now - this._prevAnimationFrameTime;\n    this._prevAnimationFrameTime = now;\n\n    // NOTE: For debugging purposes...\n    if (this._debug) {\n      // Update FPS...\n      const frames =\n        deltaTime <= 0\n          ? '--'\n          : String(Math.round(1000 / deltaTime)).padStart(2, '0');\n      if (this._fpsElement.textContent !== frames) {\n        this._fpsElement.textContent = frames;\n      }\n\n      // Update dimensions...\n      const mode = this.mode;\n      if (mode === MODE_NOSCALE) {\n        let result = `${this._width}x${this._height}`;\n        if (this._dimensionElement.textContent !== result) {\n          this._dimensionElement.textContent = result;\n        }\n      } else {\n        let result = `${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;\n        if (this._dimensionElement.textContent !== result) {\n          this._dimensionElement.textContent = result;\n        }\n      }\n    }\n\n    let event = this._frameEvent;\n    let detail = event.detail;\n    detail.now = now;\n    detail.prevTime = this._prevAnimationFrameTime;\n    detail.deltaTime = deltaTime;\n    this.dispatchEvent(this._frameEvent);\n  }\n\n  /** @private */\n  onDelayCanvasResize() {\n    this._resizeTimeoutHandle = null;\n    this.updateCanvasSize(true);\n  }\n\n  delayCanvasResize(canvasWidth, canvasHeight) {\n    if (\n      canvasWidth !== this._resizeCanvasWidth ||\n      canvasHeight !== this._resizeCanvasHeight\n    ) {\n      // Only call onDelayCanvasResize, if new canvas size actually changed since last time.\n      this._resizeCanvasWidth = canvasWidth;\n      this._resizeCanvasHeight = canvasHeight;\n      if (this._resizeTimeoutHandle) {\n        window.clearTimeout(this._resizeTimeoutHandle);\n      }\n      this._resizeTimeoutHandle = window.setTimeout(\n        this.onDelayCanvasResize,\n        DELAYED_RESIZE_MILLIS\n      );\n    }\n  }\n\n  /** @private */\n  updateCanvasSize(force = true) {\n    const clientRect = this.shadowRoot.host.getBoundingClientRect();\n    const clientWidth = clientRect.width;\n    const clientHeight = clientRect.height;\n\n    let canvas = this._canvasElement;\n    let canvasWidth = this._width;\n    let canvasHeight = this._height;\n\n    const mode = this.mode;\n    if (mode === MODE_STRETCH || mode === MODE_FILL) {\n      canvasWidth = clientWidth;\n      canvasHeight = clientHeight;\n    } else if (mode !== MODE_NOSCALE) {\n      if (\n        clientWidth < canvasWidth ||\n        clientHeight < canvasHeight ||\n        mode === MODE_FIT ||\n        mode == MODE_SCALE\n      ) {\n        let ratioX = clientWidth / canvasWidth;\n        let ratioY = clientHeight / canvasHeight;\n\n        if (ratioX < ratioY) {\n          canvasWidth = clientWidth;\n          canvasHeight = canvasHeight * ratioX;\n        } else {\n          canvasWidth = canvasWidth * ratioY;\n          canvasHeight = clientHeight;\n        }\n      }\n    }\n\n    canvasWidth = Math.floor(canvasWidth);\n    canvasHeight = Math.floor(canvasHeight);\n\n    if (typeof force === 'undefined') {\n      force =\n        canvas.clientWidth !== canvasWidth ||\n        canvas.clientHeight !== canvasHeight;\n    }\n\n    if (!force) {\n      this.delayCanvasResize(canvasWidth, canvasHeight);\n      return;\n    }\n\n    let fontSize =\n      Math.min(canvasWidth / this._width, canvasHeight / this._height) * 0.5;\n    // NOTE: Update the inner container for the default slotted children.\n    // To anchor children outside the canvas, use the slot named 'frame'.\n    this._innerElement.style.fontSize = `font-size: ${fontSize}em`;\n    if (force) {\n      if (mode === MODE_SCALE) {\n        canvas.width = this._width;\n        canvas.height = this._height;\n      } else if (mode !== MODE_STRETCH) {\n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n      }\n      let contentStyle = this._contentElement.style;\n      contentStyle.width = `${canvasWidth}px`;\n      contentStyle.height = `${canvasHeight}px`;\n\n      if (mode === MODE_FIT || mode === MODE_FILL) {\n        this._width = canvasWidth;\n        this._height = canvasHeight;\n      }\n\n      let event = this._resizeEvent;\n      let detail = event.detail;\n      detail.width = canvasWidth;\n      detail.height = canvasHeight;\n      this.dispatchEvent(this._resizeEvent);\n    }\n  }\n}\nDisplayPort.define();\n\nfunction upgradeProperty(element, propertyName) {\n  if (Object.prototype.hasOwnProperty.call(element, propertyName)) {\n    let value = element[propertyName];\n    delete element[propertyName];\n    element[propertyName] = value;\n  }\n}\n", "/**\n * @typedef {number} BindingIndex\n *\n * @typedef BindingOptions\n * @property {boolean} inverted\n *\n * @typedef InputReadOnly\n * @property {number} value\n * @property {boolean} polling\n */\n\nexport class InputState {\n  get polling() {\n    let dt = performance.now() - this._lastPollingTime;\n    return dt < 1_000;\n  }\n\n  /** @abstract */\n  get value() {\n    return 0;\n  }\n  \n  get size() {\n    return this._size;\n  }\n\n  /**\n   * @abstract\n   * @param {number} size The initial binding state size.\n   */\n  constructor(size) {\n    /** @private */\n    this._size = size;\n    /** @private */\n    this._lastPollingTime = Number.MIN_SAFE_INTEGER;\n  }\n\n  /**\n   * Called to internally resize to accomodate more/less\n   * binding states.\n   *\n   * @protected\n   * @param {number} newSize\n   */\n  resize(newSize) {\n    this._size = newSize;\n  }\n\n  /**\n   * @abstract\n   * @param {BindingIndex} code\n   * @returns {number}\n   */\n  // eslint-disable-next-line no-unused-vars\n  getState(code) {\n    throw new Error('Missing implementation.');\n  }\n\n  /**\n   * @abstract\n   * @param {BindingIndex} code\n   * @param {number} value\n   * @param {number} delta\n   */\n  // eslint-disable-next-line no-unused-vars\n  onUpdate(code, value, delta) {\n    throw new Error('Missing implementation.');\n  }\n\n  /**\n   * @abstract\n   * @param {BindingIndex} code\n   * @param {number} value\n   */\n  // eslint-disable-next-line no-unused-vars\n  onStatus(code, value) {\n    throw new Error('Missing implementation.');\n  }\n\n  /**\n   * Called to poll all bound states.\n   *\n   * @param {number} now\n   */\n  onPoll(now) {\n    this._lastPollingTime = now;\n  }\n\n  /**\n   * Called to bind a state to the given binding code.\n   *\n   * @param {BindingIndex} code\n   * @param {BindingOptions} [opts]\n   */\n  // eslint-disable-next-line no-unused-vars\n  onBind(code, opts = undefined) {\n    if (code >= this._size) {\n      this.resize(code + 1);\n    }\n  }\n\n  /**\n   * Called to unbind all states.\n   */\n  onUnbind() {\n    this.resize(0);\n  }\n}\n", "import { InputState } from './InputState.js';\n\n/**\n * @typedef {import('./InputState.js').BindingIndex} BindingIndex The binding index\n * @typedef {import('./InputState.js').BindingOptions} BindingOptions The binding options\n *\n * @typedef AxisBindingState\n * @property {number} value\n * @property {number} delta\n * @property {boolean} inverted\n *\n * @typedef AxisReadOnly\n * @property {number} value\n * @property {number} delta\n * @property {boolean} polling\n */\n\nexport class AxisState extends InputState {\n  /** @returns {AxisBindingState} */\n  static createAxisBindingState() {\n    return {\n      value: 0,\n      delta: 0,\n      inverted: false,\n    };\n  }\n\n  /** @returns {number} */\n  get delta() {\n    return this._delta;\n  }\n\n  /**\n   * @override\n   * @returns {number}\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @param {number} [size]\n   */\n  constructor(size = 0) {\n    super(size);\n    let state = new Array();\n    let c = /** @type {typeof AxisState} */ (this.constructor);\n    for (let i = 0; i < size; ++i) {\n      state.push(c.createAxisBindingState());\n    }\n    /**\n     * @private\n     * @type {Array<AxisBindingState>}\n     */\n    this._state = state;\n    /** @private */\n    this._value = 0;\n    /** @private */\n    this._delta = 0;\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  resize(newSize) {\n    let oldState = this._state;\n    let oldSize = oldState.length;\n    let newState;\n    if (newSize <= oldSize) {\n      newState = oldState.slice(0, newSize);\n    } else {\n      newState = oldState;\n      // Fill with new states\n      let c = /** @type {typeof AxisState} */ (this.constructor);\n      for (let i = oldSize; i < newSize; ++i) {\n        newState.push(c.createAxisBindingState());\n      }\n    }\n    this._state = newState;\n    super.resize(newSize);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @returns {number}\n   */\n  getState(code) {\n    return this._state[code].value;\n  }\n\n  /**\n   * @override\n   * @param {number} now\n   */\n  onPoll(now) {\n    let state = this._state;\n    let accumulatedValue = 0;\n    let accumulatedDelta = 0;\n    const len = state.length;\n    for (let i = 0; i < len; ++i) {\n      let value = state[i];\n      accumulatedValue += value.value * (value.inverted ? -1 : 1);\n      accumulatedDelta += value.delta;\n      state[i].delta = 0;\n    }\n    this._value = accumulatedValue;\n    this._delta = accumulatedDelta;\n    super.onPoll(now);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {number} value\n   * @param {number} delta\n   */\n  onUpdate(code, value, delta) {\n    if (typeof value === 'undefined') {\n      this.onAxisChange(code, delta);\n    } else {\n      this.onAxisMove(code, value, delta);\n    }\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {number} value\n   */\n  onStatus(code, value) {\n    this.onAxisStatus(code, value);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {BindingOptions} [opts]\n   */\n  onBind(code, opts = undefined) {\n    super.onBind(code, opts);\n    const { inverted = false } = opts || {};\n    let state = this._state;\n    state[code].inverted = inverted;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   * @param {number} x\n   * @param {number} dx\n   */\n  onAxisMove(code, x, dx) {\n    let state = this._state[code];\n    state.value = x;\n    state.delta += dx;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   * @param {number} dx\n   */\n  onAxisChange(code, dx) {\n    let state = this._state[code];\n    state.value += dx;\n    state.delta += dx;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   * @param {number} x\n   */\n  onAxisStatus(code, x) {\n    let state = this._state[code];\n    let prev = state.value;\n    state.value = x;\n    state.delta = x - prev;\n  }\n}\n", "import { InputState } from './InputState.js';\n\n/**\n * @typedef {import('./InputState.js').BindingIndex} BindingIndex\n * @typedef {import('./InputState.js').BindingOptions} BindingOptions\n *\n * @typedef ButtonReadOnly\n * @property {number} value\n * @property {boolean} pressed\n * @property {boolean} repeated\n * @property {boolean} released\n * @property {boolean} down\n * @property {boolean} polling\n */\n\nexport const CLEAR_POLL_BITS = 0b1111_0001;\nexport const CLEAR_DOWN_STATE_BITS = 0b1111_1110;\nexport const CLEAR_INVERTED_MODIFIER_BITS = 0b1110_1111;\n\nexport const DOWN_STATE_BIT = 0b0000_0001;\nexport const PRESSED_STATE_BIT = 0b0000_0010;\nexport const REPEATED_STATE_BIT = 0b0000_0100;\nexport const RELEASED_STATE_BIT = 0b0000_1000;\nexport const INVERTED_MODIFIER_BIT = 0b0001_0000;\n\nexport class ButtonState extends InputState {\n  /** @returns {boolean} */\n  get pressed() {\n    return this._pressed;\n  }\n\n  /** @returns {boolean} */\n  get repeated() {\n    return this._repeated;\n  }\n\n  /** @returns {boolean} */\n  get released() {\n    return this._released;\n  }\n\n  /** @returns {boolean} */\n  get down() {\n    return this._down;\n  }\n\n  /**\n   * @override\n   * @returns {number}\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @param {number} [size]\n   */\n  constructor(size = 0) {\n    super(size);\n    /** @private */\n    this._state = new Uint8Array(size);\n    /** @private */\n    this._value = 0;\n    /** @private */\n    this._down = false;\n    /** @private */\n    this._pressed = false;\n    /** @private */\n    this._repeated = false;\n    /** @private */\n    this._released = false;\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  resize(newSize) {\n    let oldState = this._state;\n    let oldSize = oldState.length;\n    let newState;\n    if (newSize <= oldSize) {\n      newState = oldState.slice(0, newSize);\n    } else {\n      newState = new Uint8Array(newSize);\n      newState.set(oldState);\n    }\n    this._state = newState;\n    super.resize(newSize);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @returns {number}\n   */\n  getState(code) {\n    let state = this._state[code];\n    let modifier = state & INVERTED_MODIFIER_BIT ? -1 : 1;\n    let value = state & DOWN_STATE_BIT ? 1 : 0;\n    return value * modifier;\n  }\n\n  /**\n   * @override\n   * @param {number} now\n   */\n  onPoll(now) {\n    let state = this._state;\n    let result = 0;\n    let down = 0;\n    let pressed = 0;\n    let repeated = 0;\n    let released = 0;\n    const len = state.length;\n    for (let i = 0; i < len; ++i) {\n      let value = state[i];\n      let v = value & DOWN_STATE_BIT;\n      let m = value & INVERTED_MODIFIER_BIT;\n      down |= v;\n      pressed |= value & PRESSED_STATE_BIT;\n      repeated |= value & REPEATED_STATE_BIT;\n      released |= value & RELEASED_STATE_BIT;\n      result += (v ? 1 : 0) * (m ? -1 : 1);\n      state[i] &= CLEAR_POLL_BITS;\n    }\n    this._value = result;\n    this._down = down !== 0;\n    this._pressed = pressed !== 0;\n    this._repeated = repeated !== 0;\n    this._released = released !== 0;\n    super.onPoll(now);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {number} value\n   * @param {number} delta\n   */\n  onUpdate(code, value, delta) {\n    if (delta > 0) {\n      this.onButtonPressed(code);\n    } else {\n      this.onButtonReleased(code);\n    }\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {number} value\n   */\n  onStatus(code, value) {\n    this.onButtonStatus(code, value !== 0);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {BindingOptions} [opts]\n   */\n  onBind(code, opts = { inverted: false }) {\n    super.onBind(code, opts);\n    const { inverted = false } = opts;\n    let state = this._state;\n    if (inverted) {\n      state[code] |= INVERTED_MODIFIER_BIT;\n    } else {\n      state[code] &= CLEAR_INVERTED_MODIFIER_BITS;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   */\n  onButtonPressed(code) {\n    let state = this._state;\n    let bits = state[code];\n    if (!(bits & DOWN_STATE_BIT)) {\n      bits |= PRESSED_STATE_BIT;\n      bits |= DOWN_STATE_BIT;\n    }\n    bits |= REPEATED_STATE_BIT;\n    state[code] = bits;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   */\n  onButtonReleased(code) {\n    let state = this._state;\n    let bits = state[code];\n    if (bits & DOWN_STATE_BIT) {\n      bits |= RELEASED_STATE_BIT;\n      bits &= CLEAR_DOWN_STATE_BITS;\n    }\n    state[code] = bits;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   * @param {boolean} isDown\n   */\n  onButtonStatus(code, isDown) {\n    let state = this._state;\n    let bits = state[code];\n    let wasDown = Boolean(bits & DOWN_STATE_BIT);\n    if (isDown) {\n      bits |= DOWN_STATE_BIT;\n    } else {\n      bits &= CLEAR_DOWN_STATE_BITS;\n    }\n    if (wasDown && !isDown) {\n      bits |= RELEASED_STATE_BIT;\n    }\n    if (!wasDown && isDown) {\n      bits |= PRESSED_STATE_BIT;\n      bits |= REPEATED_STATE_BIT;\n    }\n    state[code] = bits;\n  }\n}\n", "export class KeyCode {\n  /**\n   * @param {string} string\n   * @returns {KeyCode}\n   */\n  static parse(string) {\n    string = string.trim();\n    let i = string.indexOf('.');\n    if (i < 0) {\n      throw new Error('Missing device separator for key code.');\n    }\n    let device = string.substring(0, i);\n    if (device.length < 0) {\n      throw new Error('Missing device for key code.');\n    }\n    let key = string.substring(i + 1);\n    if (key.length < 0) {\n      throw new Error('Missing code for key code.');\n    }\n    return new KeyCode(device, key);\n  }\n\n  /**\n   * @param {string} device\n   * @param {string} code\n   */\n  constructor(device, code) {\n    this.device = device;\n    this.code = code;\n  }\n\n  /** @override */\n  toString() {\n    return `${this.device}.${this.code}`;\n  }\n}\n", "import { KeyCode } from './KeyCode.js';\n\nexport function from(device, code) {\n  return new KeyCode(device, code);\n}\n\nexport function isKeyCode(object) {\n  return 'device' in object && 'code' in object;\n}\n\nexport const KEYBOARD = 'Keyboard';\nexport const MOUSE = 'Mouse';\n\nexport const KEY_A = new KeyCode(KEYBOARD, 'KeyA');\nexport const KEY_B = new KeyCode(KEYBOARD, 'KeyB');\nexport const KEY_C = new KeyCode(KEYBOARD, 'KeyC');\nexport const KEY_D = new KeyCode(KEYBOARD, 'KeyD');\nexport const KEY_E = new KeyCode(KEYBOARD, 'KeyE');\nexport const KEY_F = new KeyCode(KEYBOARD, 'KeyF');\nexport const KEY_G = new KeyCode(KEYBOARD, 'KeyG');\nexport const KEY_H = new KeyCode(KEYBOARD, 'KeyH');\nexport const KEY_I = new KeyCode(KEYBOARD, 'KeyI');\nexport const KEY_J = new KeyCode(KEYBOARD, 'KeyJ');\nexport const KEY_K = new KeyCode(KEYBOARD, 'KeyK');\nexport const KEY_L = new KeyCode(KEYBOARD, 'KeyL');\nexport const KEY_M = new KeyCode(KEYBOARD, 'KeyM');\nexport const KEY_N = new KeyCode(KEYBOARD, 'KeyN');\nexport const KEY_O = new KeyCode(KEYBOARD, 'KeyO');\nexport const KEY_P = new KeyCode(KEYBOARD, 'KeyP');\nexport const KEY_Q = new KeyCode(KEYBOARD, 'KeyQ');\nexport const KEY_R = new KeyCode(KEYBOARD, 'KeyR');\nexport const KEY_S = new KeyCode(KEYBOARD, 'KeyS');\nexport const KEY_T = new KeyCode(KEYBOARD, 'KeyT');\nexport const KEY_U = new KeyCode(KEYBOARD, 'KeyU');\nexport const KEY_V = new KeyCode(KEYBOARD, 'KeyV');\nexport const KEY_W = new KeyCode(KEYBOARD, 'KeyW');\nexport const KEY_X = new KeyCode(KEYBOARD, 'KeyX');\nexport const KEY_Y = new KeyCode(KEYBOARD, 'KeyY');\nexport const KEY_Z = new KeyCode(KEYBOARD, 'KeyZ');\n\nexport const DIGIT_0 = new KeyCode(KEYBOARD, 'Digit0');\nexport const DIGIT_1 = new KeyCode(KEYBOARD, 'Digit1');\nexport const DIGIT_2 = new KeyCode(KEYBOARD, 'Digit2');\nexport const DIGIT_3 = new KeyCode(KEYBOARD, 'Digit3');\nexport const DIGIT_4 = new KeyCode(KEYBOARD, 'Digit4');\nexport const DIGIT_5 = new KeyCode(KEYBOARD, 'Digit5');\nexport const DIGIT_6 = new KeyCode(KEYBOARD, 'Digit6');\nexport const DIGIT_7 = new KeyCode(KEYBOARD, 'Digit7');\nexport const DIGIT_8 = new KeyCode(KEYBOARD, 'Digit8');\nexport const DIGIT_9 = new KeyCode(KEYBOARD, 'Digit9');\n\nexport const MINUS = new KeyCode(KEYBOARD, 'Minus');\nexport const EQUAL = new KeyCode(KEYBOARD, 'Equal');\nexport const BRACKET_LEFT = new KeyCode(KEYBOARD, 'BracketLeft');\nexport const BRACKET_RIGHT = new KeyCode(KEYBOARD, 'BracketRight');\nexport const SEMICOLON = new KeyCode(KEYBOARD, 'Semicolon');\nexport const QUOTE = new KeyCode(KEYBOARD, 'Quote');\nexport const BACKQUOTE = new KeyCode(KEYBOARD, 'Backquote');\nexport const BACKSLASH = new KeyCode(KEYBOARD, 'Backslash');\nexport const COMMA = new KeyCode(KEYBOARD, 'Comma');\nexport const PERIOD = new KeyCode(KEYBOARD, 'Period');\nexport const SLASH = new KeyCode(KEYBOARD, 'Slash');\n\nexport const ESCAPE = new KeyCode(KEYBOARD, 'Escape');\nexport const SPACE = new KeyCode(KEYBOARD, 'Space');\nexport const CAPS_LOCK = new KeyCode(KEYBOARD, 'CapsLock');\nexport const BACKSPACE = new KeyCode(KEYBOARD, 'Backspace');\nexport const DELETE = new KeyCode(KEYBOARD, 'Delete');\nexport const TAB = new KeyCode(KEYBOARD, 'Tab');\nexport const ENTER = new KeyCode(KEYBOARD, 'Enter');\n\nexport const ARROW_UP = new KeyCode(KEYBOARD, 'ArrowUp');\nexport const ARROW_DOWN = new KeyCode(KEYBOARD, 'ArrowDown');\nexport const ARROW_LEFT = new KeyCode(KEYBOARD, 'ArrowLeft');\nexport const ARROW_RIGHT = new KeyCode(KEYBOARD, 'ArrowRight');\n\nexport const MOUSE_BUTTON_0 = new KeyCode(MOUSE, 'Button0');\nexport const MOUSE_BUTTON_1 = new KeyCode(MOUSE, 'Button1');\nexport const MOUSE_BUTTON_2 = new KeyCode(MOUSE, 'Button2');\nexport const MOUSE_BUTTON_3 = new KeyCode(MOUSE, 'Button3');\nexport const MOUSE_BUTTON_4 = new KeyCode(MOUSE, 'Button4');\n\nexport const MOUSE_POS_X = new KeyCode(MOUSE, 'PosX');\nexport const MOUSE_POS_Y = new KeyCode(MOUSE, 'PosY');\n\nexport const MOUSE_WHEEL_X = new KeyCode(MOUSE, 'WheelX');\nexport const MOUSE_WHEEL_Y = new KeyCode(MOUSE, 'WheelY');\nexport const MOUSE_WHEEL_Z = new KeyCode(MOUSE, 'WheelZ');\n", "export class InputBinding {\n  /** @returns {boolean} */\n  get polling() {\n    if (!this.ref) {\n      return false;\n    }\n    return this.ref.polling;\n  }\n\n  /** @returns {number} */\n  get value() {\n    if (!this.ref || this.disabled) {\n      return 0;\n    }\n    return this.ref.value;\n  }\n\n  /**\n   * @param {string} name\n   */\n  constructor(name) {\n    /** @protected */\n    this.name = name;\n\n    /** @protected */\n    this.ref = null;\n\n    /** @protected */\n    this.disabled = false;\n  }\n\n  /**\n   * @abstract\n   * @param {import('../InputContext.js').InputContext} inputContext\n   */\n  bindTo(inputContext) {\n    throw new Error('Unsupported operation.');\n  }\n\n  disable(force = true) {\n    this.disabled = force;\n    return this;\n  }\n\n  /**\n   * @param {number} code\n   * @returns {number}\n   */\n  getState(code) {\n    if (!this.ref || this.disabled) {\n      return 0;\n    }\n    return this.ref.getState(code);\n  }\n}\n", "import { KeyCode } from './KeyCode.js';\nimport * as KeyCodes from './KeyCodes.js';\n\nexport { KeyCodes };\n\n/**\n * @param {string|Array<string>} strings\n * @returns {Array<KeyCode>}\n */\nexport function stringsToKeyCodes(strings) {\n  if (!Array.isArray(strings)) {\n    strings = [strings];\n  }\n  let result = [];\n  for (let str of strings) {\n    let keyCode;\n    try {\n      keyCode = KeyCode.parse(str);\n    } catch (e) {\n      let keyName = camelToSnakeCase(str).toUpperCase();\n      if (!(keyName in KeyCodes)) {\n        throw new Error('Invalid key code string - ' + e);\n      }\n      keyCode = KeyCodes[keyName];\n    }\n    result.push(keyCode);\n  }\n  return result;\n}\n\n/**\n * @param {string} str\n * @returns {string}\n */\nfunction camelToSnakeCase(str) {\n  return str\n    .replace(/([a-z]|(?:[A-Z0-9]+))([A-Z0-9]|$)/g, function (_, a, b) {\n      return a + (b && '_' + b);\n    })\n    .toLowerCase();\n}\n", "import { from } from '../keycode/KeyCodes.js';\nimport { InputBinding } from './InputBinding.js';\nimport { stringsToKeyCodes } from '../keycode/KeyCodeHelper.js';\n\n/** @typedef {import('../keycode/KeyCode.js').KeyCode} KeyCode */\n\nexport class AxisBinding extends InputBinding {\n  /**\n   * @param {string} name\n   * @param {string} device\n   * @param {string} code\n   * @param {object} [opts]\n   * @returns {AxisBinding}\n   */\n  static fromBind(name, device, code, opts = undefined) {\n    return new AxisBinding(name, from(device, code), opts);\n  }\n\n  /**\n   * @param {string} name\n   * @param {...string} strings\n   * @returns {AxisBinding}\n   */\n  static fromString(name, ...strings) {\n    let keyCodes = stringsToKeyCodes(strings);\n    return new AxisBinding(name, keyCodes);\n  }\n\n  /** @returns {number} */\n  get delta() {\n    if (!this.ref || this.disabled) {\n      return 0;\n    }\n    return this.ref.delta;\n  }\n\n  /**\n   * @param {string} name\n   * @param {KeyCode|Array<KeyCode>} keyCodes\n   * @param {object} [opts]\n   */\n  constructor(name, keyCodes, opts = undefined) {\n    super(name);\n\n    /** @protected */\n    this.keyCodes = Array.isArray(keyCodes) ? keyCodes : [keyCodes];\n    /** @protected */\n    this.opts = opts;\n  }\n\n  /**\n   * @override\n   * @param {import('../InputContext.js').InputContext} inputContext\n   */\n  bindTo(inputContext) {\n    let name = this.name;\n    let opts = this.opts;\n    for (let keyCode of this.keyCodes) {\n      inputContext.bindAxis(name, keyCode.device, keyCode.code, opts);\n    }\n    this.ref = inputContext.getAxis(name);\n    return this;\n  }\n}\n", "import { from } from '../keycode/KeyCodes.js';\nimport { InputBinding } from './InputBinding.js';\nimport { stringsToKeyCodes } from '../keycode/KeyCodeHelper.js';\n\n/**\n * @typedef {import('../keycode/KeyCode.js').KeyCode} KeyCode\n * @typedef {import('../InputContext.js').InputContext} InputContext\n */\n\nexport class ButtonBinding extends InputBinding {\n  /**\n   * @param {string} name\n   * @param {string} device\n   * @param {string} code\n   * @param {object} [opts]\n   * @returns {ButtonBinding}\n   */\n  static fromBind(name, device, code, opts = undefined) {\n    return new ButtonBinding(name, from(device, code), opts);\n  }\n\n  /**\n   * @param {string} name\n   * @param {...string} strings\n   * @returns {ButtonBinding}\n   */\n  static fromString(name, ...strings) {\n    let keyCodes = stringsToKeyCodes(strings);\n    return new ButtonBinding(name, keyCodes);\n  }\n\n  /** @returns {boolean} */\n  get pressed() {\n    if (!this.ref || this.disabled) {\n      return false;\n    }\n    return this.ref.pressed;\n  }\n\n  /** @returns {boolean} */\n  get repeated() {\n    if (!this.ref || this.disabled) {\n      return false;\n    }\n    return this.ref.repeated;\n  }\n\n  /** @returns {boolean} */\n  get released() {\n    if (!this.ref || this.disabled) {\n      return false;\n    }\n    return this.ref.released;\n  }\n\n  /** @returns {boolean} */\n  get down() {\n    if (!this.ref || this.disabled) {\n      return false;\n    }\n    return this.ref.down;\n  }\n\n  /**\n   * @param {string} name\n   * @param {KeyCode|Array<KeyCode>} keyCodes\n   * @param {object} [opts]\n   */\n  constructor(name, keyCodes, opts = undefined) {\n    super(name);\n\n    /** @protected */\n    this.keyCodes = Array.isArray(keyCodes) ? keyCodes : [keyCodes];\n    /** @protected */\n    this.opts = opts;\n  }\n\n  /**\n   * @override\n   * @param {InputContext} inputContext\n   */\n  bindTo(inputContext) {\n    let name = this.name;\n    let opts = this.opts;\n    for (let keyCode of this.keyCodes) {\n      inputContext.bindButton(name, keyCode.device, keyCode.code, opts);\n    }\n    this.ref = inputContext.getButton(name);\n    return this;\n  }\n}\n", "import { from } from '../keycode/KeyCodes.js';\nimport { AxisBinding } from './AxisBinding.js';\n\n/** @typedef {import('../keycode/KeyCode.js').KeyCode} KeyCode */\n\nexport class AxisButtonBinding extends AxisBinding {\n  /**\n   * @param {string} name\n   * @param {string} device\n   * @param {string} negativeCode\n   * @param {string} positiveCode\n   * @returns {AxisButtonBinding}\n   */\n  static fromBind(name, device, negativeCode, positiveCode) {\n    return new AxisButtonBinding(\n      name,\n      from(device, negativeCode),\n      from(device, positiveCode)\n    );\n  }\n\n  /**\n   * @param {string} name\n   * @param {KeyCode} negativeKeyCode\n   * @param {KeyCode} positiveKeyCode\n   */\n  constructor(name, negativeKeyCode, positiveKeyCode) {\n    super(name, []);\n\n    if (negativeKeyCode.device !== positiveKeyCode.device) {\n      throw new Error('Cannot create axis-button codes for different devices.');\n    }\n\n    /** @protected */\n    this.negativeKeyCode = negativeKeyCode;\n    /** @protected */\n    this.positiveKeyCode = positiveKeyCode;\n  }\n\n  /**\n   * @param {import('../InputContext.js').InputContext} inputContext\n   */\n  bindTo(inputContext) {\n    let name = this.name;\n    let negativeKeyCode = this.negativeKeyCode;\n    let positiveKeyCode = this.positiveKeyCode;\n    inputContext.bindAxisButtons(\n      name,\n      negativeKeyCode.device,\n      negativeKeyCode.code,\n      positiveKeyCode.code\n    );\n    this.ref = inputContext.getAxis(name);\n    return this;\n  }\n}\n", "/**\n * @typedef InputDeviceEvent\n * @property {EventTarget} target\n * @property {string} device\n * @property {string} code\n * @property {string} event\n * @property {number} [value] The input value of the triggered event (usually this is 1).\n * @property {number} [movement] The change in value for the triggered event.\n * @property {boolean} [control] Whether any control keys are down (false if up).\n * @property {boolean} [shift] Whether any shift keys are down (false if up).\n * @property {boolean} [alt] Whether any alt keys are down (false if up).\n *\n * @callback InputDeviceEventListener\n * @param {InputDeviceEvent} e\n */\n\n/**\n * A class that represents a raw system device that\n * emits input events.\n */\nexport class InputDevice {\n  /** @abstract */\n  // eslint-disable-next-line no-unused-vars\n  static isAxis(keyCode) {\n    return false;\n  }\n\n  /** @abstract */\n  // eslint-disable-next-line no-unused-vars\n  static isButton(keyCode) {\n    return false;\n  }\n\n  /**\n   * @param {string} deviceName\n   * @param {EventTarget} eventTarget\n   */\n  constructor(deviceName, eventTarget) {\n    if (!eventTarget) {\n      throw new Error(`Missing event target for device ${deviceName}.`);\n    }\n\n    this.name = deviceName;\n    this.eventTarget = eventTarget;\n\n    /**\n     * @private\n     * @type {Record<string, Array<InputDeviceEventListener>>}\n     */\n    this.listeners = {\n      input: [],\n    };\n  }\n\n  /**\n   * @param {EventTarget} eventTarget\n   */\n  setEventTarget(eventTarget) {\n    if (!eventTarget) {\n      throw new Error(`Missing event target for device ${this.name}.`);\n    }\n    this.eventTarget = eventTarget;\n  }\n\n  destroy() {\n    let listeners = this.listeners;\n    for (let event in listeners) {\n      listeners[event].length = 0;\n    }\n  }\n\n  /**\n   * @param {string} event\n   * @param {InputDeviceEventListener} listener\n   */\n  addEventListener(event, listener) {\n    let listeners = this.listeners;\n    if (event in listeners) {\n      listeners[event].push(listener);\n    } else {\n      listeners[event] = [listener];\n    }\n  }\n\n  /**\n   * @param {string} event\n   * @param {InputDeviceEventListener} listener\n   */\n  removeEventListener(event, listener) {\n    let listeners = this.listeners;\n    if (event in listeners) {\n      let list = listeners[event];\n      let i = list.indexOf(listener);\n      if (i >= 0) {\n        list.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * @param {InputDeviceEvent} e\n   * @returns {boolean} Whether the input event should be consumed.\n   */\n  dispatchInputEvent(e) {\n    let flag = 0;\n    for (let listener of this.listeners.input) {\n      flag |= listener(e);\n    }\n    return Boolean(flag);\n  }\n}\n", "import { InputDevice } from './InputDevice.js';\n\n/** @typedef {import('./InputDevice.js').InputDeviceEvent} InputDeviceEvent */\n\n/**\n * A class that listens to the keyboard events from the event target and\n * transforms the events into a valid {@link InputEvent} for the added\n * listeners.\n *\n * - This device uses the `event.code` standard to reference each key.\n * - Use this to help you determine the key code: https://keycode.info/\n */\nexport class KeyboardDevice extends InputDevice {\n  /** @override */\n  // eslint-disable-next-line no-unused-vars\n  static isAxis(keyCode) {\n    return false;\n  }\n\n  /** @override */\n  // eslint-disable-next-line no-unused-vars\n  static isButton(keyCode) {\n    return true;\n  }\n\n  /**\n   * Constructs a listening keyboard with no listeners (yet).\n   *\n   * @param {string} deviceName\n   * @param {EventTarget} eventTarget\n   * @param {object} [opts] Any additional options.\n   * @param {boolean} [opts.ignoreRepeat] Whether to\n   * accept repeated key events.\n   */\n  constructor(deviceName, eventTarget, opts = {}) {\n    super(deviceName, eventTarget);\n\n    const { ignoreRepeat = true } = opts;\n    this.ignoreRepeat = ignoreRepeat;\n\n    /**\n     * @private\n     * @type {InputDeviceEvent}\n     */\n    this._eventObject = {\n      target: eventTarget,\n      device: deviceName,\n      code: '',\n      event: '',\n      // Key values\n      value: 0,\n      control: false,\n      shift: false,\n      alt: false,\n    };\n\n    /** @private */\n    this.onKeyDown = this.onKeyDown.bind(this);\n    /** @private */\n    this.onKeyUp = this.onKeyUp.bind(this);\n\n    eventTarget.addEventListener('keydown', this.onKeyDown);\n    eventTarget.addEventListener('keyup', this.onKeyUp);\n  }\n\n  /** @override */\n  setEventTarget(eventTarget) {\n    if (this.eventTarget) this.destroy();\n    super.setEventTarget(eventTarget);\n    eventTarget.addEventListener('keydown', this.onKeyDown);\n    eventTarget.addEventListener('keyup', this.onKeyUp);\n  }\n\n  /** @override */\n  destroy() {\n    let eventTarget = this.eventTarget;\n    eventTarget.removeEventListener('keydown', this.onKeyDown);\n    eventTarget.removeEventListener('keyup', this.onKeyUp);\n    super.destroy();\n  }\n\n  /**\n   * @private\n   * @param {KeyboardEvent} e\n   */\n  onKeyDown(e) {\n    if (e.repeat && this.ignoreRepeat) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n\n    let event = this._eventObject;\n    // We care more about location (code) than print char (key).\n    event.code = e.code;\n    event.event = 'pressed';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.dispatchInputEvent(event);\n    if (result) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {KeyboardEvent} e\n   */\n  onKeyUp(e) {\n    /** @type {InputDeviceEvent} */\n    let event = this._eventObject;\n    // We care more about location (code) than print char (key).\n    event.code = e.code;\n    event.event = 'released';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.dispatchInputEvent(event);\n    if (result) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n  }\n}\n", "import { InputDevice } from './InputDevice.js';\n\n/**\n * @typedef {import('./InputDevice.js').InputDeviceEvent} InputDeviceEvent\n */\n\nconst DEFAULT_LINE_PIXELS = 10;\nconst DEFAULT_PAGE_PIXELS = 100;\n\n/**\n * A class that listens to the mouse events from the event target and\n * transforms the events into a valid {@link InputDeviceEvent} for its\n * listeners.\n *\n * - PosX\n * - PosY\n * - WheelX\n * - WheelY\n * - WheelZ\n * - Button0 (left button)\n * - Button1 (middle button)\n * - Button2 (right button)\n * - Button3 (next button)\n * - Button4 (back button)\n */\nexport class MouseDevice extends InputDevice {\n  /** @override */\n  static isAxis(keyCode) {\n    return (\n      keyCode === 'PosX' ||\n      keyCode === 'PosY' ||\n      keyCode === 'WheelX' ||\n      keyCode === 'WheelY' ||\n      keyCode === 'WheelZ'\n    );\n  }\n\n  /** @override */\n  static isButton(keyCode) {\n    return !this.isAxis(keyCode);\n  }\n\n  /**\n   * Constructs a listening mouse with no listeners (yet).\n   *\n   * @param {string} deviceName\n   * @param {EventTarget} eventTarget\n   * @param {Object} [opts] Any additional options.\n   * @param {Boolean} [opts.eventsOnFocus=true] Whether to capture events only when it has focus.\n   */\n  constructor(deviceName, eventTarget, opts = {}) {\n    super(deviceName, eventTarget);\n\n    const { eventsOnFocus = true } = opts;\n    this.eventsOnFocus = eventsOnFocus;\n    this.canvasTarget = this.getCanvasFromEventTarget(eventTarget);\n\n    /** @private */\n    this._downHasFocus = false;\n\n    /**\n     * @private\n     * @type {InputDeviceEvent}\n     */\n    this._eventObject = {\n      target: eventTarget,\n      device: deviceName,\n      code: '',\n      event: '',\n      // Button values\n      value: 0,\n      control: false,\n      shift: false,\n      alt: false,\n    };\n    /**\n     * @private\n     * @type {InputDeviceEvent}\n     */\n    this._positionObject = {\n      target: eventTarget,\n      device: deviceName,\n      code: '',\n      event: 'move',\n      // Pos values\n      value: 0,\n      movement: 0,\n    };\n    /**\n     * @private\n     * @type {InputDeviceEvent}\n     */\n    this._wheelObject = {\n      target: eventTarget,\n      device: deviceName,\n      code: '',\n      event: 'wheel',\n      // Wheel values\n      movement: 0,\n    };\n\n    /** @private */\n    this.onMouseDown = this.onMouseDown.bind(this);\n    /** @private */\n    this.onMouseUp = this.onMouseUp.bind(this);\n    /** @private */\n    this.onMouseMove = this.onMouseMove.bind(this);\n    /** @private */\n    this.onContextMenu = this.onContextMenu.bind(this);\n    /** @private */\n    this.onWheel = this.onWheel.bind(this);\n\n    eventTarget.addEventListener('mousedown', this.onMouseDown);\n    eventTarget.addEventListener('contextmenu', this.onContextMenu);\n    eventTarget.addEventListener('wheel', this.onWheel);\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  /** @override */\n  setEventTarget(eventTarget) {\n    if (this.eventTarget) this.destroy();\n    super.setEventTarget(eventTarget);\n    this.canvasTarget = this.getCanvasFromEventTarget(eventTarget);\n    eventTarget.addEventListener('mousedown', this.onMouseDown);\n    eventTarget.addEventListener('contextmenu', this.onContextMenu);\n    eventTarget.addEventListener('wheel', this.onWheel);\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  /** @override */\n  destroy() {\n    let eventTarget = this.eventTarget;\n    eventTarget.removeEventListener('mousedown', this.onMouseDown);\n    eventTarget.removeEventListener('contextmenu', this.onContextMenu);\n    eventTarget.removeEventListener('wheel', this.onWheel);\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    super.destroy();\n  }\n\n  setPointerLock(force = true) {\n    if (force) {\n      this.eventTarget.requestPointerLock();\n    } else {\n      this.eventTarget.exitPointerLock();\n    }\n  }\n\n  hasPointerLock() {\n    return document.pointerLockElement === this.eventTarget;\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} e\n   */\n  onMouseDown(e) {\n    this._downHasFocus = true;\n\n    let event = this._eventObject;\n    // We care more about location (code) than print char (key).\n    event.code = 'Button' + e.button;\n    event.event = 'pressed';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.dispatchInputEvent(event);\n    if (result) {\n      // Make sure it has focus first.\n      if (document.activeElement === this.eventTarget) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} e\n   */\n  onContextMenu(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {WheelEvent} e\n   */\n  onWheel(e) {\n    let dx, dy, dz;\n    switch (e.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        dx = e.deltaX * DEFAULT_LINE_PIXELS;\n        dy = e.deltaY * DEFAULT_LINE_PIXELS;\n        dz = e.deltaZ * DEFAULT_LINE_PIXELS;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        dx = e.deltaX * DEFAULT_PAGE_PIXELS;\n        dy = e.deltaY * DEFAULT_PAGE_PIXELS;\n        dz = e.deltaZ * DEFAULT_PAGE_PIXELS;\n        break;\n      case WheelEvent.DOM_DELTA_PIXEL:\n      default:\n        dx = e.deltaX;\n        dy = e.deltaY;\n        dz = e.deltaZ;\n        break;\n    }\n\n    let result = 0;\n    let event = this._wheelObject;\n    event.code = 'WheelX';\n    event.movement = dx;\n    result |= this.dispatchInputEvent(event);\n    event.code = 'WheelY';\n    event.movement = dy;\n    result |= this.dispatchInputEvent(event);\n    event.code = 'WheelZ';\n    event.movement = dz;\n    result |= this.dispatchInputEvent(event);\n    if (result) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} e\n   */\n  onMouseUp(e) {\n    // Make sure mouse down was pressed before this (with focus).\n    if (!this._downHasFocus) return;\n    this._downHasFocus = false;\n\n    let event = this._eventObject;\n    // We care more about location (code) than print char (key).\n    event.code = 'Button' + e.button;\n    event.event = 'released';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.dispatchInputEvent(event);\n    if (result) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} e\n   */\n  onMouseMove(e) {\n    if (this.eventsOnFocus && document.activeElement !== this.eventTarget)\n      return;\n\n    const element = this.canvasTarget;\n    const { clientWidth, clientHeight } = element;\n    const rect = element.getBoundingClientRect();\n\n    let dx = e.movementX / clientWidth;\n    let dy = e.movementY / clientHeight;\n    let x = (e.clientX - rect.left) / clientWidth;\n    let y = (e.clientY - rect.top) / clientHeight;\n\n    let event = this._positionObject;\n    event.code = 'PosX';\n    event.value = x;\n    event.movement = dx;\n    this.dispatchInputEvent(event);\n    event.code = 'PosY';\n    event.value = y;\n    event.movement = dy;\n    this.dispatchInputEvent(event);\n  }\n\n  /** @private */\n  getCanvasFromEventTarget(eventTarget) {\n    if (eventTarget instanceof HTMLCanvasElement) {\n      return eventTarget;\n    } else {\n      return (\n        eventTarget.canvas ||\n        eventTarget.querySelector('canvas') ||\n        (eventTarget.shadowRoot &&\n          eventTarget.shadowRoot.querySelector('canvas')) ||\n        eventTarget\n      );\n    }\n  }\n}\n", "import INNER_HTML from './InputCode.template.html';\nimport INNER_STYLE from './InputCode.module.css';\n\nexport class InputCode extends HTMLElement {\n  /** @protected */\n  static get [Symbol.for('templateNode')]() {\n    let t = document.createElement('template');\n    t.innerHTML = INNER_HTML;\n    Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n    return t;\n  }\n\n  /** @protected */\n  static get [Symbol.for('styleNode')]() {\n    let t = document.createElement('style');\n    t.innerHTML = INNER_STYLE;\n    Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n    return t;\n  }\n\n  static define(customElements = window.customElements) {\n    customElements.define('input-code', this);\n  }\n\n  static get observedAttributes() {\n    return ['name', 'value', 'disabled'];\n  }\n\n  /** @returns {boolean} */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  /** @returns {string} */\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this.setAttribute('value', value);\n  }\n\n  /** @returns {string} */\n  get name() {\n    return this._name;\n  }\n\n  set name(value) {\n    this.setAttribute('name', value);\n  }\n\n  constructor() {\n    super();\n    const c = this.constructor;\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(c[Symbol.for('templateNode')].content.cloneNode(true));\n    shadowRoot.appendChild(c[Symbol.for('styleNode')].cloneNode(true));\n\n    /** @private */\n    this._name = '';\n    /** @private */\n    this._value = '';\n    /** @private */\n    this._disabled = false;\n\n    /** @private */\n    this._kbdElement = shadowRoot.querySelector('kbd');\n    /** @private */\n    this._nameElement = shadowRoot.querySelector('#name');\n    /** @private */\n    this._valueElement = shadowRoot.querySelector('#value');\n  }\n\n  attributeChangedCallback(attribute, prev, value) {\n    switch (attribute) {\n      case 'name':\n        this._name = value;\n        this._nameElement.textContent = value;\n        break;\n      case 'value':\n        this._value = value;\n        if (value !== null) {\n          this._valueElement.classList.toggle('hidden', false);\n          this._valueElement.textContent = value;\n          this._kbdElement.style.paddingRight = `${this._valueElement.clientWidth + 4\n            }px`;\n        } else {\n          this._valueElement.classList.toggle('hidden', true);\n        }\n        break;\n      case 'disabled':\n        this._disabled = value !== null;\n        this._kbdElement.classList.toggle('disabled', value !== null);\n        break;\n    }\n  }\n\n  connectedCallback() {\n    if (Object.prototype.hasOwnProperty.call(this, 'name')) {\n      let value = this.name;\n      delete this.name;\n      this.name = value;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(this, 'value')) {\n      let value = this.value;\n      delete this.value;\n      this.value = value;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(this, 'disabled')) {\n      let value = this.disabled;\n      delete this.disabled;\n      this.disabled = value;\n    }\n  }\n}\nInputCode.define();\n", "/**\n * @callback OnPollCallback\n * @param {number} now\n *\n * @typedef Pollable\n * @property {OnPollCallback} onPoll\n */\n\n/**\n * A class to automatically call onPoll() on animation frame.\n */\nexport class AutoPoller {\n  /**\n   * @param {Pollable} pollable\n   */\n  constructor(pollable) {\n    /** @private */\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n    /** @private */\n    this.animationFrameHandle = null;\n    /** @private */\n    this.pollable = pollable;\n  }\n\n  get running() {\n    return this.animationFrameHandle !== null;\n  }\n\n  start() {\n    let handle = this.animationFrameHandle;\n    if (handle) cancelAnimationFrame(handle);\n    this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n  }\n\n  stop() {\n    let handle = this.animationFrameHandle;\n    if (handle) cancelAnimationFrame(handle);\n    this.animationFrameHandle = null;\n  }\n\n  /** @private */\n  onAnimationFrame(now) {\n    this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n    this.pollable.onPoll(now);\n  }\n}\n", "/** @typedef {import('./InputBindings.js').InputBindings} InputBindings */\n\n/**\n * A class to listen and transform device events through\n * each mapped bindings into an input state.\n *\n * It requires onPoll() to be called to keep the input\n * state up to date. This is usually called from\n * requestAnimationFrame() or using the AutoPoller.\n */\nexport class DeviceInputAdapter {\n  /**\n   * @param {InputBindings} bindings\n   */\n  constructor(bindings) {\n    /** @private */\n    this.onInput = this.onInput.bind(this);\n    /** @private */\n    this.onPoll = this.onPoll.bind(this);\n\n    this.bindings = bindings;\n  }\n\n  /**\n   * @param {number} now \n   */\n  onPoll(now) {\n    for (let input of this.bindings.getInputs()) {\n      input.onPoll(now);\n    }\n  }\n  \n  onInput(e) {\n    const {\n      device,\n      code,\n      event,\n      value,\n      movement,\n      // eslint-disable-next-line no-unused-vars\n      control,\n      shift,\n      alt,\n    } = e;\n    let bindings = this.bindings.getBindings(device, code);\n    switch (event) {\n      case 'pressed':\n        for (let { input, index } of bindings) {\n          input.onUpdate(index, 1, 1);\n        }\n        break;\n      case 'released':\n        for (let { input, index } of bindings) {\n          input.onUpdate(index, 0, -1);\n        }\n        break;\n      case 'move':\n        for (let { input, index } of bindings) {\n          input.onUpdate(index, value, movement);\n        }\n        break;\n      case 'wheel':\n        for (let { input, index } of bindings) {\n          input.onUpdate(index, undefined, movement);\n        }\n        break;\n    }\n    return bindings.length > 0;\n  }\n}\n", "/**\n * @typedef {import('./state/InputState.js').InputState} InputState\n * @typedef {import('./state/InputState.js').BindingOptions} BindingOptions\n *\n * @typedef {string} DeviceName\n * @typedef {string} KeyCode\n */\n\nclass Binding {\n  /**\n   * @param {DeviceName} device The name of the device\n   * @param {KeyCode} code The key code for the device\n   * @param {InputState} input The parent input\n   * @param {number} index The binding index for the input\n   */\n  constructor(device, code, input, index) {\n    /** Name of the device */\n    this.device = device;\n    /** The key code for the device */\n    this.code = code;\n    /** The parent input */\n    this.input = input;\n    /** The binding index for the input */\n    this.index = index;\n  }\n}\n\n/**\n * A class that maps inputs to their respective key bindings.\n *\n * This does not handle input state (refer to InputState.js) nor\n * input events (refer to InputDevice.js). It is only responsible\n * for the redirection of key codes to their bound input. Usually\n * this is used together with the interfaces referenced above.\n */\nexport class InputBindings {\n  constructor() {\n    /**\n     * @private\n     * @type {Record<DeviceName, Record<KeyCode, Array<Binding>>>}\n     */\n    this.bindingMap = {};\n    /**\n     * @private\n     * @type {Map<InputState, Array<Binding>>}\n     */\n    this.inputMap = new Map();\n  }\n\n  clear() {\n    for (let input of this.inputMap.keys()) {\n      input.onUnbind();\n    }\n    this.inputMap.clear();\n    this.bindingMap = {};\n  }\n\n  /**\n   * @param {InputState} input\n   * @param {DeviceName} device\n   * @param {KeyCode} code\n   * @param {BindingOptions} [opts]\n   */\n  bind(input, device, code, opts = { inverted: false }) {\n    let binding;\n\n    let inputMap = this.inputMap;\n    if (inputMap.has(input)) {\n      let bindings = inputMap.get(input);\n      let index = input.size;\n      input.onBind(index, opts);\n      binding = new Binding(device, code, input, index);\n      bindings.push(binding);\n    } else {\n      let bindings = [];\n      inputMap.set(input, bindings);\n      let index = 0;\n      input.onBind(index, opts);\n      binding = new Binding(device, code, input, index);\n      bindings.push(binding);\n    }\n\n    let bindingMap = this.bindingMap;\n    if (device in bindingMap) {\n      if (code in bindingMap[device]) {\n        bindingMap[device][code].push(binding);\n      } else {\n        bindingMap[device][code] = [binding];\n      }\n    } else {\n      bindingMap[device] = { [code]: [binding] };\n    }\n  }\n\n  /**\n   * @param {InputState} input\n   */\n  unbind(input) {\n    let inputMap = this.inputMap;\n    if (inputMap.has(input)) {\n      let bindingMap = this.bindingMap;\n      let bindings = inputMap.get(input);\n      for (let binding of bindings) {\n        let { device, code } = binding;\n        let boundList = bindingMap[device][code];\n        let i = boundList.indexOf(binding);\n        boundList.splice(i, 1);\n      }\n      bindings.length = 0;\n      input.onUnbind();\n      inputMap.delete(input);\n    }\n  }\n\n  /**\n   * @param {InputState} input\n   * @returns {boolean}\n   */\n  isBound(input) {\n    return this.inputMap.has(input);\n  }\n\n  /** @returns {Iterable<InputState>} */\n  getInputs() {\n    return this.inputMap.keys();\n  }\n\n  /** @returns {Iterable<Binding>} */\n  getBindingsByInput(input) {\n    return this.inputMap.get(input);\n  }\n\n  /**\n   * @param {DeviceName} device\n   * @param {KeyCode} code\n   * @returns {Array<Binding>}\n   */\n  getBindings(device, code) {\n    let deviceCodeBindings = this.bindingMap;\n    if (device in deviceCodeBindings) {\n      let codeBindings = deviceCodeBindings[device];\n      if (code in codeBindings) {\n        return codeBindings[code];\n      }\n    }\n    return [];\n  }\n}\n", "import { AutoPoller } from './AutoPoller.js';\nimport { AxisState } from './state/AxisState.js';\nimport { ButtonState } from './state/ButtonState.js';\nimport { KeyboardDevice } from './device/KeyboardDevice.js';\nimport { MouseDevice } from './device/MouseDevice.js';\nimport { DeviceInputAdapter } from './DeviceInputAdapter.js';\nimport { InputBindings } from './InputBindings.js';\n\n/**\n * @typedef {import('./device/InputDevice.js').InputDevice} InputDevice\n * @typedef {import('./device/InputDevice.js').InputDeviceEvent} InputDeviceEvent\n * @typedef {import('./state/InputState.js').InputState} InputState\n * @typedef {import('./InputBindings.js').DeviceName} DeviceName\n * @typedef {import('./InputBindings.js').KeyCode} KeyCode\n * @typedef {import('./InputBindings.js').BindingOptions} BindingOptions\n *\n * @typedef {import('./binding/InputBinding.js').InputBinding} InputBinding\n */\n\n/**\n * @typedef {string} InputName\n * \n * @typedef {'bind'|'unbind'|'focus'|'blur'} InputContextEventType\n * @typedef {(e: InputContextEvent) => boolean} InputContextEventListener\n * \n * @typedef InputContextEvent\n * @property {InputContextEventType} type\n */\n\nexport class InputContext {\n  /**\n   * @param {EventTarget} eventTarget\n   * @param {object} [opts]\n   */\n  constructor(eventTarget, opts = undefined) {\n    /**\n     * @type {Record<string, AxisState|ButtonState>}\n     */\n    this.inputs = {};\n    /**\n     * @type {Array<InputDevice>}\n     */\n    this.devices = [\n      new MouseDevice('Mouse', eventTarget),\n      new KeyboardDevice('Keyboard', eventTarget),\n    ];\n    this.bindings = new InputBindings();\n    this.adapter = new DeviceInputAdapter(this.bindings);\n    this.autopoller = new AutoPoller(this.adapter);\n\n    /** @protected */\n    this.eventTarget = eventTarget;\n    /** @protected */\n    this.anyButton = new ButtonState(1);\n    /** @protected */\n    this.anyButtonDevice = '';\n    /** @protected */\n    this.anyButtonCode = '';\n    /** @protected */\n    this.anyAxis = new AxisState(1);\n    /** @protected */\n    this.anyAxisDevice = '';\n    /** @protected */\n    this.anyAxisCode = '';\n\n    /**\n     * @private\n     * @type {Record<InputContextEventType, Array<InputContextEventListener>>}\n     */\n    this.listeners = {\n      bind: [],\n      unbind: [],\n      focus: [],\n      blur: [],\n    };\n\n    // Prepare listeners\n    /** @private */\n    this.onInput = this.onInput.bind(this);\n    /** @private */\n    this.onEventTargetBlur = this.onEventTargetBlur.bind(this);\n    /** @private */\n    this.onEventTargetFocus = this.onEventTargetFocus.bind(this);\n\n    // Attach listeners\n    eventTarget.addEventListener('focus', this.onEventTargetFocus);\n    eventTarget.addEventListener('blur', this.onEventTargetBlur);\n    for (let device of this.devices) {\n      device.addEventListener('input', this.onInput);\n    }\n  }\n\n  get autopoll() {\n    return this.autopoller.running;\n  }\n\n  set autopoll(value) {\n    this.toggleAutoPoll(value);\n  }\n\n  destroy() {\n    let listeners = this.listeners;\n    for (let event in listeners) {\n      listeners[event].length = 0;\n    }\n    if (this.autopoller.running) {\n      this.autopoller.stop();\n    }\n    for (let device of this.devices) {\n      device.removeEventListener('input', this.onInput);\n      device.destroy();\n    }\n    let eventTarget = this.eventTarget;\n    eventTarget.removeEventListener('focus', this.onEventTargetFocus);\n    eventTarget.removeEventListener('blur', this.onEventTargetBlur);\n  }\n\n  setEventTarget(eventTarget) {\n    let oldEventTarget = this.eventTarget;\n    oldEventTarget.removeEventListener('focus', this.onEventTargetFocus);\n    oldEventTarget.removeEventListener('blur', this.onEventTargetBlur);\n\n    this.eventTarget = eventTarget;\n    for (let device of this.devices) {\n      device.setEventTarget(eventTarget);\n    }\n    eventTarget.addEventListener('focus', this.onEventTargetFocus);\n    eventTarget.addEventListener('blur', this.onEventTargetBlur);\n  }\n\n  toggleAutoPoll(force = undefined) {\n    let current = this.autopoller.running;\n    let next = typeof force === 'undefined' ? !current : Boolean(force);\n    if (next === current) return;\n    if (next) {\n      this.autopoller.start();\n    } else {\n      this.autopoller.stop();\n    }\n  }\n\n  /**\n   * @param {InputContextEventType} event\n   * @param {InputContextEventListener} listener\n   */\n  addEventListener(event, listener) {\n    let listeners = this.listeners;\n    if (event in listeners) {\n      listeners[event].push(listener);\n    } else {\n      listeners[event] = [listener];\n    }\n  }\n\n  /**\n   * @param {InputContextEventType} event\n   * @param {InputContextEventListener} listener\n   */\n  removeEventListener(event, listener) {\n    let listeners = this.listeners;\n    if (event in listeners) {\n      let list = listeners[event];\n      let i = list.indexOf(listener);\n      if (i >= 0) {\n        list.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * @param {InputContextEvent} e\n   * @returns {boolean} Whether the event should be consumed.\n   */\n  dispatchEvent(e) {\n    const { type } = e;\n    let flag = 0;\n    for (let listener of this.listeners[type]) {\n      flag |= listener(e) ? 1 : 0;\n    }\n    return Boolean(flag);\n  }\n\n  /**\n   * @param {number} now\n   */\n  poll(now = performance.now()) {\n    if (this.autopoller.running) {\n      throw new Error('Should not manually poll() while autopolling.');\n    }\n    this.onPoll(now);\n  }\n\n  /**\n   * @private\n   * @param {InputDeviceEvent} e\n   */\n  onInput(e) {\n    let result = this.adapter.onInput(e);\n    switch (e.event) {\n      case 'pressed':\n        this.anyButtonDevice = e.device;\n        this.anyButtonCode = e.code;\n        this.anyButton.onUpdate(0, 1, 1);\n        break;\n      case 'released':\n        this.anyButtonDevice = e.device;\n        this.anyButtonCode = e.code;\n        this.anyButton.onUpdate(0, 0, -1);\n        break;\n      case 'move':\n      case 'wheel':\n        this.anyAxisDevice = e.device;\n        this.anyAxisCode = e.code;\n        this.anyAxis.onUpdate(0, e.value, e.movement);\n        break;\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * @param {number} now\n   */\n  onPoll(now) {\n    this.adapter.onPoll(now);\n    this.anyButton.onPoll(now);\n    this.anyAxis.onPoll(now);\n  }\n\n  /** @private */\n  onBind() {\n    this.dispatchEvent({\n      type: 'bind',\n    });\n  }\n\n  /** @private */\n  onUnbind() {\n    this.dispatchEvent({\n      type: 'unbind',\n    });\n  }\n\n  /** @private */\n  onEventTargetFocus() {\n    this.dispatchEvent({\n      type: 'focus',\n    });\n  }\n\n  /** @private */\n  onEventTargetBlur() {\n    // Clear all input states.\n    for (let input of this.bindings.getInputs()) {\n      input.onStatus(0, 0);\n    }\n    this.anyButton.onStatus(0, 0);\n    this.anyAxis.onStatus(0, 0);\n    this.dispatchEvent({\n      type: 'blur',\n    });\n  }\n\n  /**\n   * @param {Array<InputBinding>|Record<string, InputBinding>} bindings\n   */\n  bindBindings(bindings) {\n    if (!Array.isArray(bindings)) {\n      bindings = Object.values(bindings);\n    }\n    for (let binding of bindings) {\n      binding.bindTo(this);\n    }\n  }\n\n  /**\n   * @param {InputBinding} binding\n   */\n  bindBinding(binding) {\n    binding.bindTo(this);\n  }\n\n  /**\n   * @param {InputName} name\n   * @param {DeviceName} device\n   * @param {KeyCode} code\n   * @param {BindingOptions} [opts]\n   */\n  bindButton(name, device, code, opts = undefined) {\n    let input;\n    if (this.hasButton(name)) {\n      input = this.getButton(name);\n    } else {\n      input = new ButtonState(1);\n      this.inputs[name] = input;\n    }\n    this.bindings.bind(input, device, code, opts);\n    this.onBind();\n  }\n\n  /**\n   * @param {string} name\n   * @param {DeviceName} device\n   * @param {KeyCode} code\n   * @param {BindingOptions} [opts]\n   */\n  bindAxis(name, device, code, opts = undefined) {\n    let input;\n    if (this.hasAxis(name)) {\n      input = this.getAxis(name);\n    } else {\n      input = new AxisState(1);\n      this.inputs[name] = input;\n    }\n    this.bindings.bind(input, device, code, opts);\n    this.onBind();\n  }\n\n  /**\n   * @param {string} name\n   * @param {DeviceName} device\n   * @param {KeyCode} negativeCode\n   * @param {KeyCode} positiveCode\n   */\n  bindAxisButtons(name, device, negativeCode, positiveCode) {\n    let input;\n    if (this.hasAxis(name)) {\n      input = this.getAxis(name);\n    } else {\n      input = new AxisState(2);\n      this.inputs[name] = input;\n    }\n    this.bindings.bind(input, device, positiveCode);\n    this.bindings.bind(input, device, negativeCode, { inverted: true });\n    this.onBind();\n  }\n\n  /**\n   * @param {string} name\n   */\n  unbindButton(name) {\n    if (this.hasButton(name)) {\n      let input = this.getButton(name);\n      delete this.inputs[name];\n      this.bindings.unbind(input);\n      this.onUnbind();\n    }\n  }\n\n  /**\n   * @param {string} name\n   */\n  unbindAxis(name) {\n    if (this.hasAxis(name)) {\n      let input = this.getAxis(name);\n      delete this.inputs[name];\n      this.bindings.unbind(input);\n      this.onUnbind();\n    }\n  }\n\n  /**\n   * Get the input for the given name. Assumes the input already exists for the name.\n   * @param {InputName} name\n   * @returns {InputState}\n   */\n  getInput(name) {\n    return this.inputs[name];\n  }\n\n  /**\n   * Get the button for the given name. Assumes a button already exists for the name.\n   * @param {InputName} name\n   * @returns {ButtonState}\n   */\n  getButton(name) {\n    return /** @type {ButtonState} */ (this.inputs[name]);\n  }\n\n  /**\n   * Get the axis for the given name. Assumes an axis already exists for the name.\n   * @param {InputName} name\n   * @returns {AxisState}\n   */\n  getAxis(name) {\n    return /** @type {AxisState} */ (this.inputs[name]);\n  }\n\n  /**\n   * Whether a button exists for the name and that it is of type {@link Button}.\n   * @returns {boolean}\n   */\n  hasButton(name) {\n    return name in this.inputs && this.inputs[name] instanceof ButtonState;\n  }\n\n  /**\n   * Whether an axis exists for the name and that it is of type {@link Axis}.\n   * @returns {boolean}\n   */\n  hasAxis(name) {\n    return name in this.inputs && this.inputs[name] instanceof AxisState;\n  }\n\n  /**\n   * Get whether a button for the given name is down. Assumes a button already exists for the name.\n   * @param {InputName} name\n   * @returns {boolean}\n   */\n  isButtonDown(name) {\n    return /** @type {ButtonState} */ (this.inputs[name]).down;\n  }\n\n  /**\n   * Get whether a button for the given name is pressed. Assumes a button already exists for the name.\n   * @param {InputName} name\n   * @returns {boolean}\n   */\n  isButtonPressed(name) {\n    return /** @type {ButtonState} */ (this.inputs[name]).pressed;\n  }\n\n  /**\n   * Get whether a button for the given name is released. Assumes a button already exists for the name.\n   * @param {InputName} name\n   * @returns {boolean}\n   */\n  isButtonReleased(name) {\n    return /** @type {ButtonState} */ (this.inputs[name]).released;\n  }\n\n  /**\n   * @param {InputName} name\n   * @returns {number}\n   */\n  getInputValue(name) {\n    return this.inputs[name].value;\n  }\n\n  /**\n   * @param {InputName} name\n   * @returns {number}\n   */\n  getButtonValue(name) {\n    return this.inputs[name].value;\n  }\n\n  /**\n   * @param {InputName} name\n   * @returns {number}\n   */\n  getAxisValue(name) {\n    return this.inputs[name].value;\n  }\n\n  /**\n   * @param {InputName} name\n   * @returns {number}\n   */\n  getAxisDelta(name) {\n    return /** @type {AxisState} */ (this.inputs[name]).delta;\n  }\n\n  /** @returns {boolean} */\n  isAnyButtonDown(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyButton.down;\n    } else {\n      let buttons = this.inputs;\n      for (let name of include) {\n        let button = /** @type {ButtonState} */ (buttons[name]);\n        if (button.down) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /** @returns {boolean} */\n  isAnyButtonPressed(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyButton.pressed;\n    } else {\n      let buttons = this.inputs;\n      for (let name of include) {\n        let button = /** @type {ButtonState} */ (buttons[name]);\n        if (button.pressed) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /** @returns {boolean} */\n  isAnyButtonReleased(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyButton.released;\n    } else {\n      let buttons = this.inputs;\n      for (let name of include) {\n        let button = /** @type {ButtonState} */ (buttons[name]);\n        if (button.released) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /** @returns {number} */\n  getAnyAxisValue(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyAxis.value;\n    } else {\n      let axes = this.inputs;\n      for (let name of include) {\n        let axis = axes[name];\n        if (axis.value) {\n          return axis.value;\n        }\n      }\n    }\n    return 0;\n  }\n\n  /** @returns {number} */\n  getAnyAxisDelta(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyAxis.delta;\n    } else {\n      let axes = this.inputs;\n      for (let name of include) {\n        let axis = /** @type {AxisState} */ (axes[name]);\n        if (axis.delta) {\n          return axis.delta;\n        }\n      }\n    }\n    return 0;\n  }\n\n  getLastButtonDevice() {\n    return this.anyButtonDevice;\n  }\n\n  getLastButtonCode() {\n    return this.anyButtonCode;\n  }\n\n  getLastAxisDevice() {\n    return this.anyAxisDevice;\n  }\n\n  getLastAxisCode() {\n    return this.anyAxisCode;\n  }\n\n  getMouse() {\n    return /** @type {MouseDevice}*/ (this.devices[0]);\n  }\n\n  getKeyboard() {\n    return /** @type {KeyboardDevice}*/ (this.devices[1]);\n  }\n}\n", "import INNER_HTML from './InputPort.template.html';\nimport INNER_STYLE from './InputPort.module.css';\n\nimport { InputCode } from '../inputcode/InputCode.js';\nimport { InputContext } from '../InputContext';\n\n/**\n * @typedef {import('../device/InputDevice.js').InputDevice} InputDevice\n * @typedef {import('../device/InputDevice.js').InputDeviceEvent} InputDeviceEvent\n * @typedef {import('../InputBindings.js').DeviceName} DeviceName\n * @typedef {import('../InputBindings.js').KeyCode} KeyCode\n * @typedef {import('../InputBindings.js').BindingOptions} BindingOptions\n * @typedef {import('../InputContext').InputName} InputName\n */\n\nexport class InputPort extends HTMLElement {\n\n  /**\n   * @param {object} [opts]\n   * @param {HTMLElement} [opts.root]\n   * @param {string} [opts.for]\n   * @param {boolean} [opts.autopoll]\n   */\n  static create(opts = {}) {\n    const {\n      root = document.body,\n      for: forId = undefined,\n      autopoll = false,\n    } = opts || {};\n    let result = new InputPort();\n    result.for = forId;\n    result.autopoll = autopoll;\n    root.appendChild(result);\n    return result;\n  }\n\n  /** @protected */\n  static get [Symbol.for('templateNode')]() {\n    let t = document.createElement('template');\n    t.innerHTML = INNER_HTML;\n    Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n    return t;\n  }\n\n  /** @protected */\n  static get [Symbol.for('styleNode')]() {\n    let t = document.createElement('style');\n    t.innerHTML = INNER_STYLE;\n    Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n    return t;\n  }\n\n  static define(customElements = window.customElements) {\n    customElements.define('input-port', this);\n  }\n\n  static get observedAttributes() {\n    return ['autopoll', 'for'];\n  }\n\n  /** @returns {boolean} */\n  get autopoll() {\n    return this._autopoll;\n  }\n\n  set autopoll(value) {\n    this.toggleAttribute('autopoll', value);\n  }\n\n  /** @returns {string} */\n  get for() {\n    return this._for;\n  }\n\n  set for(value) {\n    this.setAttribute('for', value);\n  }\n\n  constructor() {\n    super();\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('templateNode')].content.cloneNode(true)\n    );\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('styleNode')].cloneNode(true)\n    );\n\n    /** @private */\n    this._titleElement = shadowRoot.querySelector('#title');\n    /** @private */\n    this._pollElement = shadowRoot.querySelector('#poll');\n    /** @private */\n    this._focusElement = shadowRoot.querySelector('#focus');\n    /** @private */\n    this._bodyElement = shadowRoot.querySelector('tbody');\n    /** @private */\n    this._outputElements = {};\n\n    /** @private */\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n    /** @private */\n    this.animationFrameHandle = null;\n\n    const eventTarget = this;\n    /** @private */\n    this._for = '';\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this._eventTarget = eventTarget;\n    /** @private */\n    this._autopoll = false;\n\n    /** @private */\n    this._context = null;\n\n    /** @private */\n    this.onInputContextBind = this.onInputContextBind.bind(this);\n    /** @private */\n    this.onInputContextUnbind = this.onInputContextUnbind.bind(this);\n    /** @private */\n    this.onInputContextFocus = this.onInputContextFocus.bind(this);\n    /** @private */\n    this.onInputContextBlur = this.onInputContextBlur.bind(this);\n  }\n\n  connectedCallback() {\n    if (Object.prototype.hasOwnProperty.call(this, 'for')) {\n      let value = this.for;\n      delete this.for;\n      this.for = value;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(this, 'autopoll')) {\n      let value = this.autopoll;\n      delete this.autopoll;\n      this.autopoll = value;\n    }\n\n    // Make sure the table and values are up to date\n    this.updateTable();\n    this.updateTableValues();\n    this.animationFrameHandle = window.requestAnimationFrame(this.onAnimationFrame);\n  }\n\n  disconnectedCallback() {\n    let ctx = this._context;\n    if (ctx) {\n      ctx.removeEventListener('bind', this.onInputContextBind);\n      ctx.removeEventListener('unbind', this.onInputContextUnbind);\n      ctx.removeEventListener('blur', this.onInputContextBlur);\n      ctx.removeEventListener('focus', this.onInputContextFocus);\n      ctx.destroy();\n      this._context = null;\n    }\n  }\n  \n  attributeChangedCallback(attribute, prev, value) {\n    switch (attribute) {\n      case 'for': {\n        this._for = value;\n        let target;\n        let name;\n        if (value) {\n          target = document.getElementById(value);\n          name = `${target.tagName.toLowerCase()}#${value}`;\n        } else {\n          target = this;\n          name = 'input-port';\n        }\n        this._eventTarget = target;\n        if (this._context) {\n          this._context.setEventTarget(this._eventTarget);\n        }\n        // For debug info\n        this._titleElement.innerHTML = `for ${name}`;\n      }\n        break;\n      case 'autopoll':\n        this._autopoll = value !== null;\n        if (this._context) {\n          this._context.toggleAutoPoll(this._autopoll);\n        }\n        break;\n    }\n  }\n\n  /** @private */\n  onAnimationFrame() {\n    this.animationFrameHandle = window.requestAnimationFrame(this.onAnimationFrame);\n    this.updateTableValues();\n    this.updatePollStatus();\n  }\n\n  /** @private */\n  onInputContextBind() {\n    this.updateTable();\n    return true;\n  }\n\n  /** @private */\n  onInputContextUnbind() {\n    this.updateTable();\n    return true;\n  }\n\n  /** @private */\n  onInputContextFocus() {\n    this._focusElement.innerHTML = '\u2713';\n    return true;\n  }\n\n  /** @private */\n  onInputContextBlur() {\n    this._focusElement.innerHTML = '';\n    return true;\n  }\n\n  /**\n   * @param {'axisbutton'} [contextId]\n   * @param {object} [options]\n   * @returns {InputContext}\n   */\n  getContext(contextId = 'axisbutton', options = undefined) {\n    switch (contextId) {\n      case 'axisbutton':\n        if (!this._context) {\n          let ctx = new InputContext(this._eventTarget, options);\n          ctx.addEventListener('bind', this.onInputContextBind);\n          ctx.addEventListener('unbind', this.onInputContextUnbind);\n          ctx.addEventListener('blur', this.onInputContextBlur);\n          ctx.addEventListener('focus', this.onInputContextFocus);\n          if (this._autopoll) {\n            ctx.toggleAutoPoll(true);\n          }\n          this._context = ctx;\n        }\n        return this._context;\n      default:\n        throw new Error(`Input context id '${contextId}' is not supported.`);\n    }\n  }\n\n  /** @private */\n  updateTable() {\n    if (!this.isConnected) {\n      // Don't update the DOM if not connected to any :(\n      return;\n    } else if (!this._context) {\n      // Clear all values if no context is available\n      this._outputElements = {};\n      this._bodyElement.innerHTML = '';\n      return;\n    } else {\n      let context = this._context;\n      let inputs = context.inputs;\n      let bindings = context.bindings;\n      let primaryElements = {};\n      let entries = [];\n      for (let name of Object.keys(inputs)) {\n        let input = inputs[name];\n        let primary = true;\n        for (let binding of bindings.getBindingsByInput(input)) {\n          let element = createInputTableEntry(\n            `${input.constructor.name}.${name}`,\n            `${binding.device}.${binding.code}`,\n            0,\n            primary\n          );\n          entries.push(element);\n          if (primary) {\n            primaryElements[name] = element.querySelector('output');\n            primary = false;\n          }\n        }\n      }\n      this._outputElements = primaryElements;\n      this._bodyElement.innerHTML = '';\n      for (let entry of entries) {\n        this._bodyElement.appendChild(entry);\n      }\n    }\n  }\n\n  /** @private */\n  updateTableValues() {\n    if (!this.isConnected) {\n      // Don't update the DOM if not connected to any :(\n      return;\n    } else if (!this._context) {\n      // Clear all values if no context is available\n      for (let name of Object.keys(this._outputElements)) {\n        let element = this._outputElements[name];\n        element.innerText = '---';\n      }\n      return;\n    } else {\n      let context = this._context;\n      let inputs = context.inputs;\n      for (let name of Object.keys(this._outputElements)) {\n        let element = this._outputElements[name];\n        let value = inputs[name].value;\n        element.innerText = Number(value).toFixed(2);\n      }\n    }\n  }\n\n  /** @private */\n  updatePollStatus() {\n    if (!this.isConnected) {\n      // Don't update the DOM if not connected to any :(\n      return;\n    } else if (!this._context) {\n      // Clear all values if no context is available\n      this._pollElement.innerHTML = '-';\n      return;\n    } else {\n      let context = this._context;\n      let inputs = context.inputs;\n      for (let input of Object.values(inputs)) {\n        if (!input.polling) {\n          this._pollElement.innerHTML = '';\n          return;\n        }\n      }\n      this._pollElement.innerHTML = '\u2713';\n    }\n  }\n}\nInputPort.define();\n\nfunction createInputTableEntry(name, key, value, primary = true) {\n  let row = document.createElement('tr');\n  if (primary) {\n    row.classList.add('primary');\n  }\n  // Name\n  {\n    let data = document.createElement('td');\n    data.textContent = name;\n    data.classList.add('name');\n    row.appendChild(data);\n  }\n  // Value\n  {\n    let data = document.createElement('td');\n    let output = document.createElement('output');\n    if (primary) {\n      output.innerText = Number(value).toFixed(2);\n    } else {\n      output.innerText = '---';\n    }\n    output.classList.add('value');\n    data.appendChild(output);\n    row.appendChild(data);\n  }\n  // Key\n  {\n    let data = document.createElement('td');\n    data.classList.add('key');\n    let kbd = new InputCode();\n    kbd.innerText = key;\n    data.appendChild(kbd);\n    row.appendChild(data);\n  }\n  return row;\n}\n", "import { ButtonState } from './state/ButtonState.js';\nimport { KeyboardDevice } from './device/KeyboardDevice.js';\nimport { InputBindings } from './InputBindings.js';\nimport { AutoPoller } from './AutoPoller.js';\nimport { DeviceInputAdapter } from './DeviceInputAdapter.js';\nimport { KEYBOARD } from './keycode/KeyCodes.js';\n\n/**\n * @typedef {import('./state/ButtonState.js').ButtonReadOnly} ButtonReadOnly\n */\n\nconst KEYBOARD_SOURCE = Symbol('keyboardSource');\nexport class Keyboard {\n  constructor(eventTarget, opts) {\n    /** @type {ButtonReadOnly} */\n    this.KeyA = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyB = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyC = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyD = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyE = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyF = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyG = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyH = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyI = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyJ = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyK = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyL = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyM = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyN = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyO = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyP = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyQ = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyR = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyS = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyT = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyU = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyV = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyW = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyX = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyY = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyZ = new ButtonState();\n\n    /** @type {ButtonReadOnly} */\n    this.Digit0 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit1 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit2 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit3 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit4 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit5 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit6 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit7 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit8 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit9 = new ButtonState();\n\n    /** @type {ButtonReadOnly} */\n    this.Minus = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Equal = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.BracketLeft = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.BracketRight = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Semicolon = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Quote = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Backquote = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Backslash = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Comma = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Period = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Slash = new ButtonState();\n\n    /** @type {ButtonReadOnly} */\n    this.Escape = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Space = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.CapsLock = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Backspace = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Delete = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Tab = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Enter = new ButtonState();\n\n    /** @type {ButtonReadOnly} */\n    this.ArrowUp = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.ArrowDown = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.ArrowLeft = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.ArrowRight = new ButtonState();\n\n    const deviceName = KEYBOARD;\n    const device = new KeyboardDevice(deviceName, eventTarget, opts);\n    const bindings = new InputBindings();\n    for (let key in this) {\n      if (Object.prototype.hasOwnProperty.call(this, key)) {\n        let input = /** @type {ButtonState} */ (this[key]);\n        bindings.bind(input, deviceName, key);\n      }\n    }\n    const adapter = new DeviceInputAdapter(bindings);\n    // @ts-ignore\n    device.addEventListener('input', adapter.onInput);\n    // @ts-ignore\n    const autopoller = new AutoPoller(adapter);\n    autopoller.start();\n    this[KEYBOARD_SOURCE] = {\n      device,\n      bindings,\n      adapter,\n      autopoller,\n    };\n  }\n\n  destroy() {\n    const source = this[KEYBOARD_SOURCE];\n    source.autopoller.stop();\n    // @ts-ignore\n    source.device.removeEventListener('input', source.adapter.onInput);\n    source.device.destroy();\n    source.bindings.clear();\n  }\n}\n", "import { AxisState } from './state/AxisState.js';\nimport { ButtonState } from './state/ButtonState.js';\nimport { MouseDevice } from './device/MouseDevice.js';\nimport { InputBindings } from './InputBindings.js';\nimport { DeviceInputAdapter } from './DeviceInputAdapter.js';\nimport { AutoPoller } from './AutoPoller.js';\nimport { MOUSE } from './keycode/KeyCodes.js';\n\n/**\n * @typedef {import('./state/AxisState.js').AxisReadOnly} AxisReadOnly\n * @typedef {import('./state/ButtonState.js').ButtonReadOnly} ButtonReadOnly\n */\n\nconst MOUSE_SOURCE = Symbol('mouseSource');\nexport class Mouse {\n  constructor(eventTarget, opts) {\n    /** @type {AxisReadOnly} */\n    this.PosX = new AxisState();\n    /** @type {AxisReadOnly} */\n    this.PosY = new AxisState();\n\n    /** @type {AxisReadOnly} */\n    this.WheelX = new AxisState();\n    /** @type {AxisReadOnly} */\n    this.WheelY = new AxisState();\n    /** @type {AxisReadOnly} */\n    this.WheelZ = new AxisState();\n\n    /** @type {ButtonReadOnly} */\n    this.Button0 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Button1 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Button2 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Button3 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Button4 = new ButtonState();\n\n    const deviceName = MOUSE;\n    const device = new MouseDevice(deviceName, eventTarget, opts);\n    const bindings = new InputBindings();\n    for (let key in this) {\n      if (Object.prototype.hasOwnProperty.call(this, key)) {\n        let input = /** @type {AxisState|ButtonState} */ (this[key]);\n        bindings.bind(input, deviceName, key);\n      }\n    }\n    const adapter = new DeviceInputAdapter(bindings);\n    device.addEventListener('input', adapter.onInput);\n    const autopoller = new AutoPoller(adapter);\n    autopoller.start();\n    this[MOUSE_SOURCE] = {\n      device,\n      bindings,\n      adapter,\n      autopoller,\n    };\n  }\n\n  destroy() {\n    const source = this[MOUSE_SOURCE];\n    source.autopoller.stop();\n    source.device.removeEventListener('input', source.adapter.onInput);\n    source.device.destroy();\n    source.bindings.clear();\n  }\n}\n", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "import { makeRe } from 'picomatch';\n\nexport class GlobExp {\n    /**\n     * @param {string|GlobExp} pattern \n     */\n    constructor(pattern) {\n        let source;\n        if (typeof pattern === 'object' && pattern instanceof GlobExp) {\n            source = pattern.source;\n        } else {\n            source = String(pattern);\n        }\n        this.source = source;\n\n        /** @private */\n        this._re = makeRe(source);\n    }\n\n    /**\n     * @param {string} string \n     * @returns {boolean}\n     */\n    test(string) {\n        return this._re.test(string);\n    }\n}\n", "import { GlobExp } from './GlobExp.js';\n\n/**\n * @typedef AssetStore\n * @property {Record<string, object>} store\n * @property {Record<string, Loading>} loadings\n * @property {Array<Fallback>} defaults\n */\n\n/**\n * @template T\n * @template {object} S\n * @callback AssetLoader\n * @param {string|ArrayBuffer} src\n * @param {S} [opts]\n * @returns {Promise<T>}\n */\n\nconst FILE_URI_PREFIX_PATTERN = /^([_\\w\\d]+)\\:\\/\\//;\n\n/**\n * Load asset using a loader with the given src.\n * - If loading to transform a cached asset, the cached uri must start with `res://` (or equivalent).\n * - If loading to transform cached raw buffers from an asset pack, use `raw://`.\n * - Otherwise, it will call `fetch()` on src.\n * \n * @template T, S\n * @param {AssetStore} assets\n * @param {string} uri \n * @param {string} src\n * @param {AssetLoader<T, S>} loader\n * @param {S} opts\n * @param {number} timeout\n * @returns {Promise<T>}\n */\n export async function loadInStore(assets, uri, src, loader, opts, timeout) {\n    const { loadings } = assets;\n    \n    let loading;\n    if (uri in loadings) {\n        loading = loadings[uri];\n    } else {\n        loading = new Loading(timeout);\n        loadings[uri] = loading;\n    }\n\n    const attempt = Loading.nextAttempt(loading);\n\n    /** @type {Array<Promise<T>>} */\n    let promises = [loading.promise];\n    if (FILE_URI_PREFIX_PATTERN.test(src)) {\n        // Loading from cached file\n        promises.push(getLoadedInStore(assets, src, timeout)\n            .then(cached => loader(cached, opts))\n            .then(value => Loading.isCurrentAttempt(loading, attempt)\n                ? cacheInStore(assets, uri, value)\n                : undefined));\n    } else {\n        // Fetching from network\n        promises.push(fetch(src)\n            .then(response => response.arrayBuffer())\n            .then(arr => loader(arr))\n            .then(value => Loading.isCurrentAttempt(loading, attempt)\n                ? cacheInStore(assets, uri, value)\n                : undefined));\n    }\n    return await Promise.race(promises);\n}\n\n/**\n * @template T\n * @param {AssetStore} assets\n * @param {string} uri\n * @param {T} value\n * @returns {T}\n */\nexport function cacheInStore(assets, uri, value) {\n    const { store, loadings } = assets;\n    store[uri] = value;\n    // Send asset to awaiting loaders...\n    if (uri in loadings) {\n        loadings[uri].resolve(value);\n        delete loadings[uri];\n    }\n    return value;\n}\n\n/**\n * @template T\n * @param {AssetStore} assets\n * @param {string|GlobExp} glob\n * @param {T} value\n * @returns {T}\n */\nexport function cacheDefaultInStore(assets, glob, value) {\n    const { defaults } = assets;\n    if (typeof glob === 'string') {\n        glob = new GlobExp(glob);\n    }\n    const uri = `__default://[${defaults.length}]`;\n    cacheInStore(assets, uri, value);\n    defaults.push(new Fallback(glob, uri));\n    return value;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n */\nexport function unloadInStore(assets, uri) {\n    const { store, loadings } = assets;\n    if (uri in loadings) {\n        loadings[uri].reject(new Error('Stop loading to delete asset.'));\n        delete loadings[uri];\n    }\n    if (uri in store) {\n        delete store[uri];\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string|GlobExp} glob\n */\nexport function clearInStore(assets, glob) {\n    if (typeof glob === 'string') {\n        glob = new GlobExp(glob);\n    }\n    const { store, loadings } = assets;\n    // Clear loadings\n    for (let [uri, loading] of Object.entries(loadings)) {\n        if (glob.test(uri)) {\n            loading.reject(new Error(`Stop loading to clear assets matching ${glob}`));\n            delete loadings[uri];\n        }\n    }\n    // Clear cache\n    for (let uri of Object.keys(store)) {\n        if (glob.test(uri)) {\n            delete store[uri];\n        }\n    }\n}\n\n/**\n * @param {AssetStore} assets \n */\nexport function resetStore(assets) {\n    const { store, loadings, defaults } = assets;\n    // Clear loadings\n    for (let [uri, loading] of Object.entries(loadings)) {\n        loading.reject(new Error(`Stop loading to clear all assets.`));\n        delete loadings[uri];\n    }\n    // Clear cache\n    for (let uri of Object.keys(store)) {\n        delete store[uri];\n    }\n    // Clear defaults\n    defaults.length = 0;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @returns {Promise<object>}\n */\nexport function getLoadingInStore(assets, uri) {\n    const { loadings } = assets;\n    if (uri in loadings) {\n        return loadings[uri].promise;\n    } else {\n        return null;\n    }\n}\n\n/**\n * @param {AssetStore} assets \n * @param {string} uri \n */\nexport function cancelLoadingInStore(assets, uri) {\n    const { loadings } = assets;\n    for (let [uri, loading] of Object.entries(loadings)) {\n        loading.reject(new Error(`Stop loading to clear all assets.`));\n        delete loadings[uri];\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @param {number} timeout\n * @returns {Promise<object>}\n */\nexport async function getLoadedInStore(assets, uri, timeout) {\n    const { store, loadings } = assets;\n    if (uri in store) {\n        return store[uri];\n    } else if (uri in loadings) {\n        return loadings[uri].promise;\n    } else {\n        let loading = new Loading(timeout);\n        loadings[uri] = loading;\n        return loading.promise;\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {object}\n */\nexport function getDefaultInStore(assets, uri) {\n    const { defaults } = assets;\n    for (let def of defaults) {\n        if (def.glob.test(uri)) {\n            return getCurrentInStore(assets, def.uri);\n        }\n    }\n    return null;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @returns {object}\n */\nexport function getCurrentInStore(assets, uri) {\n    return assets.store[uri];\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function hasInStore(assets, uri) {\n    return Boolean(assets.store[uri]);\n}\n\n/**\n * @param {AssetStore} assets\n * @returns {Array<string>}\n */\nexport function keysInStore(assets) {\n    return Object.keys(assets.store);\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function isAssetCachedInStore(assets, uri) {\n    return uri in assets.store;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function isAssetLoadingInStore(assets, uri) {\n    return uri in assets.loadings;\n}\n\nclass Fallback {\n    /**\n     * @param {GlobExp} glob \n     * @param {string} uri \n     */\n    constructor(glob, uri) {\n        this.glob = glob;\n        this.uri = uri;\n    }\n}\n\nclass Loading {\n\n    /**\n     * @param {Loading} loading\n     */\n    static nextAttempt(loading) {\n        return ++loading._promiseHandle;\n    }\n\n    /**\n     * @param {Loading} loading \n     * @param {number} attempt\n     */\n    static isCurrentAttempt(loading, attempt) {\n        return loading._promiseHandle === attempt;\n    }\n\n    constructor(timeout) {\n        /** @private */\n        this._promiseHandle = 0;\n        /** @private */\n        this._resolve = null;\n        /** @private */\n        this._reject = null;\n        /** @private */\n        this._reason = null;\n        /** @private */\n        this._value = null;\n        /** @private */\n        this._timeoutHandle =\n            Number.isFinite(timeout) && timeout > 0\n                ? setTimeout(() => {\n                    this.reject(`Asset loading exceeded timeout of ${timeout} ms.`);\n                }, timeout)\n                : null;\n        /** @private */\n        this._promise = new Promise((resolve, reject) => {\n            if (this._value) {\n                resolve(this._value);\n            } else {\n                this._resolve = resolve;\n            }\n            if (this._reason) {\n                reject(this._reason);\n            } else {\n                this._reject = reject;\n            }\n        });\n    }\n\n    get promise() {\n        return this._promise;\n    }\n\n    resolve(value) {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n            this._timeoutHandle = null;\n        }\n        if (this._resolve) {\n            this._resolve(value);\n        } else {\n            this._value = value;\n        }\n    }\n\n    reject(reason) {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n            this._timeoutHandle = null;\n        }\n        if (this._reject) {\n            this._reject(reason);\n        } else {\n            this._reason = reason;\n        }\n    }\n}\n", "import { cacheDefaultInStore, cacheInStore, clearInStore, getCurrentInStore, getDefaultInStore, getLoadedInStore, getLoadingInStore, hasInStore, isAssetCachedInStore, isAssetLoadingInStore, keysInStore, loadInStore, resetStore, unloadInStore } from './AssetStore.js';\nimport { GlobExp } from './GlobExp.js';\n\nexport class AssetManager {\n\n    /**\n     * @param {AssetManager} [parent] \n     */\n    constructor(parent = null) {\n        this.parent = parent;\n        /** @private */\n        this.store = {};\n        /** @private */\n        this.loadings = {};\n        /** @private */\n        this.defaults = [];\n    }\n\n    /**\n     * @param {string} uri \n     * @returns {object}\n     */\n    get(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetCachedInStore(assets, uri)) {\n            return getCurrentInStore(assets, uri);\n        }\n        let def = getDefaultInStore(assets, uri);\n        if (def) {\n            return def;\n        }\n        return null;\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout \n     * @returns {Promise<T>}\n     */\n    async resolve(uri, filepath, loader, opts, timeout) {\n        return this.get(uri) || await this.load(uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @template T\n     * @param {string|GlobExp} uriGlob \n     * @param {T} value \n     * @returns {T}\n     */\n    fallback(uriGlob, value) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return cacheDefaultInStore(assets, uriGlob, value);\n    }\n\n    /**\n     * @template T\n     * @param {string} uri \n     * @param {T} value \n     * @returns {T}\n     */\n    cache(uri, value) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return cacheInStore(assets, uri, value);\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout\n     * @returns {Promise<T>}\n     */\n    async load(uri, filepath, loader, opts, timeout) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetCachedInStore(assets, uri)) {\n            return getCurrentInStore(assets, uri);\n        } else if (isAssetLoadingInStore(assets, uri)) {\n            return await getLoadedInStore(assets, uri, timeout);\n        }\n        return await loadInStore(assets, uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout\n     * @returns {Promise<T>}\n     */\n    async reload(uri, filepath, loader, opts, timeout) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return await loadInStore(assets, uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    unload(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        unloadInStore(assets, uri);\n    }\n\n    /**\n     * @param {string|GlobExp} uriGlob \n     */\n    clear(uriGlob) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        clearInStore(assets, uriGlob);\n    }\n\n    /**\n     * @param {string} uri\n     */\n    current(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return getCurrentInStore(assets, uri);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    exists(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return hasInStore(assets, uri);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    loading(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetLoadingInStore(assets, uri)) {\n            return getLoadingInStore(assets, uri);\n        } else {\n            return null;\n        }\n    }\n\n    keys() {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return keysInStore(assets);\n    }\n\n    reset() {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        resetStore(assets);\n    }\n}\n", "import { AssetManager } from './AssetManager';\n\nconst DEFAULT_TIMEOUT = 5000;\n\n/** @template T, S */\nexport class AssetRef {\n\n    /**\n     * @param {string} uri \n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} [opts] \n     * @param {string} [filepath]\n     * @param {T|AssetRef<T>} [initial]\n     */\n    constructor(uri, loader, opts = undefined, filepath = uri, initial = null) {\n        this.uri = uri;\n        this.loader = loader;\n        this.opts = opts;\n\n        /** @private */\n        this.initial = initial;\n        /** @private */\n        this.filepath = filepath;\n\n        /** @type {AssetManager} */\n        this.source = null;\n        /** @type {T} */\n        this.current = null;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {T} value \n     */\n    cache(assetManager, value) {\n        assetManager.cache(this.uri, value);\n        this.source = assetManager;\n        this.current = value;\n        return this;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @returns {T}\n     */\n    get(assetManager) {\n        let result;\n        if (!assetManager.exists(this.uri)) {\n            if (this.initial && this.initial instanceof AssetRef) {\n                result = this.initial.get(assetManager);\n            } else {\n                result = this.initial;\n            }\n        } else {\n            result = assetManager.current(this.uri);\n        }\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {number} [timeout]\n     */\n    async load(assetManager, timeout = DEFAULT_TIMEOUT) {\n        let result;\n        if (!assetManager.exists(this.uri)) {\n            result = await assetManager.load(this.uri, this.filepath, this.loader, this.opts, timeout);\n            if (!result) {\n                if (this.initial && this.initial instanceof AssetRef) {\n                    let initial = this.initial;\n                    result = await assetManager.load(initial.uri, initial.filepath, initial.loader, initial.opts, timeout);\n                } else {\n                    result = this.initial;\n                }\n            }\n        } else {\n            result = assetManager.current(this.uri);\n        }\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {number} [timeout] \n     */\n    async reload(assetManager, timeout = DEFAULT_TIMEOUT) {\n        let result = await assetManager.reload(this.uri, this.filepath, this.loader, this.opts, timeout);\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n}\n", "import { unzip } from 'fflate';\n\nimport { cacheInStore } from './AssetStore.js';\nimport { AssetManager } from './AssetManager.js';\nimport { AssetRef } from './AssetRef.js';\n\n/**\n * Fetch asset pack from url and cache raw file content under `raw://`.\n * \n * @param {string} url\n * @param {(src: Uint8Array, path: string) => void} callback\n */\nexport async function loadAssetPack(url, callback) {\n    let response = await fetch(url);\n    let arrayBuffer = await response.arrayBuffer();\n    await new Promise((resolve, reject) => {\n        unzip(new Uint8Array(arrayBuffer), (err, data) => {\n            if (err) {\n                reject(err);\n            } else {\n                for (let [path, buf] of Object.entries(data)) {\n                    // Standardize WIN paths\n                    path = path.replaceAll('\\\\', '/');\n                    callback(buf, path);\n                }\n                resolve();\n            }\n        });\n    });\n}\n\n/**\n * Fetch asset pack from url and cache raw file content under `raw://`.\n * \n * @param {AssetManager} assets\n * @param {string} url\n * @param {(src: Uint8Array, uri: string, path: string) => void} [callback]\n */\nexport async function cacheAssetPackAsRaw(assets, url, callback = undefined) {\n    const assetStore = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (assets));\n    let rootPath = 'raw://';\n    let response = await fetch(url);\n    let arrayBuffer = await response.arrayBuffer();\n    await new Promise((resolve, reject) => {\n        unzip(new Uint8Array(arrayBuffer), (err, data) => {\n            if (err) {\n                reject(err);\n            } else {\n                for (let [path, buf] of Object.entries(data)) {\n                    // Standardize WIN paths\n                    path = path.replaceAll('\\\\', '/');\n                    // Remove the zip directory name\n                    let i = path.indexOf('/');\n                    if (i >= 0) {\n                        path = path.substring(i + 1);\n                    }\n                    // Put the raw file in cache\n                    let uri = rootPath + path;\n                    cacheInStore(assetStore, uri, buf);\n                    if (callback) {\n                        callback(buf, uri, path);\n                    }\n                }\n                resolve();\n            }\n        });\n    });\n}\n\n/**\n * This is the same as calling `await AssetRef.load()` for each ref.\n * \n * @param {AssetManager} assets\n * @param {Array<AssetRef<?, ?>>} refs \n * @param {number} [timeout] \n */\nexport async function preloadAssetRefs(assets, refs, timeout = 5000) {\n    let promises = [];\n    for (let ref of refs) {\n        promises.push(ref.load(assets, timeout));\n    }\n    await Promise.allSettled(promises);\n}\n", "/**\n * @typedef {Record<string, AtlasSpriteData>} Atlas\n * \n * @typedef AtlasSpriteData\n * @property {number} u\n * @property {number} v\n * @property {number} w\n * @property {number} h\n * @property {number} frames\n * @property {number} cols\n * @property {number} rows\n * @property {string} name\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @param {{ onprogress: (value: number, loaded: number, total: number) => void }} opts\n * @returns {Promise<Atlas>}\n */\nexport async function AtlasLoader(src, opts = { onprogress: undefined }) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return AtlasLoader(arrayBuffer, opts);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error('Cannot load from source - must be an array buffer or fetchable url.');\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  const string = new TextDecoder().decode(arrayBuffer);\n  /** @type {Atlas} */\n  let result = {};\n  let lines = string.split('\\n');\n  let progressTotal = lines.length;\n  let progressLoaded = 0;\n  if (opts.onprogress) {\n    opts.onprogress(0, 0, progressTotal);\n  }\n  for (let line of lines) {\n    ++progressLoaded;\n    line = line.trim();\n    if (line.length <= 0) continue;\n    if (line.startsWith('#')) continue;\n    if (line.startsWith('//')) continue;\n\n    let args = [];\n    let i = 0;\n    let j = line.indexOf(' ');\n    while (j >= 0) {\n      args.push(line.substring(i, j));\n      i = j + 1;\n      j = line.indexOf(' ', i);\n    }\n    args.push(line.substring(i));\n\n    let name = args[0];\n    let u = Number.parseInt(args[1]);\n    let v = Number.parseInt(args[2]);\n    let w = Number.parseInt(args[3]);\n    let h = Number.parseInt(args[4]);\n    let frames =\n      args.length >= 6\n        ? Number.parseInt(args[5]) // User-defined\n        : 1; // Default 1 frame\n    let cols =\n      args.length >= 7\n        ? Number.parseInt(args[6]) // User-defined\n        : frames; // Default same as frame count\n    let rows =\n      args.length >= 8\n        ? Number.parseInt(args[7]) // User-defined\n        : frames > cols // If more frames than cols...\n        ? Math.ceil(frames / cols) // ...then expect more rows\n        : 1; // Otherwise, default single row\n\n    result[name] = {\n      u,\n      v,\n      w,\n      h,\n      frames,\n      cols,\n      rows,\n      name,\n    };\n\n    if (opts.onprogress) {\n      opts.onprogress(progressLoaded / progressTotal, progressLoaded, progressTotal);\n    }\n  }\n  if (opts.onprogress) {\n    opts.onprogress(1, progressLoaded, progressLoaded);\n  }\n  return result;\n}\n", "/**\n * @typedef BMFontChar\n * @property {number} id The character id.\n * @property {number} x The left position of the character image in the texture.\n * @property {number} y The top position of the character image in the texture.\n * @property {number} width The width of the character image in the texture.\n * @property {number} height The height of the character image in the texture.\n * @property {number} xoffset How much the current position should be offset when\n *                            copying the image from the texture to the screen.\n * @property {number} yoffset How much the current position should be offset when\n *                            copying the image from the texture to the screen.\n * @property {number} xadvance How much the current position should be advanced\n *                             after drawing the character.\n * @property {number} page The texture page where the character image is found.\n * @property {number} chnl The texture channel where the character image is\n *                         found (1 = blue, 2 = green, 4 = red, 8 = alpha,\n *                         15 = all channels).\n *\n * @typedef BMFontKerning\n * @property {number} first The first character id.\n * @property {number} second The second character id.\n * @property {number} amount How much the x position should be adjusted when\n *                           drawing the second character immediately following\n *                           the first.\n *\n * @typedef BMFontData\n * @property {object} info              This tag holds information on how the\n *                                      font was generated.\n * @property {string} info.face         This is the name of the true type font.\n * @property {number} info.size         The size of the true type font.\n * @property {number} info.bold         The font is bold.\n * @property {number} info.italic\t    The font is italic.\n * @property {string} info.charset\t    The name of the OEM charset used (when\n *                                      not unicode).\n * @property {number} info.unicode\t    Set to 1 if it is the unicode charset.\n * @property {number} info.stretchH\t    The font height stretch in percentage.\n *                                      100% means no stretch.\n * @property {number} info.smooth\t    Set to 1 if smoothing was turned on.\n * @property {number} info.aa\t        The supersampling level used. 1 means no\n *                                      supersampling was used.\n * @property {number} info.padding\t    The padding for each character\n *                                      (up, right, down, left).\n * @property {number} info.spacing\t    The spacing for each character\n *                                      (horizontal, vertical).\n * @property {number} info.outline\t    The outline thickness for the characters.\n * @property {object} common            This tag holds information common to all\n *                                      characters.\n * @property {number} common.lineHeight This is the distance in pixels between\n *                                      each line of text.\n * @property {number} common.base\t    The number of pixels from the absolute\n *                                      top of the line to the base of the characters.\n * @property {number} common.scaleW\t    The width of the texture, normally used\n *                                      to scale the x pos of the character image.\n * @property {number} common.scaleH\t    The height of the texture, normally used\n *                                      to scale the y pos of the character image.\n * @property {number} common.pages\t    The number of texture pages included in\n *                                      the font.\n * @property {number} common.packed\t    Set to 1 if the monochrome characters\n *                                      have been packed into each of the texture\n *                                      channels. In this case alphaChnl describes\n *                                      what is stored in each channel.\n * @property {number} common.alphaChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.redChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.greenChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.blueChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {object} page              This tag gives the name of a texture\n *                                      file. There is one for each page in the font.\n * @property {number} page.id\t        The page id.\n * @property {number} page.file\t        The texture file name.\n * @property {Array<BMFontChar>} chars  This tag describes characters in the font.\n *                                      There is one for each included character\n *                                      in the font.\n * @property {Array<BMFontKerning>} kernings The kerning information is used to adjust\n *                                           the distance between certain characters,\n *                                           e.g. some characters should be placed\n *                                           closer to each other than others.\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<BMFontData>}\n */\nexport async function BMFontLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return BMFontLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return parse(new TextDecoder().decode(arrayBuffer));\n}\n\nconst TAG_PATTERN = /(.+?)\\s+(.*)/;\nconst LINE_PATTERN = /(.+)=(.+)/;\n\n/**\n * @param {string} string\n * @returns {BMFontData}\n */\nfunction parse(string) {\n  let lines = string.split('\\n');\n  let info = {};\n  let common = {};\n  let page = {};\n  let chars = [];\n  let kernings = [];\n  for (let line of lines) {\n    let array = TAG_PATTERN.exec(line);\n    if (!array) {\n      continue;\n    }\n    let [_, tag, props] = array;\n    switch (tag) {\n      case 'info':\n        parseBMLine(info, props);\n        break;\n      case 'common':\n        parseBMLine(common, props);\n        break;\n      case 'page':\n        parseBMLine(page, props);\n        break;\n      case 'chars':\n        // This only has count info. Ignore it.\n        break;\n      case 'char':\n        let char = {};\n        parseBMLine(char, props);\n        if ('id' in char) {\n          chars.push(char);\n        }\n        break;\n      case 'kerning':\n        let kerning = {};\n        parseBMLine(kerning, props);\n        if ('first' in kerning) {\n          kernings.push(kerning);\n        }\n        break;\n      default:\n      // Unknown tag.\n    }\n  }\n  let data = /** @type {BMFontData} */ ({\n    info,\n    common,\n    page,\n    chars,\n    kernings,\n  });\n  return data;\n}\n\nfunction parseBMLine(out, line) {\n  let props = line.split(/\\s+/);\n  for (let prop of props) {\n    let array = LINE_PATTERN.exec(prop);\n    if (!array) {\n      continue;\n    }\n    let [_, key, value] = array;\n    let result = JSON.parse(`[${value}]`);\n    if (result.length === 1) {\n      out[key] = result[0];\n    } else {\n      out[key] = result;\n    }\n  }\n}\n", "/**\n * @param {string|ArrayBuffer} src\n * @param {object} [opts]\n * @param {string} [opts.imageType]\n * @returns {Promise<HTMLImageElement>}\n */\nexport async function ImageLoader(src, opts = undefined) {\n  let { imageType = undefined } = opts || {};\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    if (typeof imageType === 'undefined') {\n      let i = src.lastIndexOf('.');\n      if (i < 0) {\n        throw new Error('Cannot load from url - unknown image type.');\n      } else {\n        imageType = 'image/' + src.slice(i + 1);\n      }\n    }\n    return ImageLoader(arrayBuffer, { ...opts, imageType });\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  if (typeof imageType === 'undefined') {\n    imageType = 'image/png';\n  }\n  let blob = new Blob([arrayBuffer], { type: imageType });\n  let imageUrl = URL.createObjectURL(blob);\n  let image = new Image();\n  return new Promise((resolve, reject) => {\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n    image.addEventListener('error', (e) => {\n      reject(e);\n    });\n    image.src = imageUrl;\n  });\n}\n", "/**\n * @typedef MeshData\n * @property {Float32Array} positions\n * @property {Float32Array} texcoords\n * @property {Float32Array} normals\n * @property {Uint16Array} indices\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<MeshData>}\n */\nexport async function OBJLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return OBJLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return parse(new TextDecoder().decode(arrayBuffer));\n}\n\n/**\n * @param {string} string\n * @returns {MeshData}\n */\nfunction parse(string) {\n  const vertexList = [];\n  const texcoordList = [];\n  const normalList = [];\n\n  const vertexIndices = [];\n  const texcoordIndices = [];\n  const normalIndices = [];\n\n  // # comments\n  const commentPattern = /^#.*/g;\n  // v float float float\n  const vertexPattern = /v\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n  // vn float float float\n  const normalPattern = /vn\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n  // vt float float float\n  const texcoordPattern = /vt\\s+(\\S+)\\s+(\\S+)/g;\n  // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n  const facePattern =\n    /f\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))(\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*)))?/g;\n  // f float float float\n  const faceVertexPattern = /f\\s+([^/\\s]+)\\s+([^/\\s]+)\\s+([^/\\s]+)/g;\n\n  let quad = false;\n  let result = null;\n  let x, y, z, w;\n\n  // Remove all comments\n  string = string.replace(commentPattern, '');\n\n  // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n  while ((result = vertexPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    z = Number.parseFloat(result[3]);\n    vertexList.push(x);\n    vertexList.push(y);\n    vertexList.push(z);\n  }\n\n  // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n  while ((result = normalPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    z = Number.parseFloat(result[3]);\n    normalList.push(x);\n    normalList.push(y);\n    normalList.push(z);\n  }\n\n  // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n  while ((result = texcoordPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    texcoordList.push(x);\n    texcoordList.push(y);\n  }\n\n  // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n  while ((result = facePattern.exec(string)) != null) {\n    // Vertex indices\n    x = Number.parseInt(result[2]);\n    if (Number.isNaN(x)) x = 1;\n    y = Number.parseInt(result[6]);\n    if (Number.isNaN(y)) y = 1;\n    z = Number.parseInt(result[10]);\n    if (Number.isNaN(z)) z = 1;\n    vertexIndices.push(x);\n    vertexIndices.push(y);\n    vertexIndices.push(z);\n\n    // Normal indices\n    x = Number.parseInt(result[4]);\n    if (Number.isNaN(x)) {\n      // No UVs.\n      x = Number.parseInt(result[3]);\n      y = Number.parseInt(result[7]);\n      z = Number.parseInt(result[11]);\n      normalIndices.push(x);\n      normalIndices.push(y);\n      normalIndices.push(z);\n\n      texcoordIndices.push(1);\n      texcoordIndices.push(1);\n      texcoordIndices.push(1);\n    } else {\n      // Maybe UVs.\n      y = Number.parseInt(result[8]);\n      if (Number.isNaN(y)) y = 1;\n      z = Number.parseInt(result[12]);\n      if (Number.isNaN(z)) z = 1;\n      normalIndices.push(x);\n      normalIndices.push(y);\n      normalIndices.push(z);\n\n      // UV indices\n      x = Number.parseInt(result[3]);\n      if (Number.isNaN(x)) x = 1;\n      y = Number.parseInt(result[7]);\n      if (Number.isNaN(y)) y = 1;\n      z = Number.parseInt(result[11]);\n      if (Number.isNaN(z)) z = 1;\n      texcoordIndices.push(x);\n      texcoordIndices.push(y);\n      texcoordIndices.push(z);\n    }\n\n    // Quad face\n    if (typeof result[13] !== 'undefined') {\n      // Vertex indices\n      w = Number.parseInt(result[15]);\n      if (Number.isNaN(w)) w = 1;\n      vertexIndices.push(w);\n\n      // Normal indices\n      w = Number.parseInt(result[17]);\n      if (Number.isNaN(w)) {\n        // No UVs.\n        w = Number.parseInt(result[16]);\n        normalIndices.push(w);\n        texcoordIndices.push(1);\n      } else {\n        // Maybe UVs.\n        normalIndices.push(w);\n\n        w = Number.parseInt(result[16]);\n        texcoordIndices.push(w);\n      }\n\n      quad = true;\n    }\n  }\n\n  // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n  while ((result = faceVertexPattern.exec(string)) != null) {\n    // Vertex indices\n    x = Number.parseInt(result[2]);\n    y = Number.parseInt(result[6]);\n    z = Number.parseInt(result[10]);\n    vertexIndices.push(x);\n    vertexIndices.push(y);\n    vertexIndices.push(z);\n\n    // UV indices\n    texcoordIndices.push(1);\n    texcoordIndices.push(1);\n    texcoordIndices.push(1);\n\n    // Normal indices\n    normalIndices.push(1);\n    normalIndices.push(1);\n    normalIndices.push(1);\n\n    // Quad face\n    if (typeof result[13] !== 'undefined') {\n      // Vertex indices\n      w = Number.parseInt(result[14]);\n      vertexIndices.push(w);\n\n      // UV indices\n      texcoordIndices.push(1);\n      // Normal indices\n      normalIndices.push(1);\n\n      quad = true;\n    }\n  }\n\n  let index, size;\n\n  size = vertexIndices.length;\n  const positions = new Float32Array(size * 3);\n  for (let i = 0; i < size; ++i) {\n    index = vertexIndices[i] - 1;\n    positions[i * 3 + 0] = vertexList[index * 3 + 0];\n    positions[i * 3 + 1] = vertexList[index * 3 + 1];\n    positions[i * 3 + 2] = vertexList[index * 3 + 2];\n  }\n\n  size = texcoordIndices.length;\n  const texcoords = new Float32Array(size * 2);\n  for (let i = 0; i < size; ++i) {\n    index = texcoordIndices[i] - 1;\n    texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n    texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n  }\n\n  size = normalIndices.length;\n  const normals = new Float32Array(size * 3);\n  for (let i = 0; i < size; ++i) {\n    index = normalIndices[i] - 1;\n    normals[i * 3 + 0] = normalList[index * 3 + 0];\n    normals[i * 3 + 1] = normalList[index * 3 + 1];\n    normals[i * 3 + 2] = normalList[index * 3 + 2];\n  }\n\n  // Must be either unsigned short or unsigned byte.\n  size = vertexIndices.length;\n  const indices = new Uint16Array(size);\n  for (let i = 0; i < size; ++i) {\n    indices[i] = i;\n  }\n\n  if (quad) {\n    console.warn('WebGL does not support quad faces, only triangles.');\n  }\n\n  return {\n    positions,\n    texcoords,\n    normals,\n    indices,\n  };\n}\n", "/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<string>}\n */\nexport async function TextLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return TextLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return new TextDecoder().decode(arrayBuffer);\n}\n", "/**\n * @param {ArrayBuffer|Uint8Array|string} src\n * @param {object} opts\n * @param {AudioContext} opts.audioContext\n * @returns {Promise<AudioBuffer>}\n */\nexport async function AudioBufferLoader(src, opts) {\n  const { audioContext } = opts || {};\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return AudioBufferLoader(arrayBuffer, { audioContext });\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  let audioArrayBuffer = new ArrayBuffer(arrayBuffer.byteLength);\n  new Uint8Array(audioArrayBuffer).set(arrayBuffer);\n  let audioBuffer = await audioContext.decodeAudioData(audioArrayBuffer);\n  return audioBuffer;\n}\n", "window.addEventListener('error', error, true);\nwindow.addEventListener('unhandledrejection', error, true);\n\nexport function error(e) {\n  if (e instanceof PromiseRejectionEvent) {\n    window.alert(e.reason.stack);\n  } else if (e instanceof ErrorEvent) {\n    window.alert(e.error.stack);\n  } else {\n    window.alert(JSON.stringify(e));\n  }\n}\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import { mat4, quat, vec3, vec4 } from 'gl-matrix';\n\nconst UP = vec3.fromValues(0, 1, 0);\n\nexport function panTo(viewMatrix, x, y, z = 0, dt = 1) {\n  let position = vec3.create();\n  mat4.getTranslation(position, viewMatrix);\n  let translation = vec3.fromValues(\n    (x - position[0]) * dt,\n    (y - position[1]) * dt,\n    (z - position[2]) * dt\n  );\n  mat4.translate(viewMatrix, viewMatrix, translation);\n}\n\nexport function lookAt(viewMatrix, x, y, z = 0, dt = 1) {\n  let position = vec3.create();\n  let rotation = quat.create();\n  mat4.getTranslation(position, viewMatrix);\n  mat4.getRotation(rotation, viewMatrix);\n  let target = vec3.fromValues(x, y, z);\n\n  mat4.lookAt(viewMatrix, position, target, UP);\n\n  let targetRotation = quat.create();\n  mat4.getRotation(targetRotation, viewMatrix);\n  quat.slerp(rotation, rotation, targetRotation, dt);\n\n  mat4.fromRotationTranslation(viewMatrix, rotation, position);\n}\n\n/**\n * Gets a directional ray in the world space from the given normalized\n * screen coordinates and camera matrices.\n *\n * NOTE: In addition to some scaling, the y component from a pointer's\n * position usually has to be flipped to match the normalized screen\n * coordinate space, which assumes a range of [-1, 1] for both x and y,\n * where (0, 0) is the center and (-1, -1) is the bottom-left of the\n * screen.\n *\n * ### Typical Device Screen Coordinate Space:\n * ```\n * (0,0)------------(w,0)\n *    |               |\n *    |   (w/2,h/2)   |\n *    |               |\n * (0,w)------------(w,h)\n * ```\n *\n * ### Normalized Screen Coordinate Space:\n * ```\n * (-1,+1)---------(+1,+1)\n *    |               |\n *    |     (0,0)     |\n *    |               |\n * (-1,-1)---------(+1,-1)\n * ```\n *\n * ### Example Conversion from Device to Normalized:\n * ```\n * let normalizedScreenX = (canvasClientX / canvasWidth) * 2 - 1;\n * let normalizedScreenY = 1 - (canvasClientY / canvasHeight) * 2;\n * ```\n *\n * @param {vec3} out The output vector.\n * @param {number} normalizedScreenCoordX The X screen coordinate normalized to [-1, 1], where -1 is the left side of the screen.\n * @param {number} normalizedScreenCoordY The Y screen coordinate normalized to [-1, 1], where -1 is the bottom side of the screen.\n * @param {mat4} projectionMatrix The projection matrix of the world camera.\n * @param {mat4} viewMatrix The view matrix of the world camera.\n * @param {boolean} [normalized=false] Whether to normalize the result. Usually true for non-orthogonal projections.\n * @returns {vec3} The ray direction in the world space. By default, this is not normalized.\n */\nexport function screenToWorldRay(\n  out,\n  normalizedScreenCoordX,\n  normalizedScreenCoordY,\n  projectionMatrix,\n  viewMatrix,\n  normalized = false\n) {\n  // https://antongerdelan.net/opengl/raycasting.html\n  // To homogeneous clip coords\n  let v = vec4.fromValues(\n    normalizedScreenCoordX,\n    normalizedScreenCoordY,\n    -1,\n    1\n  );\n  // To camera coords\n  let m = mat4.create();\n  mat4.invert(m, projectionMatrix);\n  vec4.transformMat4(v, v, m);\n  v[2] = -1;\n  v[3] = 0;\n  // To world coords\n  mat4.invert(m, viewMatrix);\n  vec4.transformMat4(v, v, m);\n  out[0] = v[0];\n  out[1] = v[1];\n  out[2] = v[2];\n  // Normalized as directional ray\n  if (normalized) {\n    vec3.normalize(out, out);\n  }\n  return out;\n}\n", "export class Camera {\n  constructor(projectionMatrix, viewMatrix) {\n    this.projectionMatrix = projectionMatrix;\n    this.viewMatrix = viewMatrix;\n  }\n\n  /**\n   * @abstract\n   * @param {number} [viewportWidth]\n   * @param {number} [viewportHeight]\n   * @returns {Camera}\n   */\n  // eslint-disable-next-line no-unused-vars\n  resize(viewportWidth = undefined, viewportHeight = undefined) {\n    return this;\n  }\n}\n", "import { mat4 } from 'gl-matrix';\nimport { Camera } from './Camera.js';\n\nconst DEFAULT_FOVY = Math.PI / 3;\n\nexport class PerspectiveCamera extends Camera {\n  constructor(fieldOfView = DEFAULT_FOVY, near = 0.1, far = 1000) {\n    super(mat4.create(), mat4.create());\n\n    this.fieldOfView = Number(fieldOfView);\n    this.clippingPlane = {\n      near: Number(near),\n      far: Number(far),\n    };\n  }\n\n  /** @override */\n  resize(viewportWidth = undefined, viewportHeight = undefined) {\n    const aspectRatio =\n      typeof viewportWidth === 'undefined' ? 1 : viewportWidth / viewportHeight;\n    const { near, far } = this.clippingPlane;\n    mat4.perspective(\n      this.projectionMatrix,\n      this.fieldOfView,\n      aspectRatio,\n      near,\n      far\n    );\n    return this;\n  }\n}\n", "import { mat4 } from 'gl-matrix';\nimport { Camera } from './Camera.js';\n\nexport class OrthographicCamera extends Camera {\n  /**\n   * @param {number} [left]\n   * @param {number} [top]\n   * @param {number} [right]\n   * @param {number} [bottom]\n   * @param {number} [near]\n   * @param {number} [far]\n   */\n  constructor(\n    left = undefined,\n    top = undefined,\n    right = undefined,\n    bottom = undefined,\n    near = -1000,\n    far = 1000\n  ) {\n    super(mat4.create(), mat4.create());\n\n    this.orthoBounds = {\n      left: typeof left === 'undefined' ? undefined : Number(left),\n      top: typeof top === 'undefined' ? undefined : Number(top),\n      right: typeof right === 'undefined' ? undefined : Number(right),\n      bottom: typeof bottom === 'undefined' ? undefined : Number(bottom),\n    };\n    this.clippingPlane = {\n      near: Number(near),\n      far: Number(far),\n    };\n  }\n\n  /**\n   * If both the bounds and viewport dimensions are defined, the orthographic\n   * projection will be set the defined bounds adjusted with respect to\n   * the aspect ratio. This is usually the desired behavior.\n   *\n   * If the bounds are `undefined`, the orthographic projection will\n   * be set to the viewport dimensions. This is useful for pixel-perfect\n   * projections.\n   *\n   * If viewport dimensions are `undefined`, the orthographic projection\n   * will only use the defined bounds. This is useful if you are already\n   * performing your own calculations for the bounds or desire a static\n   * projection.\n   *\n   * @override\n   * @param {number} [viewportWidth]\n   * @param {number} [viewportHeight]\n   */\n  resize(viewportWidth = undefined, viewportHeight = undefined) {\n    const { near, far } = this.clippingPlane;\n    const { left, top, right, bottom } = this.orthoBounds;\n\n    let projectionMatrix = this.projectionMatrix;\n    let hasViewport = typeof viewportWidth !== 'undefined';\n    let hasBounds = typeof left !== 'undefined';\n\n    if (hasViewport) {\n      if (hasBounds) {\n        // Use the defined bounds with respect to the viewport aspect ratio\n        const aspectRatio = viewportWidth / viewportHeight;\n        mat4.ortho(\n          projectionMatrix,\n          left * aspectRatio,\n          right * aspectRatio,\n          bottom,\n          top,\n          near,\n          far\n        );\n      } else {\n        // Use the viewport dimensions as bounds\n        mat4.ortho(\n          projectionMatrix,\n          0,\n          viewportWidth,\n          viewportHeight,\n          0,\n          near,\n          far\n        );\n      }\n    } else {\n      if (hasBounds) {\n        // Use the defined bounds as-is\n        mat4.ortho(projectionMatrix, left, right, bottom, top, near, far);\n      } else {\n        // Use default bounds (since nothing else exists)\n        mat4.ortho(projectionMatrix, -1, 1, 1, -1, -1, 1);\n      }\n    }\n    return this;\n  }\n}\n", "import { vec3, mat4 } from 'gl-matrix';\n\nconst TO_RAD_FACTOR = Math.PI / 180;\n\n/**\n * A camera controller that behaves like a traditional first person camera.\n * Pitch is restricted to prevent gimbal lock and roll is ignored.\n *\n * NOTE: Don't forget to lock your pointer, i.e. `canvas.requestPointerLock()`.\n */\nexport class FirstPersonCameraController {\n  constructor(opts = { locky: false }) {\n    this.locky = opts.locky;\n\n    this.position = vec3.create();\n    this.forward = vec3.fromValues(0, 0, -1);\n    this.right = vec3.fromValues(1, 0, 0);\n    this.up = vec3.fromValues(0, 1, 0);\n\n    this.forwardAmount = 0;\n    this.rightAmount = 0;\n    this.upAmount = 0;\n\n    this.pitch = 0;\n    this.yaw = -90;\n  }\n\n  look(dx, dy, dt = 1) {\n    // NOTE: Increase sensitivity to relatively match movement.\n    dt *= 1000;\n    this.pitch = Math.min(89.9, Math.max(-89.9, this.pitch + dy * dt));\n    this.yaw = (this.yaw + dx * dt) % 360;\n    return this;\n  }\n\n  move(forward, right = 0, up = 0, dt = 1) {\n    this.forwardAmount += forward * dt;\n    this.rightAmount += right * dt;\n    this.upAmount += up * dt;\n    return this;\n  }\n\n  apply(viewMatrix) {\n    let {\n      position,\n      forward,\n      right,\n      up,\n      forwardAmount,\n      rightAmount,\n      upAmount,\n      pitch,\n      yaw,\n    } = this;\n\n    // Calculate forward and right vectors\n    let rady = yaw * TO_RAD_FACTOR;\n    let radp = pitch * TO_RAD_FACTOR;\n    let cosy = Math.cos(rady);\n    let cosp = Math.cos(radp);\n    let siny = Math.sin(rady);\n    let sinp = Math.sin(radp);\n    let dx = cosy * cosp;\n    let dy = sinp;\n    let dz = siny * cosp;\n\n    // Set forward for move vector\n    vec3.normalize(forward, vec3.set(forward, dx, this.locky ? 0 : dy, dz));\n    vec3.normalize(right, vec3.cross(right, forward, up));\n\n    let move = vec3.create();\n    // Move forward\n    vec3.scale(move, forward, forwardAmount);\n    vec3.add(position, position, move);\n    // Move right\n    vec3.scale(move, right, rightAmount);\n    vec3.add(position, position, move);\n    // Move up\n    vec3.scale(move, up, upAmount);\n    vec3.add(position, position, move);\n    // Reset movement\n    this.forwardAmount = 0;\n    this.rightAmount = 0;\n    this.upAmount = 0;\n\n    // Reset forward for look vector\n    if (this.locky) vec3.set(forward, dx, dy, dz);\n\n    let target = vec3.add(move, position, forward);\n    mat4.lookAt(viewMatrix, position, target, up);\n    return viewMatrix;\n  }\n}\n", "const MAX_DEPTH_LEVEL = 100;\n\n/**\n * @typedef {Number} SceneNode\n *\n * @typedef SceneNodeInfo\n * @property {SceneNode} parent The parent node. If the node does not have a parent,\n * it will be 0.\n * @property {Array<SceneNode>} children The list of child nodes.\n *\n * @callback WalkCallback Called for each node, before traversing its children.\n * @param {SceneNode} sceneNode The current scene node.\n * @param {SceneGraph} sceneGraph The current scene graph.\n * @returns {WalkBackCallback|Boolean} If false, the walk will skip\n * the current node's children and all of its descendents. If a function,\n * it will be called after traversing down all of its children.\n *\n * @callback WalkBackCallback Called if returned by {@link WalkCallback}, after\n * traversing the current node's children.\n * @param {SceneNode} sceneNode The current scene node.\n * @param {SceneGraph} sceneGraph The current scene graph.\n *\n * @callback WalkChildrenCallback Called for each level of children, before\n * traversing them. This is usually used to determine visit order.\n * @param {Array<SceneNode>} childNodes A list of child nodes to be visited.\n * @param {SceneNode} parentNode The current parent node of these children.\n * @param {SceneGraph} sceneGraph The current scene graph.\n * @returns {Array<SceneNode>} The list of children to traverse for this parent.\n */\n\n/**\n * A tree-like graph of nodes with n-children.\n */\nexport class SceneGraph {\n  /**\n   * Constructs an empty scene graph.\n   */\n  constructor() {\n    this.nodes = {};\n    this.roots = [];\n\n    this._nextAvailableSceneNodeId = 1;\n  }\n\n  /**\n   * Creates a scene node in the scene graph.\n   *\n   * @param {SceneNode} [parentNode] The parent node for the created scene\n   * node.\n   * @returns {SceneNode} The created scene node.\n   */\n  createSceneNode(parentNode = undefined) {\n    let sceneNode = this._nextAvailableSceneNodeId++;\n    let info = createSceneNodeInfo();\n    this.nodes[sceneNode] = info;\n    attach(parentNode, sceneNode, this);\n    return sceneNode;\n  }\n\n  /**\n   * Creates multiple scene nodes in the scene graph.\n   *\n   * @param {Number} count The number of scene nodes to create.\n   * @param {SceneNode} [parentNode] The parent node for the created scene\n   * nodes.\n   * @returns {Array<SceneNode>} A list of created scene nodes.\n   */\n  createSceneNodes(count, parentNode = undefined) {\n    let result = [];\n    for (let i = 0; i < count; ++i) {\n      result.push(this.createSceneNode(parentNode));\n    }\n    return result;\n  }\n\n  /**\n   * Deletes a scene node from the scene graph, along with all\n   * of its descendents.\n   *\n   * @param {SceneNode} sceneNode The scene node to remove.\n   */\n  deleteSceneNode(sceneNode) {\n    if (sceneNode in this.nodes) {\n      let info = this.nodes[sceneNode];\n      detach(info.parent, sceneNode, this);\n      walkImpl(this, sceneNode, 0, walkDeleteCallback);\n    } else {\n      throw new Error('Cannot delete non-existant scene node for scene graph.');\n    }\n  }\n\n  /**\n   * Deletes all given scene nodes from the scene graph, along with all\n   * of their descendents.\n   *\n   * @param {Array<SceneNode>} sceneNodes A list of scene nodes to remove.\n   */\n  deleteSceneNodes(sceneNodes) {\n    for (let sceneNode of sceneNodes) {\n      this.deleteSceneNode(sceneNode);\n    }\n  }\n\n  /**\n   * Get the scene node's info.\n   *\n   * @param {SceneNode} sceneNode The scene node to get info for.\n   * @returns {SceneNodeInfo} The info for the given scene node.\n   */\n  getSceneNodeInfo(sceneNode) {\n    return this.nodes[sceneNode];\n  }\n\n  /**\n   * Changes the parent of the scene node with the new parent node in\n   * the graph.\n   *\n   * @param {SceneNode} sceneNode The target scene node to change.\n   * @param {SceneNode} parentNode The scene node to set as the parent.\n   */\n  parentSceneNode(sceneNode, parentNode) {\n    let info = this.nodes[sceneNode];\n    detach(info.parent, sceneNode, this);\n    attach(parentNode, sceneNode, this);\n  }\n\n  /**\n   * Replaces the scene node with the new replacement node in the graph,\n   * inheriting its parent and children.\n   *\n   * @param {SceneNode} sceneNode The target scene node to replace.\n   * @param {SceneNode} replacementNode The scene node to replace with. If falsey,\n   * it will remove the target scene node and the target's parent will adopt\n   * its grandchildren. If the target did not have parents, the grandchildren will\n   * become root nodes in the graph.\n   */\n  replaceSceneNode(sceneNode, replacementNode) {\n    let info = this.nodes[sceneNode];\n    let parentNode = info.parent;\n    let grandChildren = info.children.slice();\n\n    // Remove the target node from graph\n    detach(parentNode, sceneNode, this);\n\n    // Begin grafting the grandchildren by removing them...\n    info.children.length = 0;\n\n    if (replacementNode) {\n      // Reattach all grandchildren to new replacement node.\n      let replacementInfo = this.nodes[replacementNode];\n      let replacementParent = replacementInfo.parent;\n\n      // Remove replacement node from previous parent\n      detach(replacementParent, replacementNode, this);\n\n      // ...and graft them back.\n      replacementInfo.children.push(...grandChildren);\n\n      // And reattach target parent to new child.\n      attach(parentNode, replacementNode, this);\n    } else {\n      // Reattach all grandchildren to target parent...\n      if (parentNode) {\n        //...as regular children.\n        let parentInfo = this.nodes[parentNode];\n        parentInfo.children.push(...grandChildren);\n      } else {\n        //...as root children.\n        this.roots.push(...grandChildren);\n      }\n    }\n\n    // ...and repair their parent relations.\n    for (let childNode of grandChildren) {\n      this.nodes[childNode].parent = parentNode;\n    }\n  }\n\n  /**\n   * Walks through every child node in the graph.\n   *\n   * @param {WalkCallback} callback The function called for each node\n   * in the graph, in ordered traversal from parent to child.\n   * @param {Object} [opts={}] Any additional options.\n   * @param {SceneNode|Array<SceneNode>} [opts.from] The parent node to\n   * start walking from, inclusive. By default, it will start from the root\n   * nodes.\n   * @param {WalkChildrenCallback} [opts.childfilter] The function called before\n   * walking through the children. This is usually used to determine the\n   * visiting order.\n   */\n  walk(callback, opts = {}) {\n    const { from = undefined, childFilter = undefined } = opts;\n\n    let fromNodes;\n    if (!from) fromNodes = this.roots;\n    else if (!Array.isArray(from)) fromNodes = [from];\n    else fromNodes = from;\n\n    if (childFilter) fromNodes = childFilter(fromNodes, 0, this);\n    for (let fromNode of fromNodes) {\n      walkImpl(this, fromNode, 0, callback, childFilter);\n    }\n  }\n}\n\n/**\n * @param {SceneNode} key The scene node handle.\n * @returns {SceneNodeInfo} The scene node metadata.\n */\nfunction createSceneNodeInfo() {\n  return {\n    parent: 0,\n    children: [],\n  };\n}\n\n/**\n * Attaches a child node to a parent in the scene graph. If parentNode is\n * null, then it will attach as a root node.\n *\n * @param {SceneNode} parentNode The parent node to attach to. Can be null.\n * @param {SceneNode} childNode The child node to attach from.\n * @param {SceneGraph} sceneGraph The scene graph to attach in.\n */\nfunction attach(parentNode, childNode, sceneGraph) {\n  if (parentNode) {\n    // Has new parent; attach to parent. It is now in the graph.\n    sceneGraph.nodes[parentNode].children.push(childNode);\n    sceneGraph.nodes[childNode].parent = parentNode;\n  } else {\n    // No parent; move to root. It is now in the graph.\n    sceneGraph.roots.push(childNode);\n    sceneGraph.nodes[childNode].parent = 0;\n  }\n}\n\n/**\n * Detaches a child node from its parent in the scene graph. If parentNode is\n * null, then it will detach as a root node.\n *\n * @param {SceneNode} parentNode The parent node to attach to. Can be null.\n * @param {SceneNode} childNode The child node to attach from.\n * @param {SceneGraph} sceneGraph The scene graph to attach in.\n */\nfunction detach(parentNode, childNode, sceneGraph) {\n  if (parentNode) {\n    // Has parent; detach from parent. It is now a free node.\n    let children = sceneGraph.nodes[parentNode].children;\n    let childIndex = children.indexOf(childNode);\n    children.splice(childIndex, 1);\n    sceneGraph.nodes[childNode].parentNode = 0;\n  } else {\n    // No parent; remove from root. It is now a free node.\n    let roots = sceneGraph.roots;\n    let rootIndex = roots.indexOf(childNode);\n    roots.splice(rootIndex, 1);\n    sceneGraph.nodes[childNode].parentNode = 0;\n  }\n}\n\n/**\n * Walk down from the parent and through all its descendents.\n *\n * @param {SceneGraph} sceneGraph The scene graph containing the nodes to be visited.\n * @param {SceneNode} parentNode The parent node to start walking from.\n * @param {Number} level The current call depth level. This is used to limit the call stack.\n * @param {WalkCallback} nodeCallback The function called on each visited node.\n * @param {WalkChildrenCallback} [filterCallback] The function called before\n * walking through the children. This is usually used to determine the visiting order.\n */\nfunction walkImpl(\n  sceneGraph,\n  parentNode,\n  level,\n  nodeCallback,\n  filterCallback = undefined\n) {\n  if (level >= MAX_DEPTH_LEVEL) return;\n\n  let result = nodeCallback(parentNode, sceneGraph);\n  if (result === false) return;\n\n  let parentInfo = sceneGraph.nodes[parentNode];\n  let nextNodes = filterCallback\n    ? filterCallback(parentInfo.children, parentNode, sceneGraph)\n    : parentInfo.children;\n\n  for (let childNode of nextNodes) {\n    walkImpl(sceneGraph, childNode, level + 1, nodeCallback, filterCallback);\n  }\n\n  if (typeof result === 'function') {\n    result(parentNode, sceneGraph);\n  }\n}\n\nfunction walkDeleteCallback(sceneNode, sceneGraph) {\n  delete sceneGraph.nodes[sceneNode];\n}\n", "/**\n * @template T\n */\nexport class ComponentClass {\n    /**\n     * @param {string} name \n     * @param {() => T} newCallback\n     * @param {(component: T) => void} [deleteCallback] \n     */\n    constructor(name, newCallback = () => null, deleteCallback = () => { }) {\n        this.name = name;\n        this.new = newCallback;\n        this.delete = deleteCallback;\n    }\n}\n", "import { ComponentClass } from './ComponentClass';\n\n/**\n * @typedef {Record<number, object>} ComponentInstanceMap\n * @typedef {Record<string, ComponentInstanceMap>} ComponentClassMap\n * @typedef {number} EntityId\n * @typedef {string} ComponentName\n */\n\n/**\n * @template {ComponentClass<any>[]} T\n * @typedef {{[K in keyof T]: T[K] extends ComponentClass<infer V> ? V : never}} ComponentInstancesOf<T>\n */\n\n/**\n * @param {EntityManager} entityManager \n * @param {ComponentName} componentName\n * @returns {ComponentInstanceMap} A map of entity ids to component instance data.\n */\nfunction resolveComponentInstanceMap(entityManager, componentName) {\n    // @ts-ignore\n    let components = entityManager.components;\n    if (!(componentName in components)) {\n        /** @type {ComponentInstanceMap} */\n        let map = {};\n        components[componentName] = map;\n        return map;\n    } else {\n        return components[componentName];\n    }\n}\n\n/**\n * @param {EntityManager} entityManager \n * @param {ComponentName} componentName\n * @returns {ComponentInstanceMap} A map of entity ids to component instance data.\n */\nfunction resetComponentInstanceMap(entityManager, componentName) {\n    // @ts-ignore\n    let components = entityManager.components;\n    /** @type {ComponentInstanceMap} */\n    let map = {};\n    components[componentName] = map;\n    return map;\n}\n\n/**\n * @template T\n * @param {EntityManager} entityManager \n * @param {EntityId} entityId \n * @param {ComponentClass<T>} componentClass\n * @param {T} instance\n * @returns {T}\n */\nfunction attachComponent(entityManager, entityId, componentClass, instance) {\n    let componentName = componentClass.name;\n    let instanceMap = resolveComponentInstanceMap(entityManager, componentName);\n    instanceMap[entityId] = instance;\n    return instance;\n}\n\n/**\n * @template T\n * @param {EntityManager} entityManager \n * @param {EntityId} entityId \n * @param {ComponentClass<T>} componentClass\n */\nfunction detachComponent(entityManager, entityId, componentClass) {\n    let componentName = componentClass.name;\n    let instanceMap = resolveComponentInstanceMap(entityManager, componentName);\n    let instance = instanceMap[entityId];\n    delete instanceMap[entityId];\n    componentClass.delete(instance);\n}\n\n/**\n * @template T\n * @param {EntityManager} entityManager\n * @param {ComponentClass<T>} componentClass\n */\nfunction clearComponents(entityManager, componentClass) {\n    let componentName = componentClass.name;\n    let instanceMap = resolveComponentInstanceMap(entityManager, componentName);\n    let instances = Object.values(instanceMap);\n    resetComponentInstanceMap(entityManager, componentName);\n    for(let instance of instances) {\n        componentClass.delete(instance);\n    }\n}\n\nconst NEXT_AVAILABLE_ENTITY_ID = Symbol('nextAvailableEntityId');\n\n/**\n * @param {EntityManager} entityManager \n * @returns {EntityId}\n */\nfunction nextAvailableEntityId(entityManager) {\n    return ++entityManager[NEXT_AVAILABLE_ENTITY_ID];\n}\n\nexport class EntityManager {\n    constructor() {\n        /**\n         * @protected\n         * @type {ComponentClassMap}\n         */\n        this.components = {};\n        /** @type {EntityId} */\n        this[NEXT_AVAILABLE_ENTITY_ID] = 1;\n        /**\n         * @protected\n         * @type {Array<[string, ...any]>}\n         */\n        this.queue = [];\n    }\n\n    flush() {\n        while (this.queue.length > 0) {\n            let [type, ...args] = this.queue.shift();\n            switch (type) {\n                case 'attach': {\n                    let [entityId, componentClass, instance] = args;\n                    attachComponent(this, entityId, componentClass, instance);\n                } break;\n                case 'detach': {\n                    let [entityId, componentClass] = args;\n                    detachComponent(this, entityId, componentClass);\n                } break;\n                case 'clear': {\n                    let [componentClass] = args;\n                    clearComponents(this, componentClass);\n                } break;\n            }\n        }\n    }\n\n    /**\n     * @template {ComponentClass<any>[]}T\n     * @param {T} componentClasses \n     * @returns {[EntityId, ...ComponentInstancesOf<T>]}\n     */\n    createAndAttach(...componentClasses) {\n        let entityId = nextAvailableEntityId(this);\n        let result = /** @type {[EntityId, ...ComponentInstancesOf<T>]} */ (/** @type {unknown} */ ([entityId]));\n        for (let componentClass of componentClasses) {\n            let instance = this.attach(entityId, componentClass);\n            result.push(instance);\n        }\n        return result;\n    }\n\n    /**\n     * @returns {EntityId}\n     */\n    create() {\n        return nextAvailableEntityId(this);\n    }\n\n    /**\n     * @param {EntityId} entityId \n     */\n    destroy(entityId) {\n        for (let instanceMap of Object.values(this.components)) {\n            if (entityId in instanceMap) {\n                delete instanceMap[entityId];\n            }\n        }\n    }\n\n    /**\n     * @param {EntityId} entityId \n     */\n    exists(entityId) {\n        for (let instanceMap of Object.values(this.components)) {\n            if (entityId in instanceMap) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass\n     * @returns {T}\n     */\n    attach(entityId, componentClass) {\n        let instance = componentClass.new();\n        this.queue.push(['attach', entityId, componentClass, instance]);\n        return instance;\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     * @returns {T}\n     */\n    attachImmediately(entityId, componentClass) {\n        let instance = componentClass.new();\n        return attachComponent(this, entityId, componentClass, instance);\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass\n     */\n    detach(entityId, componentClass) {\n        this.queue.push(['detach', entityId, componentClass]);\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     */\n    detachImmediately(entityId, componentClass) {\n        detachComponent(this, entityId, componentClass);\n    }\n\n    /**\n     * @template T\n     * @param {ComponentClass<T>} componentClass \n     */\n    clear(componentClass) {\n        this.queue.push(['clear', componentClass]);\n    }\n\n    /**\n     * @param {ComponentClass<any>} componentClass \n     */\n    clearImmediately(componentClass) {\n        clearComponents(this, componentClass);\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     * @returns {T}\n     */\n    get(entityId, componentClass) {\n        let componentName = componentClass.name;\n        let instanceMap = resolveComponentInstanceMap(this, componentName);\n        if (instanceMap) {\n            return null;\n        } else {\n            return instanceMap[entityId] || null;\n        }\n    }\n\n    /**\n     * @param {ComponentClass<?>} componentClass \n     * @returns {number}\n     */\n    count(componentClass) {\n        let componentName = componentClass.name;\n        let instanceMap = resolveComponentInstanceMap(this, componentName);\n        if (instanceMap) {\n            return 0;\n        } else {\n            return Object.keys(instanceMap).length;\n        }\n    }\n\n    reset() {\n        this.components = {};\n        this[NEXT_AVAILABLE_ENTITY_ID] = 1;\n        this.queue.length = 0;\n    }\n}\n\n/**\n * @template {ComponentClass<any>[]} T\n */\nexport class EntityTemplate {\n    /**\n     * @param {T} componentClasses \n     */\n    constructor(...componentClasses) {\n        /** @private */\n        this.componentClasses = componentClasses;\n    }\n\n    /**\n     * @param {EntityManager} entityManager\n     * @returns {[EntityId, ...ComponentInstancesOf<T>]}\n     */\n    create(entityManager) {\n        let entityId = nextAvailableEntityId(entityManager);\n        let result = /** @type {[EntityId, ...ComponentInstancesOf<T>]} */ (/** @type {unknown} */ ([entityId]));\n        for (let componentClass of this.componentClasses) {\n            let instance = entityManager.attach(entityId, componentClass);\n            result.push(instance);\n        }\n        return result;\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @param {EntityId} entityId \n     */\n    destroy(entityManager, entityId) {\n        for (let componentClass of this.componentClasses) {\n            entityManager.detach(entityId, componentClass);\n        }\n    }\n}\n\n/**\n * @template {ComponentClass<any>[]} T\n */\nexport class EntityQuery {\n    /**\n     * @param {T} selectors \n     */\n    constructor(...selectors) {\n        /** @private */\n        this.selectors = selectors;\n    }\n    \n    /**\n     * @param {EntityManager} entityManager \n     * @returns {number}\n     */\n    count(entityManager) {\n        let count = 0;\n        let iter = this.findAll(entityManager);\n        while(!iter.next().done) {\n            ++count;\n        }\n        return count;\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @returns {[EntityId, ...ComponentInstancesOf<T>]}\n     */\n    find(entityManager) {\n        let entities = this.findAll(entityManager);\n        let result = entities.next();\n        if (result.done) {\n            // @ts-ignore\n            return [];\n        } else {\n            return result.value;\n        }\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @returns {Generator<[EntityId, ...ComponentInstancesOf<T>]>}\n     */\n    *findAll(entityManager) {\n        if (this.selectors.length <= 0) {\n            return;\n        }\n        let componentClass = this.selectors[0];\n        let componentName = componentClass.name;\n        let instanceMap = resolveComponentInstanceMap(entityManager, componentName);\n        let result = /** @type {[EntityId, ...ComponentInstancesOf<T>]} */ (new Array(this.selectors.length + 1));\n        for (let key of Object.keys(instanceMap)) {\n            let entityId = Number(key);\n            let flag = true;\n            result[0] = entityId;\n            let index = 1;\n            for (let otherClass of this.selectors) {\n                let otherName = otherClass.name;\n                let otherMap = resolveComponentInstanceMap(entityManager, otherName);\n                if (!(entityId in otherMap)) {\n                    flag = false;\n                    break;\n                }\n                let other = otherMap[entityId];\n                result[index++] = other;\n            }\n            if (flag) {\n                yield result;\n            }\n        }\n    }\n}\n", "/**\n * @template T\n */\nexport class Topic {\n\n    /**\n     * @abstract\n     * @param {T} [attachment] \n     */\n    dispatch(attachment = null) {}\n\n    /**\n     * @abstract\n     * @param {T} [attachment] \n     */\n    dispatchImmediately(attachment = null) {}\n\n    /**\n     * @abstract\n     * @param {number} max \n     */\n    flush(max = 1000) {}\n}\n", "import { Topic } from './Topic.js';\n\n/**\n * @template T\n */\nexport class CommandTopic extends Topic {\n    \n    constructor() {\n        super();\n\n        /**\n         * @private\n         * @type {Array<T>}\n         */\n        this.messages = [];\n        \n        /**\n         * @private\n         * @type {Array<T>}\n         */\n        this.queued = [];\n    }\n\n    /**\n     * @override\n     * @param {T} message \n     */\n    dispatch(message) {\n        this.queued.push(message);\n    }\n\n    /**\n     * @override\n     * @param {T} message \n     */\n    dispatchImmediately(message) {\n        this.messages.push(message);\n    }\n\n    /** @override */\n    flush(max = 1000) {\n        let result = this.queued.splice(0, Math.min(max, this.queued.length));\n        this.messages.push(...result);\n    }\n\n    /**\n     * @param {number} [max]\n     * @return {Iterable<T>}\n     */\n    *poll(max = 1000) {\n        let iterations = 0;\n        while(iterations < max && this.messages.length > 0) {\n            let message = this.messages.shift();\n            yield message;\n            ++iterations;\n        }\n    }\n}\n", "import { Topic } from './Topic.js';\n\n/**\n * @template T\n * @typedef {(t: T) => void|boolean} EventTopicCallback\n */\n\n/** @template T */\nexport class EventTopic extends Topic {\n\n    constructor() {\n        super();\n\n        /**\n         * @private\n         * @type {Array<EventTopicCallback<T>>}\n         */\n        this.listeners = [];\n\n        /**\n         * @private\n         * @type {Array<T>}\n         */\n        this.queued = [];\n    }\n\n    /**\n     * @param {EventTopicCallback<T>} callback \n     */\n    on(callback) {\n        this.listeners.push(callback);\n        return this;\n    }\n\n    /**\n     * @param {EventTopicCallback<T>} callback \n     */\n    off(callback) {\n        let i = this.listeners.indexOf(callback);\n        if (i >= 0) {\n            this.listeners.splice(i, 1);\n        }\n        return this;\n    }\n\n    /**\n     * @param {EventTopicCallback<T>} callback \n     */\n    once(callback) {\n        let wrapper = (attachment) => {\n            this.off(wrapper);\n            return callback(attachment);\n        };\n        this.on(wrapper);\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {T} [attachment]\n     */\n    dispatch(attachment = null) {\n        this.queued.push(attachment);\n    }\n\n    /**\n     * @override\n     * @param {T} [attachment] \n     */\n    dispatchImmediately(attachment = null) {\n        for(let listener of this.listeners) {\n            let result = listener(attachment);\n            // Consume the event if return true.\n            if (result === true) {\n                break;\n            }\n        }\n    }\n\n    /** @override */\n    flush(max = 1000) {\n        let i = 0;\n        while(this.queued.length > 0 && i++ < max) {\n            let attachment = this.queued.shift();\n            this.dispatchImmediately(attachment);\n        }\n    }\n\n    count() {\n        return this.listeners.length;\n    }\n}\n", "import { Topic } from './Topic.js';\n\n/**\n * @template T\n * @typedef {(t: T) => void|boolean} PriorityTopicCallback<T>\n */\n\n/**\n * @template T\n * @typedef PriorityTopicOptions\n * @property {number} priority\n * @property {PriorityTopicCallback<T>} callback\n */\n\n/**\n * @param {PriorityTopicOptions<?>} a \n * @param {PriorityTopicOptions<?>} b \n */\nfunction comparator(a, b) {\n    return a.priority - b.priority;\n}\n\n/**\n * @template T\n */\nexport class PriorityEventTopic extends Topic {\n\n    constructor() {\n        super();\n\n        /**\n         * @private\n         * @type {Array<PriorityTopicOptions<T>>}\n         */\n        this.listeners = [];\n\n        /**\n         * @private\n         * @type {Array<T>}\n         */\n        this.queued = [];\n    }\n\n    /**\n     * @param {number} priority \n     * @param {PriorityTopicCallback<T>} callback \n     */\n    on(priority, callback) {\n        this.listeners.push({ priority, callback });\n        this.listeners.sort(comparator);\n        return this;\n    }\n\n    /**\n     * @param {PriorityTopicCallback<T>} callback \n     */\n    off(callback) {\n        for(let i = 0; i < this.listeners.length; ++i) {\n            if (this.listeners.at(i).callback === callback) {\n                this.listeners.splice(i, 1);\n                break;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @param {number} priority \n     * @param {PriorityTopicCallback<T>} callback \n     */\n    once(priority, callback) {\n        let wrapper = (attachment) => {\n            this.off(wrapper);\n            return callback(attachment);\n        };\n        return this.on(priority, wrapper);\n    }\n\n    count() {\n        return this.listeners.length;\n    }\n\n    /**\n     * @override\n     * @param {T} [attachment]\n     */\n    dispatch(attachment = null) {\n        this.queued.push(attachment);\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {T} [attachment] \n     */\n    dispatchImmediately(attachment = null) {\n        for(let listener of this.listeners) {\n            let result = listener.callback(attachment);\n            // Consume the event if return true.\n            if (result === true) {\n                break;\n            }\n        }\n        return this;\n    }\n\n    /** @override */\n    flush(max = 1000) {\n        let i = 0;\n        while(this.queued.length > 0 && i++ < max) {\n            let attachment = this.queued.shift();\n            this.dispatchImmediately(attachment);\n        }\n        return this;\n    }\n}\n", "/** @typedef {(frameDetail: AnimationFrameLoop) => void} AnimationFrameLoopCallback */\n\nexport class AnimationFrameLoop {\n    \n    /**\n     * @param {AnimationFrameLoopCallback} callback \n     * @param {object} [opts]\n     * @param {Window} [opts.animationFrameHandler]\n     */\n    constructor(callback, opts = undefined) {\n        const { animationFrameHandler = window } = opts || {};\n\n        /** @type {ReturnType<requestAnimationFrame>} */\n        this.handle = 0;\n        this.detail = {\n            prevTime: -1,\n            currentTime: -1,\n            deltaTime: 0,\n        };\n\n        /** @protected */\n        this.animationFrameHandler = animationFrameHandler;\n\n        /** @protected */\n        this.callback = callback;\n\n        this.next = this.next.bind(this);\n        this.start = this.start.bind(this);\n        this.cancel = this.cancel.bind(this);\n    }\n    \n    next(now = performance.now()) {\n        this.handle = this.animationFrameHandler.requestAnimationFrame(this.next);\n        let d = this.detail;\n        d.prevTime = d.currentTime;\n        d.currentTime = now;\n        d.deltaTime = d.currentTime - d.prevTime;\n        this.callback(this);\n    }\n\n    start() {\n        this.handle = this.animationFrameHandler.requestAnimationFrame(this.next);\n        return this;\n    }\n\n    cancel() {\n        this.animationFrameHandler.cancelAnimationFrame(this.handle);\n        return this;\n    }\n}\n", "const AUDIO_CONTEXT_SYMBOL = Symbol('audioContext');\n\nexport class Sound {\n  /** @returns {AudioContext} */\n  static getAudioContext() {\n    if (AUDIO_CONTEXT_SYMBOL in this) {\n      return this[AUDIO_CONTEXT_SYMBOL];\n    } else {\n      let result = new AudioContext();\n      autoUnlock(result);\n      this[AUDIO_CONTEXT_SYMBOL] = result;\n      return result;\n    }\n  }\n\n  /**\n   * @param {AudioContext} audioContext\n   * @param {AudioBuffer} audioBuffer\n   */\n  constructor(audioContext, audioBuffer) {\n    this.audioContext = audioContext;\n    this.audioBuffer = audioBuffer;\n\n    /** @private */\n    this._playing = false;\n    /** @private */\n    this._started = false;\n    /**\n     * @private\n     * @type {AudioBufferSourceNode}\n     */\n    this._source = null;\n\n    /** @private */\n    this.onAudioSourceEnded = this.onAudioSourceEnded.bind(this);\n  }\n\n  destroy() {\n    if (this._source) {\n      this._source.disconnect();\n    }\n    this._source = null;\n    this._started = false;\n    this._playing = false;\n  }\n\n  /** @private */\n  onAudioSourceEnded() {\n    this._playing = false;\n  }\n\n  /**\n   * @param {object} [opts]\n   * @param {number} [opts.pitch]\n   * @param {number} [opts.gain]\n   * @param {number} [opts.pan]\n   * @param {boolean} [opts.loop]\n   */\n  play(opts = {}) {\n    let audioBuffer = this.audioBuffer;\n    if (!audioBuffer) return;\n    // HACK: This just restarts when played again.\n    if (this._source) this.destroy();\n\n    const {\n      pitch = undefined,\n      gain = undefined,\n      pan = undefined,\n      loop = false,\n    } = opts;\n\n    /** @type {AudioContext} */\n    let audioContext = this.audioContext;\n    let source = audioContext.createBufferSource();\n    source.addEventListener('ended', this.onAudioSourceEnded);\n    source.buffer = audioBuffer;\n    source.loop = loop;\n\n    let prevNode = source;\n    // https://www.oreilly.com/library/view/web-audio-api/9781449332679/ch04.html\n    // Add pitch\n    if (pitch) {\n      source.detune.value = pitch * 100;\n    }\n    // Add gain\n    if (gain) {\n      const gainNode = audioContext.createGain();\n      gainNode.gain.value = gain;\n      prevNode = prevNode.connect(gainNode);\n    }\n    // Add stereo pan\n    if (pan) {\n      const pannerNode = audioContext.createStereoPanner();\n      pannerNode.pan.value = pan;\n      prevNode = prevNode.connect(pannerNode);\n    }\n    prevNode.connect(audioContext.destination);\n    source.start();\n\n    this._source = source;\n    this._started = true;\n    this._playing = true;\n  }\n\n  pause() {\n    this._source.stop();\n    this._playing = false;\n  }\n\n  isStarted() {\n    return this._started;\n  }\n\n  isPlaying() {\n    return this._playing;\n  }\n\n  isPaused() {\n    return this._started && !this._playing;\n  }\n}\n\nfunction autoUnlock(ctx) {\n  const callback = () => {\n    if (ctx.state === 'suspended') {\n      ctx.resume();\n    }\n  };\n  document.addEventListener('click', callback);\n}\n", "/**\n * @param {ArrayBuffer|Uint8Array|string} src\n * @param {AudioContext} audioContext\n * @returns {Promise<AudioBuffer>}\n */\nexport async function loadAudioBuffer(src, audioContext) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return loadAudioBuffer(arrayBuffer, audioContext);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  let audioArrayBuffer = new ArrayBuffer(arrayBuffer.byteLength);\n  new Uint8Array(audioArrayBuffer).set(arrayBuffer);\n  let audioBuffer = await audioContext.decodeAudioData(audioArrayBuffer);\n  return audioBuffer;\n}\n", "import { Sound } from './Sound.js';\nimport { loadAudioBuffer } from './AudioBufferLoader.js';\n\nexport async function loadSound(src) {\n  let audioContext = Sound.getAudioContext();\n  let audioBuffer = await loadAudioBuffer(src, audioContext);\n  let sound = new Sound(audioContext, audioBuffer);\n  return sound;\n}\n", "import { AssetRef, cacheAssetPackAsRaw, preloadAssetRefs } from '@milque/asset';\nimport { loadSound } from './SoundLoader.js';\n\nexport const Assets = {\n  SoundStart: new AssetRef(\n    'start',\n    loadSound,\n    undefined,\n    'raw://start.wav'\n  ),\n  SoundDead: new AssetRef(\n    'dead',\n    loadSound,\n    undefined,\n    'raw://dead.wav',\n  ),\n  SoundPop: new AssetRef(\n    'pop',\n    loadSound,\n    undefined,\n    'raw://boop.wav'\n  ),\n  SoundShoot: new AssetRef(\n    'shoot',\n    loadSound,\n    undefined,\n    'raw://click.wav'\n  ),\n  SoundBoom: new AssetRef(\n    'boom',\n    loadSound,\n    undefined,\n    'raw://boom.wav'\n  ),\n  BackgroundMusic: new AssetRef(\n    'music',\n    loadSound,\n    undefined,\n    'raw://music.wav'\n  ),\n};\n\nexport async function loadAssets(assets) {\n  await cacheAssetPackAsRaw(assets, 'res.pack');\n  await preloadAssetRefs(assets, Object.values(Assets));\n}\n", "import { ButtonBinding, KeyCodes } from '@milque/input';\n\nexport const MoveLeft = new ButtonBinding('moveLeft', [KeyCodes.ARROW_LEFT, KeyCodes.KEY_A]);\nexport const MoveRight = new ButtonBinding('moveRight', [KeyCodes.ARROW_RIGHT, KeyCodes.KEY_D]);\nexport const MoveUp = new ButtonBinding('moveUp', [KeyCodes.ARROW_UP, KeyCodes.KEY_W]);\nexport const MoveDown = new ButtonBinding('moveDown', [KeyCodes.ARROW_DOWN, KeyCodes.KEY_S]);\nexport const Shoot = new ButtonBinding('shoot', KeyCodes.SPACE);\nexport const Debug = new ButtonBinding('debug', KeyCodes.BACKSLASH);\n", "/**\n * @typedef RandomGeneratorLike\n * @property {NumberFunction} next\n *\n * @callback NumberFunction Generates a pseudo-random number\n * from 0 inclusive to 1 exclusive.\n * @returns {number} A pseudo-randomly generated number.\n */\n\n/**\n * Represents a pseudo-random number generator. This is only used for\n * type information.\n *\n * All random number generator instances are expected to implement\n * {@link RandomGeneratorLike}. If using classes, you can extend\n * {@link RandomBase} to enforce this, but this should not necessary\n * nor assumed.\n */\nexport class RandomBase {\n  /**\n   * Generates a pseudo-random number from 0 inclusive to 1 exclusive.\n   *\n   * @abstract\n   * @returns {number} A pseudo-randomly generated number.\n   */\n  next() {\n    return 0;\n  }\n}\n", "import { RandomBase } from './RandomBase.js';\n\nexport class MathRandom extends RandomBase {\n  /** @override */\n  next() {\n    return Math.random();\n  }\n}\n", "import { RandomBase } from './RandomBase.js';\n\n/**\n * A simple and fast 32-bit PRNG.\n *\n * @see {@link https://github.com/bryc/code/blob/master/jshash/PRNGs.md}\n */\nexport class Mulberry32 extends RandomBase {\n  /**\n   * @param {number} seed An unsigned 32-bit integer.\n   */\n  constructor(seed) {\n    super();\n\n    this.seed = seed;\n\n    /** @private */\n    this.a = seed;\n  }\n\n  /** @override */\n  next() {\n    var t = (this.a += 0x6d2b79f5);\n    t = Math.imul(t ^ (t >>> 15), t | 1);\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\n    return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\n  }\n}\n", "import { MathRandom } from './generators/MathRandom.js';\nimport { Mulberry32 } from './generators/Mulberry32.js';\n\n/**\n * @typedef {import('./generators/RandomBase.js').RandomGeneratorLike} RandomGeneratorLike\n * @typedef {import('./generators/RandomBase.js').RandomBase} RandomBase\n */\n\nexport class Random {\n  /**\n   * The lazily-initiated, static instance of this random class.\n   */\n  static get RAND() {\n    let instance = new this();\n\n    this.next = this.next.bind(this);\n    this.choose = this.choose.bind(this);\n    this.range = this.range.bind(this);\n    this.rangeInt = this.rangeInt.bind(this);\n    this.sign = this.sign.bind(this);\n\n    Object.defineProperty(this, 'RAND', { value: instance });\n    return instance;\n  }\n\n  /**\n   * @param {RandomGeneratorLike|RandomBase|number} [randomGenerator]\n   * If number type, the param will be used as a seed for a Mulberry32 PRNG.\n   * Otherwise, it is the pseudo-random number generator object that provides\n   * the generated numbers through `next()`. By default, if undefined, this\n   * will use the browser-specific `Math.random()` implementation.\n   */\n  constructor(randomGenerator = undefined) {\n    if (typeof randomGenerator === 'number') {\n      this.generator = new Mulberry32(randomGenerator);\n    } else if (randomGenerator) {\n      this.generator = randomGenerator;\n    } else {\n      this.generator = new MathRandom();\n    }\n\n    this.next = this.next.bind(this);\n    this.choose = this.choose.bind(this);\n    this.range = this.range.bind(this);\n    this.rangeInt = this.rangeInt.bind(this);\n    this.sign = this.sign.bind(this);\n  }\n\n  static next() {\n    return this.RAND.next();\n  }\n  next() {\n    return this.generator.next();\n  }\n\n  /**\n   * @template T\n   * @param {Array<T>} list\n   * @returns {T}\n   */\n  static choose(list) {\n    return this.RAND.choose(list);\n  }\n  /**\n   * @template T\n   * @param {Array<T>} list\n   * @returns {T}\n   */\n  choose(list) {\n    return list[Math.floor(this.generator.next() * list.length)];\n  }\n\n  /**\n   * @param {number} min Min range (inclusive)\n   * @param {number} max Max range (exclusive)\n   * @returns {number}\n   */\n  static range(min, max) {\n    return this.RAND.range(min, max);\n  }\n  /**\n   * @param {number} min Min range (inclusive)\n   * @param {number} max Max range (exclusive)\n   * @returns {number}\n   */\n  range(min, max) {\n    return (max - min) * this.generator.next() + min;\n  }\n\n  /**\n   * @param {number} min Min integer range (inclusive)\n   * @param {number} max Max integer range (exclusive)\n   * @returns {number}\n   */\n  static rangeInt(min, max) {\n    return this.RAND.rangeInt(min, max);\n  }\n  /**\n   * @param {number} min Min integer range (inclusive)\n   * @param {number} max Max integer range (exclusive)\n   * @returns {number}\n   */\n  rangeInt(min, max) {\n    return Math.trunc(this.range(min, max));\n  }\n\n  /**\n   * @returns {-1|1}\n   */\n  static sign() {\n    return this.RAND.sign();\n  }\n  /**\n   * @returns {-1|1}\n   */\n  sign() {\n    return this.generator.next() < 0.5 ? -1 : 1;\n  }\n}\n", "import { RandomBase } from './RandomBase.js';\n\n/**\n * A very fast 32-bit PRNG.\n *\n * @see https://github.com/bryc/code/blob/master/jshash/PRNGs.md\n */\nexport class SmallFastCounter32 extends RandomBase {\n  /**\n   * @param {number} a An unsigned 32-bit integer.\n   * @param {number} b An unsigned 32-bit integer.\n   * @param {number} c An unsigned 32-bit integer.\n   * @param {number} d An unsigned 32-bit integer.\n   */\n  constructor(a, b, c, d) {\n    super();\n\n    /** @private */\n    this.a = a;\n    /** @private */\n    this.b = b;\n    /** @private */\n    this.c = c;\n    /** @private */\n    this.d = d;\n  }\n\n  /** @override */\n  next() {\n    let { a, b, c, d } = this;\n    a |= 0;\n    b |= 0;\n    c |= 0;\n    d |= 0;\n    let t = (((a + b) | 0) + d) | 0;\n    d = (d + 1) | 0;\n    a = b ^ (b >>> 9);\n    b = (c + (c << 3)) | 0;\n    c = (c << 21) | (c >>> 11);\n    c = (c + t) | 0;\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    return (t >>> 0) / 4294967296;\n  }\n}\n", "export const DEBUG = {\n    showCollision: false,\n};\nexport const FLASH_TIME_STEP = 0.1;\n\nexport function wrapAround(canvas, position, width, height) {\n    if (position.x < -width) position.x = canvas.width;\n    if (position.y < -height) position.y = canvas.height;\n    if (position.x > canvas.width + width / 2) position.x = -width;\n    if (position.y > canvas.height + height / 2) position.y = -height;\n}\n\nexport function withinRadius(from, to, radius) {\n    const dx = from.x - to.x;\n    const dy = from.y - to.y;\n    return dx * dx + dy * dy <= radius * radius;\n}\n\nexport function drawCollisionCircle(ctx, x, y, radius) {\n    if (!DEBUG.showCollision) return;\n    ctx.translate(x, y);\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, 0, Math.PI * 2);\n    ctx.strokeStyle = 'lime';\n    ctx.stroke();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n}\n", "import { AnimationFrameLoop } from '@milque/scene';\n\n/**\n * @template T\n * @typedef {import('./system/SystemManager').System<T>} System<T>\n */\n/** @typedef {import('./system/EffectManager').EffectHandler} EffectHandler */\n/** @typedef {import('./system/EffectManager').AfterEffectHandler} AfterEffectHandler */\n/** @typedef {import('./system/SystemContext').SystemContext<?>} M */\n/** @typedef {import('@milque/scene').AnimationFrameLoopCallback} AnimationFrameLoopCallback */\n\n/**\n * @param {AnimationFrameLoopCallback} callback\n */\nexport function createAnimationFrameLoop(callback) {\n    return new AnimationFrameLoop(callback).next;\n}\n\n/**\n * @template T\n * @param {M} m \n * @param {System<T>} system\n * @returns {T}\n */\nexport function useSystem(m, system) {\n    return m.use(system);\n}\n\n/**\n * @param {M} m\n * @param {EffectHandler} callback\n */\nexport function useEffect(m, callback) {\n    m.before(callback);\n}\n\n/**\n * @param {M} m \n * @param {AfterEffectHandler} callback \n */\nexport function useAfterEffect(m, callback) {\n    m.after(callback);\n}\n", "import { ComponentClass, EntityQuery } from '@milque/scene';\n\nimport { useNextLevel } from './AsteroidGame.js';\nimport { useSystem } from './lib/M';\nimport { DisplayPortProvider, EntityManagerProvider, useDraw, useUpdate } from './main.js';\nimport { wrapAround } from './util.js';\n\n/**\n * @typedef {import('./AsteroidGame.js').AsteroidGame} AsteroidGame\n * @typedef {import('@milque/scene').EntityId} EntityId\n * @typedef {import('@milque/scene').EntityManager} EntityManager\n */\n\nexport const PARTICLE_RADIUS = 4;\nexport const PARTICLE_SPEED = 2;\nexport const MAX_PARTICLE_AGE = 600;\n\nexport const PARTICLES_DRAW_LAYER_INDEX = 9;\n\nexport const Particle = new ComponentClass('Particle', () => ({\n    x: 0,\n    y: 0,\n    dx: 0,\n    dy: 0,\n    rotation: 0,\n    age: 0,\n    color: 'white',\n}));\nexport const ParticleQuery = new EntityQuery(Particle);\n\n/**\n * @param {import('./lib/M').M} m \n */\nexport function ParticleSystem(m) {\n    const ents = useSystem(m, EntityManagerProvider);\n    const { canvas } = useSystem(m, DisplayPortProvider);\n\n    useNextLevel(m, () => {\n        ents.clear(Particle);\n    });\n\n    useUpdate(m, ({ deltaTime: dt }) => {\n        // Update particle motion\n        for (let [entityId, particle] of ParticleQuery.findAll(ents)) {\n            particle.age += dt;\n            if (particle.age > MAX_PARTICLE_AGE) {\n                ents.destroy(entityId);\n            } else {\n                particle.x += particle.dx;\n                particle.y += particle.dy;\n    \n                // Wrap around\n                wrapAround(canvas, particle, PARTICLE_RADIUS * 2, PARTICLE_RADIUS * 2);\n            }\n        }\n    });\n\n    useDraw(m, PARTICLES_DRAW_LAYER_INDEX, (ctx) => {\n        for (let [_, particle] of ParticleQuery.findAll(ents)) {\n            ctx.translate(particle.x, particle.y);\n            ctx.rotate(particle.rotation);\n            ctx.fillStyle = particle.color;\n            let size = PARTICLE_RADIUS * (1 - particle.age / MAX_PARTICLE_AGE);\n            ctx.fillRect(-size, -size, size * 2, size * 2);\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    });\n}\n\n/**\n * @param {AsteroidGame} scene \n * @param {number} x \n * @param {number} y \n * @param {number} dx \n * @param {number} dy \n * @param {string|(() => string)} color \n */\nexport function spawnParticle(scene, x, y, dx, dy, color, age = 0) {\n    if (typeof color === 'function') color = color();\n    let [entityId, particle] = scene.ents.createAndAttach(Particle);\n    particle.x = x;\n    particle.y = y;\n    particle.dx = dx;\n    particle.dy = dy;\n    particle.rotation = Math.atan2(dy, dx);\n    particle.age = age;\n    particle.color = color;\n    return entityId;\n}\n", "import { Random } from '@milque/random';\nimport { PARTICLE_SPEED, spawnParticle } from './Particle.js';\n\nexport function explode(scene, x, y, amount = 10, color) {\n    for (let i = 0; i < amount; ++i) {\n        spawnParticle(\n            scene,\n            x,\n            y,\n            Random.range(-1, 1) * PARTICLE_SPEED,\n            Random.range(-1, 1) * PARTICLE_SPEED,\n            color\n        );\n    }\n}\n", "import { Random } from '@milque/random';\nimport { AsteroidGame, useNextLevel } from './AsteroidGame.js';\nimport { explode } from './Explode.js';\nimport { useSystem } from './lib/M.js';\nimport { PLAYER_RADIUS, killPlayer } from './Player.js';\nimport { drawCollisionCircle, withinRadius, wrapAround } from './util.js';\n\nexport const ASTEROID_SPEED = 1;\nexport const ASTEROID_BREAK_DAMP_FACTOR = 0.1;\nconst SMALL_ASTEROID_RADIUS = 4;\nconst MAX_ASTEROID_COUNT = 100;\nconst ASTEROID_SPAWN_INIT_COUNT = 1;\nconst ASTEROID_RADIUS = 8;\n\n/** @knob range */\nconst ASTEROID_SPAWN_RATE = { MIN: 3_000, MAX: 10_000 };\nconst ASTEROID_SPAWN_RATE_RAND = (/** @type {Random} */ r) => r.range(\n    ASTEROID_SPAWN_RATE.MIN,\n    ASTEROID_SPAWN_RATE.MAX);\n\nconst ASTEROID_EXPLODE_PARTICLE_COLORS = [\n    'blue',\n    'blue',\n    'blue',\n    'dodgerblue',\n    'gray',\n    'darkgray',\n    'yellow',\n];\n\nexport function AsteroidSystem(m) {\n    const scene = useSystem(m, AsteroidGame);\n    useNextLevel(m, () => {\n        scene.asteroids.length = 0;\n        for (let i = 0; i < ASTEROID_SPAWN_INIT_COUNT * scene.level; ++i) {\n            scene.asteroidSpawner.spawn(scene);\n        }\n    });\n}\n\n/**\n * @param {AsteroidGame} scene \n */\nexport function breakUpAsteroid(scene, asteroid, dx = 0, dy = 0) {\n    destroyAsteroid(scene, asteroid);\n    if (asteroid.size > SMALL_ASTEROID_RADIUS) {\n        let children = [];\n        children.push(\n            spawnAsteroid(\n                scene,\n                asteroid.x + Random.range(-ASTEROID_RADIUS, ASTEROID_RADIUS),\n                asteroid.y + Random.range(-ASTEROID_RADIUS, ASTEROID_RADIUS),\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED) + dx,\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED) + dy,\n                SMALL_ASTEROID_RADIUS\n            )\n        );\n        children.push(\n            spawnAsteroid(\n                scene,\n                asteroid.x + Random.range(-ASTEROID_RADIUS, ASTEROID_RADIUS),\n                asteroid.y + Random.range(-ASTEROID_RADIUS, ASTEROID_RADIUS),\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED) + dx,\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED) + dy,\n                SMALL_ASTEROID_RADIUS\n            )\n        );\n        children.push(\n            spawnAsteroid(\n                scene,\n                asteroid.x + Random.range(-ASTEROID_RADIUS, ASTEROID_RADIUS),\n                asteroid.y + Random.range(-ASTEROID_RADIUS, ASTEROID_RADIUS),\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED) + dx,\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED) + dy,\n                SMALL_ASTEROID_RADIUS\n            )\n        );\n        children.push(\n            spawnAsteroid(\n                scene,\n                asteroid.x + Random.range(-ASTEROID_RADIUS, ASTEROID_RADIUS),\n                asteroid.y + Random.range(-ASTEROID_RADIUS, ASTEROID_RADIUS),\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED) + dx,\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED) + dy,\n                SMALL_ASTEROID_RADIUS\n            )\n        );\n        scene.asteroids.push(...children);\n    }\n}\n\nexport function spawnAsteroid(scene, x, y, dx, dy, size) {\n    return {\n        scene,\n        x, y, \n        dx, dy,\n        size, \n        rotation: Math.atan2(dy, dx),\n    };\n}\n\n/**\n * \n * @param {AsteroidGame} scene \n * @param {ReturnType<spawnAsteroid>} asteroid \n */\nexport function destroyAsteroid(scene, asteroid) {\n    scene.asteroids.splice(scene.asteroids.indexOf(asteroid), 1);\n}\n\n/**\n * @param {AsteroidGame} scene \n */\nexport function createAsteroidSpawner(scene) {\n    return {\n        scene,\n        spawnTicks: ASTEROID_SPAWN_RATE.MAX,\n        reset() {\n            this.spawnTicks = ASTEROID_SPAWN_RATE.MAX;\n        },\n        spawn(scene) {\n            if (scene.asteroids.length > MAX_ASTEROID_COUNT) return;\n            let spawnRange = Random.choose(calculateAsteroidSpawnRanges(scene.display));\n            let asteroid = spawnAsteroid(\n                scene,\n                // X range\n                Random.range(spawnRange[0], spawnRange[0] + spawnRange[2]),\n                // Y range\n                Random.range(spawnRange[1], spawnRange[1] + spawnRange[3]),\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED),\n                Random.range(-ASTEROID_SPEED, ASTEROID_SPEED),\n                ASTEROID_RADIUS\n            );\n            scene.asteroids.push(asteroid);\n        },\n    };\n}\n\n/**\n * @param {number} dt\n * @param {AsteroidGame} scene \n */\nexport function updateAsteroidSpawner(dt, scene, spawner) {\n    if (scene.gamePause) {\n        return;\n    }\n\n    spawner.spawnTicks -= dt;\n    if (spawner.spawnTicks <= 0) {\n        spawner.spawn(scene);\n        spawner.spawnTicks = ASTEROID_SPAWN_RATE_RAND(Random.RAND);\n    }\n}\n\n/**\n * @param {number} dt\n * @param {AsteroidGame} scene \n * @param {Array<ReturnType<spawnAsteroid>>} asteroids\n */\nexport function updateAsteroids(dt, scene, asteroids) {\n    // Update asteroid motion\n    for (let asteroid of asteroids) {\n        asteroid.x += asteroid.dx;\n        asteroid.y += asteroid.dy;\n        wrapAround(scene.canvas, asteroid, asteroid.size * 2, asteroid.size * 2);\n    }\n\n    // Update asteroid collision\n    for (let asteroid of asteroids) {\n        if (withinRadius(asteroid, scene.player, asteroid.size + PLAYER_RADIUS)) {\n            explodeAsteroid(scene, asteroid);\n            destroyAsteroid(scene, asteroid);\n            killPlayer(scene, scene.player);\n            break;\n        }\n    }\n}\n\nexport function explodeAsteroid(scene, asteroid) {\n    explode(\n        scene,\n        asteroid.x,\n        asteroid.y,\n        10,\n        Random.choose.bind(null, ASTEROID_EXPLODE_PARTICLE_COLORS)\n    );\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {AsteroidGame} scene \n * @param {Array<ReturnType<spawnAsteroid>>} asteroids\n */\nexport function drawAsteroids(ctx, scene, asteroids) {\n    for (let asteroid of asteroids) {\n        ctx.translate(asteroid.x, asteroid.y);\n        ctx.rotate(asteroid.rotation);\n        ctx.fillStyle = 'slategray';\n        ctx.fillRect(\n            -asteroid.size,\n            -asteroid.size,\n            asteroid.size * 2,\n            asteroid.size * 2\n        );\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        drawCollisionCircle(ctx, asteroid.x, asteroid.y, asteroid.size);\n    }\n}\n\nexport function calculateAsteroidSpawnRanges(display) {\n    return [\n        [\n            -ASTEROID_RADIUS,\n            -ASTEROID_RADIUS,\n            ASTEROID_RADIUS * 2 + display.width,\n            ASTEROID_RADIUS,\n        ],\n        [-ASTEROID_RADIUS, 0, ASTEROID_RADIUS, display.height],\n        [\n            -ASTEROID_RADIUS,\n            display.height,\n            ASTEROID_RADIUS * 2 + display.width,\n            ASTEROID_RADIUS,\n        ],\n        [display.width, 0, ASTEROID_RADIUS, display.height],\n    ];\n}\n", "import { Random } from '@milque/random';\nimport { ComponentClass, EntityQuery } from '@milque/scene';\n\nimport { ASTEROID_SPEED, calculateAsteroidSpawnRanges } from './Asteroid.js';\nimport { AsteroidGame, useNextLevel } from './AsteroidGame.js';\nimport { explode } from './Explode.js';\nimport { useSystem } from './lib/M.js';\nimport { EntityManagerProvider } from './main.js';\nimport { PLAYER_RADIUS } from './Player.js';\nimport { drawCollisionCircle, withinRadius, wrapAround } from './util.js';\n\n/**\n * @typedef {import('@milque/scene').EntityId} EntityId\n */\n\nexport const POWER_UP_RADIUS = 4;\nconst POWER_UP_SPAWN_RATE = [10_000, 30_000];\nconst POWER_UP_EXPLODE_PARTICLE_COLORS = ['white', 'violet', 'violet'];\nconst POWER_UP_AMOUNT = 30;\nconst POWER_UP_SPAWN_CHANCE = 0.7;\n\nexport const PowerUp = new ComponentClass('PowerUp', () => ({\n  x: 0, y: 0,\n  dx: 0, dy: 0,\n  rotation: 0,\n}));\nexport const PowerUpQuery = new EntityQuery(PowerUp);\n\nexport function PowerUpSystem(m) {\n  const ents = useSystem(m, EntityManagerProvider);\n  const scene = useSystem(m, AsteroidGame);\n\n  useNextLevel(m, () => {\n    ents.clear(PowerUp);\n    if (Random.next() > POWER_UP_SPAWN_CHANCE) {\n      scene.powerUpSpawner.spawn(scene);\n    }\n  });\n}\n\n/**\n * @param {AsteroidGame} scene \n * @param {number} x \n * @param {number} y \n * @param {number} dx \n * @param {number} dy\n */\nexport function createPowerUp(scene, x, y, dx, dy) {\n  return {\n    scene,\n    x, y,\n    dx, dy,\n    rotation: Math.atan2(dy, dx),\n  };\n}\n\n/**\n * @param {AsteroidGame} scene \n * @param {number} x \n * @param {number} y \n * @param {number} dx \n * @param {number} dy \n */\nexport function spawnPowerUp(scene, x, y, dx, dy) {\n  let [entityId, powerUp] = scene.ents.createAndAttach(PowerUp);\n  powerUp.x = x;\n  powerUp.y = y;\n  powerUp.dx = dx;\n  powerUp.dy = dy;\n  powerUp.rotation = Math.atan2(dy, dx);\n  return entityId;\n}\n\n/**\n * @param {AsteroidGame} scene \n * @param {EntityId} entityId\n */\nexport function destroyPowerUp(scene, entityId) {\n  scene.ents.destroy(entityId);\n}\n\n/**\n * @param {AsteroidGame} scene \n */\nexport function updatePowerUps(dt, scene) {\n  // Update motion\n  for (let [_, powerUp] of PowerUpQuery.findAll(scene.ents)) {\n    powerUp.x += powerUp.dx;\n    powerUp.y += powerUp.dy;\n\n    // Wrap around\n    wrapAround(scene.canvas, powerUp, POWER_UP_RADIUS * 2, POWER_UP_RADIUS * 2);\n  }\n\n  // Update collision\n  for (let [entityId, powerUp] of PowerUpQuery.findAll(scene.ents)) {\n    if (withinRadius(powerUp, scene.player, POWER_UP_RADIUS + PLAYER_RADIUS)) {\n      explode(\n        scene,\n        powerUp.x,\n        powerUp.y,\n        10,\n        Random.choose.bind(null, POWER_UP_EXPLODE_PARTICLE_COLORS)\n      );\n      destroyPowerUp(scene, entityId);\n      scene.player.powerMode += POWER_UP_AMOUNT;\n      break;\n    }\n  }\n}\n\n/**\n * @param {AsteroidGame} scene \n */\nexport function drawPowerUps(ctx, scene) {\n  for (let [_, powerUp] of PowerUpQuery.findAll(scene.ents)) {\n    ctx.translate(powerUp.x, powerUp.y);\n    ctx.rotate(powerUp.rotation);\n    ctx.beginPath();\n    ctx.strokeStyle = 'violet';\n    ctx.arc(0, 0, POWER_UP_RADIUS, 0, Math.PI * 2);\n    ctx.moveTo(-POWER_UP_RADIUS / 2, 0);\n    ctx.lineTo(POWER_UP_RADIUS / 2, 0);\n    ctx.moveTo(0, -POWER_UP_RADIUS / 2);\n    ctx.lineTo(0, POWER_UP_RADIUS / 2);\n    ctx.stroke();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    drawCollisionCircle(ctx, powerUp.x, powerUp.y, POWER_UP_RADIUS);\n  }\n}\n\n/**\n * @param {AsteroidGame} scene \n */\nexport function createPowerUpSpawner(scene) {\n  return {\n    scene,\n    reset() {\n      // Do nothing.\n    },\n    spawn(scene) {\n      let spawnRange = Random.choose(calculateAsteroidSpawnRanges(scene.display));\n      createPowerUp(\n        scene,\n        // X range\n        Random.range(spawnRange[0], spawnRange[0] + spawnRange[2]),\n        // Y range\n        Random.range(spawnRange[1], spawnRange[1] + spawnRange[3]),\n        Random.range(-ASTEROID_SPEED, ASTEROID_SPEED),\n        Random.range(-ASTEROID_SPEED, ASTEROID_SPEED)\n      );\n    },\n  };\n}\n\n/**\n * @param {AsteroidGame} scene \n */\nexport function updatePowerUpSpawner(dt, scene, spawner) {\n  // Do nothing.\n}\n", "import { EventTopic } from '@milque/scene';\n\nimport { Assets } from './Assets.js';\n\nimport { DEBUG } from './util.js';\nimport { createAsteroidSpawner, drawAsteroids, updateAsteroids, updateAsteroidSpawner } from './Asteroid.js';\nimport { drawCollisionCircle, FLASH_TIME_STEP } from './util.js';\nimport { PLAYER_RADIUS } from './Player.js';\nimport { createPowerUpSpawner, drawPowerUps, updatePowerUps, updatePowerUpSpawner, PowerUp } from './PowerUp.js';\n\nimport { useSystem } from './lib/M';\nimport { AssetManagerProvider, DisplayPortProvider, EntityManagerProvider, InputPortProvider, nextLevel, useDraw, useUpdate } from './main.js';\nimport { Debug, MoveDown, MoveLeft, MoveRight, MoveUp, Shoot } from './Inputs.js';\n\nconst INSTRUCTION_HINT_TEXT = '[ wasd_ ]';\n\nexport const NextLevelEvent = new EventTopic();\n\nexport function useNextLevel(m, nextLevelCallback) {\n    m.before(() => {\n        NextLevelEvent.on(nextLevelCallback);\n        return () => {\n            NextLevelEvent.off(nextLevelCallback)\n        };\n    });\n}\n\n/** @param {import('./lib/M').M} m */\nexport function AsteroidGame(m) {\n    const { display, canvas } = useSystem(m, DisplayPortProvider);\n    const ents = useSystem(m, EntityManagerProvider);\n    const assets = useSystem(m, AssetManagerProvider);\n    const { ctx: ab } = useSystem(m, InputPortProvider);\n\n    this.ents = ents;\n    this.assets = assets;\n\n    this.display = display;\n    this.canvas = canvas;\n\n    this.level = 0;\n    this.score = 0;\n    this.highScore = Number(localStorage.getItem('highscore'));\n    this.flashScore = 0;\n    this.flashScoreDelta = 0;\n    this.flashHighScore = 0;\n    this.flashHighScoreDelta = 0;\n    this.flashShootDelta = 0;\n    this.dt = 0;\n\n    this.player = null;\n\n    this.asteroids = [];\n    this.asteroidSpawner = createAsteroidSpawner(this);\n\n    this.powerUpSpawner = createPowerUpSpawner(this);\n\n    this.gamePause = true;\n    this.showPlayer = true;\n    this.gameStart = true;\n    this.gameWait = true;\n    this.hint = INSTRUCTION_HINT_TEXT;\n\n    useUpdate(m, ({ deltaTime: dt }) => {\n        if (this.gamePause) {\n            return;\n        }\n\n        this.dt = dt;\n\n        // Update asteroids\n        updateAsteroids(dt, this, this.asteroids);\n        // Update power-up\n        updatePowerUps(dt, this);\n        // Update spawners\n        updateAsteroidSpawner(dt, this, this.asteroidSpawner);\n        updatePowerUpSpawner(dt, this, this.powerUpSpawner);\n\n        if (!this.gamePause && this.asteroids.length <= 0) {\n            this.gamePause = true;\n            this.showPlayer = true;\n            Assets.SoundStart.current.play();\n            setTimeout(() => (this.gameWait = true), 1000);\n        }\n    });\n\n    useUpdate(m, () => {\n        if (ab.isAnyButtonPressed()) {\n            if (this.gameWait) {\n                if (this.gameStart) {\n                    Assets.BackgroundMusic.current.play();\n                    this.score = 0;\n                    this.flashScore = 1;\n                    this.level = 0;\n                    this.gameStart = false;\n                    this.player.powerMode = 0;\n                    this.ents.clear(PowerUp);\n                    this.asteroidSpawner.reset();\n                    this.powerUpSpawner.reset();\n                }\n                this.gameWait = false;\n                nextLevel(this);\n            }\n        }\n\n        this.player.up = MoveUp.value;\n        this.player.down = MoveDown.value;\n        this.player.left = MoveLeft.value;\n        this.player.right = MoveRight.value;\n        this.player.fire = Shoot.value;\n        if (Debug.released) {\n            DEBUG.showCollision = !DEBUG.showCollision;\n        }\n    });\n\n    useDraw(m, 0, (ctx) => {\n        const canvas = ctx.canvas;\n\n        // Draw background\n        ctx.fillStyle = 'black';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    });\n\n    useDraw(m, 2, (ctx) => {\n        let canvas = ctx.canvas;\n\n        // Draw hint\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.2)';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.font = '16px sans-serif';\n        ctx.fillText(this.hint, canvas.width / 2, canvas.height / 2 - 32);\n\n        // Draw score\n        if (this.flashScore > 0) {\n            ctx.fillStyle = `rgba(255, 255, 255, ${this.flashScore + 0.2})`;\n            this.flashScore -= FLASH_TIME_STEP;\n        } else {\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.2)';\n        }\n        ctx.font = '48px sans-serif';\n        ctx.fillText(\n            '= ' + String(this.score).padStart(2, '0') + ' =',\n            canvas.width / 2,\n            canvas.height / 2\n        );\n        if (this.flashHighScore > 0) {\n            ctx.fillStyle = `rgba(255, 255, 255, ${this.flashHighScore + 0.2})`;\n            this.flashHighScore -= FLASH_TIME_STEP;\n        } else {\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.2)';\n        }\n        ctx.font = '16px sans-serif';\n        ctx.fillText(\n            String(this.highScore).padStart(2, '0'),\n            canvas.width / 2,\n            canvas.height / 2 + 32\n        );\n\n        // Draw timer\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.2)';\n        ctx.font = '24px sans-serif';\n        ctx.textAlign = 'right';\n        ctx.fillText(\n            `${Math.ceil(this.asteroidSpawner.spawnTicks / 1000)}`,\n            canvas.width,\n            canvas.height - 12\n        );\n\n        // Draw asteroid\n        drawAsteroids(ctx, this, this.asteroids);\n        // Draw power-up\n        drawPowerUps(ctx, this);\n    });\n\n    useDraw(m, 11, (ctx) => {\n        drawCollisionCircle(ctx, this.player.x, this.player.y, PLAYER_RADIUS);\n    });\n\n    return this;\n}\n", "import { ComponentClass, EntityManager, EntityQuery } from '@milque/scene';\n\nimport { Assets } from './Assets.js';\nimport { ASTEROID_BREAK_DAMP_FACTOR, breakUpAsteroid, explodeAsteroid } from './Asteroid.js';\nimport { AsteroidGame, useNextLevel } from './AsteroidGame.js';\nimport { useSystem } from './lib/M.js';\nimport { DisplayPortProvider, EntityManagerProvider, useDraw, useUpdate } from './main.js';\nimport { drawCollisionCircle, withinRadius, wrapAround } from './util.js';\n\nexport const BULLET_SPEED = 4;\nexport const MAX_BULLET_COUNT = 100;\nconst BULLET_RADIUS = 2;\nconst BULLET_COLOR = 'gold';\nconst MAX_BULLET_AGE = 2000;\n\nexport const BULLET_DRAW_LAYER_INDEX = 5;\n\nexport const Bullet = new ComponentClass('Bullet', () => ({\n    x: 0,\n    y: 0,\n    dx: 0,\n    dy: 0,\n    rotation: 0,\n    age: 0,\n}));\nexport const BulletQuery = new EntityQuery(Bullet);\n\n/**\n * @param {number} dt \n * @param {AsteroidGame} scene \n * @param {HTMLCanvasElement} canvas\n * @param {EntityManager} ents\n */\nfunction onUpdate(dt, scene, canvas, ents) {\n    if (scene.gamePause) {\n        return;\n    }\n\n    // Update bullet motion\n    for (let [entityId, bullet] of BulletQuery.findAll(ents)) {\n        bullet.age += dt;\n        if (bullet.age > MAX_BULLET_AGE) {\n            ents.destroy(entityId);\n        } else {\n            bullet.x += bullet.dx;\n            bullet.y += bullet.dy;\n\n            // Wrap around\n            wrapAround(canvas, bullet, BULLET_RADIUS * 2, BULLET_RADIUS * 2);\n        }\n    }\n\n    // Update bullet collision\n    for (let [entityId, bullet] of BulletQuery.findAll(ents)) {\n        for (let asteroid of scene.asteroids) {\n            if (withinRadius(bullet, asteroid, asteroid.size)) {\n                scene.flashScore = 1;\n                scene.score++;\n                if (scene.score > scene.highScore) {\n                    scene.flashHighScore = scene.score - scene.highScore;\n                    scene.highScore = scene.score;\n                    localStorage.setItem('highscore', `${scene.highScore}`);\n                }\n                explodeAsteroid(scene, asteroid);\n                Assets.SoundPop.current.play();\n                ents.destroy(entityId);\n                breakUpAsteroid(\n                    scene,\n                    asteroid,\n                    bullet.dx * ASTEROID_BREAK_DAMP_FACTOR,\n                    bullet.dy * ASTEROID_BREAK_DAMP_FACTOR\n                );\n                break;\n            }\n        }\n    }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx \n */\nfunction onDraw(ctx, ents) {\n    for (let [_, bullet] of BulletQuery.findAll(ents)) {\n        ctx.translate(bullet.x, bullet.y);\n        ctx.rotate(bullet.rotation);\n        ctx.fillStyle = BULLET_COLOR;\n        ctx.fillRect(\n            -BULLET_RADIUS,\n            -BULLET_RADIUS,\n            BULLET_RADIUS * 4,\n            BULLET_RADIUS * 2\n        );\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        drawCollisionCircle(ctx, bullet.x, bullet.y, BULLET_RADIUS);\n    }\n}\n\nexport function BulletSystem(m) {\n    const ents = useSystem(m, EntityManagerProvider);\n    const { canvas } = useSystem(m, DisplayPortProvider);\n    const scene = useSystem(m, AsteroidGame);\n\n    useNextLevel(m, () => {\n        ents.clear(Bullet);\n    });\n\n    useUpdate(m, ({ deltaTime: dt }) => {\n        onUpdate(dt, scene, canvas, ents);\n    });\n\n    useDraw(m, BULLET_DRAW_LAYER_INDEX, (ctx) => {\n        onDraw(ctx, ents);\n    });\n\n    return {\n        spawnBullet,\n    };\n}\n\n/**\n * @param {AsteroidGame} scene \n * @param {number} x \n * @param {number} y \n * @param {number} dx \n * @param {number} dy \n */\nexport function spawnBullet(scene, x, y, dx, dy) {\n    let [entityId, bullet] = scene.ents.createAndAttach(Bullet);\n    bullet.x = x;\n    bullet.y = y;\n    bullet.dx = dx;\n    bullet.dy = dy;\n    bullet.rotation = Math.atan2(dy, dx);\n    bullet.age = 0;\n    return entityId;\n}\n\n/**\n * @param {AsteroidGame} scene\n */\nexport function countBullets(scene) {\n    return scene.ents.count(Bullet);\n}\n", "import { Random } from '@milque/random';\nimport { AssetRef } from '@milque/asset';\n\nimport { AsteroidGame, useNextLevel } from './AsteroidGame';\nimport { BULLET_SPEED, countBullets, MAX_BULLET_COUNT, spawnBullet } from './Bullet.js';\nimport { explode } from './Explode.js';\nimport { ComponentClass, EntityManager, EntityQuery } from '@milque/scene';\n\nimport { useSystem } from './lib/M.js';\nimport { AssetManagerProvider, DisplayPortProvider, EntityManagerProvider, useDraw, useUpdate } from './main.js';\nimport { MAX_PARTICLE_AGE, spawnParticle } from './Particle.js';\nimport { FLASH_TIME_STEP, wrapAround } from './util.js';\nimport { loadSound } from './SoundLoader.js';\n\nexport const PlayerDeadSound = new AssetRef('start.wav', loadSound);\nexport const PlayerBoomSound = new AssetRef('boom.wav', loadSound);\nexport const PlayerShootSound = new AssetRef('shoot.wav', loadSound);\n\nexport const PLAYER_RADIUS = 5;\nconst PLAYER_MOVE_PARTICLE_OFFSET_RANGE = [-2, 2];\nconst MIN_PLAYER_MOVE_PARTICLE_LIFE_RATIO = 0.1;\nconst MAX_PLAYER_MOVE_PARTICLE_LIFE_RATIO = 0.4;\nconst PLAYER_EXPLODE_PARTICLE_COLORS = [\n    'red',\n    'red',\n    'red',\n    'yellow',\n    'orange',\n];\nexport const PLAYER_MOVE_PARTICLE_COLORS = ['gray', 'darkgray', 'lightgray'];\nconst PLAYER_SHOOT_COOLDOWN = 10;\nconst PLAYER_MOVE_PARTICLE_DAMP_FACTOR = 1.5;\n\nconst PLAYER_MOVE_SPEED = 0.02;\nconst PLAYER_ROT_SPEED = 0.008;\nconst PLAYER_ROT_FRICTION = 0.1;\nconst PLAYER_MOVE_FRICTION = 0.001;\n\nexport const PLAYER_DRAW_LAYER_INDEX = 10;\n\nexport const Player = new ComponentClass('Player', () => ({\n    x: 0, \n    y: 0,\n    rotation: 0,\n    dx: 0,\n    dy: 0,\n    dr: 0,\n    left: 0,\n    right: 0,\n    up: 0,\n    down: 0,\n    fire: 0,\n    cooldown: 0,\n    powerMode: 0,\n}));\nexport const PlayerQuery = new EntityQuery(Player);\n\n/**\n * @param {import('./lib/M').M} m \n */\nexport function PlayerSystem(m) {\n    const { canvas } = useSystem(m, DisplayPortProvider);\n    const ents = useSystem(m, EntityManagerProvider);\n    const scene = useSystem(m, AsteroidGame);\n    const assets = useSystem(m, AssetManagerProvider);\n\n    PlayerBoomSound.load(assets);\n    PlayerDeadSound.load(assets);\n    PlayerShootSound.load(assets);\n\n    let player = spawnPlayer(canvas, ents);\n    scene.player = player;\n\n    useNextLevel(m, () => {\n        player.x = canvas.width / 2;\n        player.y = canvas.height / 2;\n        player.dx = 0;\n        player.dy = 0;\n    });\n\n    useUpdate(m, ({ deltaTime }) => {\n        if (scene.gamePause) {\n            return;\n        }\n        updatePlayer(deltaTime, scene);\n    });\n\n    useDraw(m, PLAYER_DRAW_LAYER_INDEX, (ctx) => {\n        if (!scene.showPlayer) {\n            return;\n        }\n        drawPlayer(ctx, scene);\n    });\n    return player;\n}\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {EntityManager} ents\n */\nfunction spawnPlayer(canvas, ents) {\n    let [_, player] = ents.createAndAttach(Player);\n    player.x = canvas.width / 2;\n    player.y = canvas.height / 2;\n    return player;\n}\n\n/**\n * @param {number} dt \n * @param {AsteroidGame} scene \n */\nfunction updatePlayer(dt, scene) {\n    let [_, player] = PlayerQuery.find(scene.ents);\n    if (!player) {\n        return;\n    }\n\n    // Determine control\n    const rotControl = player.right - player.left;\n    const moveControl = player.down - player.up;\n    const fireControl = player.fire;\n\n    // Calculate velocity\n    player.dx +=\n        moveControl * Math.cos(player.rotation) * PLAYER_MOVE_SPEED;\n    player.dy +=\n        moveControl * Math.sin(player.rotation) * PLAYER_MOVE_SPEED;\n    player.dx *= 1 - PLAYER_MOVE_FRICTION;\n    player.dy *= 1 - PLAYER_MOVE_FRICTION;\n\n    // Calculate angular velocity\n    player.dr += rotControl * PLAYER_ROT_SPEED;\n    player.dr *= 1 - PLAYER_ROT_FRICTION;\n\n    // Calculate position\n    player.x += player.dx;\n    player.y += player.dy;\n    player.rotation += player.dr;\n\n    --player.cooldown;\n\n    // Wrap around\n    wrapAround(scene.canvas, player, PLAYER_RADIUS * 2, PLAYER_RADIUS * 2);\n\n    // Whether to fire a bullet\n    if (fireControl) {\n        shootPlayer(scene, player);\n        scene.flashShootDelta = 1;\n    }\n\n    // Whether to spawn thruster particles\n    if (moveControl) {\n        thrust(\n            scene,\n            player.x,\n            player.y,\n            -moveControl *\n            Math.cos(player.rotation) *\n            PLAYER_MOVE_PARTICLE_DAMP_FACTOR,\n            -moveControl *\n            Math.sin(player.rotation) *\n            PLAYER_MOVE_PARTICLE_DAMP_FACTOR,\n            Random.choose.bind(null, PLAYER_MOVE_PARTICLE_COLORS)\n        );\n    }\n}\n\nfunction drawPlayer(ctx, scene) {\n    let [_, player] = PlayerQuery.find(scene.ents);\n    if (!player) {\n        return;\n    }\n    ctx.translate(player.x, player.y);\n    ctx.rotate(player.rotation);\n    ctx.fillStyle = 'white';\n    let size = PLAYER_RADIUS;\n    ctx.fillRect(-size, -size, size * 2, size * 2);\n    let xOffset = -1;\n    let yOffset = 0;\n    let sizeOffset = 0;\n    if (scene.flashShootDelta > 0) {\n        ctx.fillStyle = `rgb(${200 * scene.flashShootDelta +\n            55 * Math.sin(performance.now() / (PLAYER_SHOOT_COOLDOWN * 2))\n            }, 0, 0)`;\n        scene.flashShootDelta -= FLASH_TIME_STEP;\n        sizeOffset = scene.flashShootDelta * 2;\n        xOffset = scene.flashShootDelta;\n    } else {\n        ctx.fillStyle = 'black';\n    }\n    ctx.fillRect(\n        -size - sizeOffset / 2 + xOffset,\n        -(size / 4) - sizeOffset / 2 + yOffset,\n        size + sizeOffset,\n        size / 2 + sizeOffset\n    );\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n}\n\nexport function shootPlayer(scene, player) {\n    if (countBullets(scene) > MAX_BULLET_COUNT) return;\n    if (player.cooldown > 0) return;\n    if (player.powerMode > 0) {\n        for (let i = -1; i <= 1; ++i) {\n            let rotation = player.rotation + (i * Math.PI) / 4;\n            spawnBullet(\n                scene,\n                player.x - Math.cos(rotation) * PLAYER_RADIUS,\n                player.y - Math.sin(rotation) * PLAYER_RADIUS,\n                -Math.cos(rotation) * BULLET_SPEED + player.dx,\n                -Math.sin(rotation) * BULLET_SPEED + player.dy\n            );\n        }\n        --player.powerMode;\n    } else {\n        spawnBullet(\n            scene,\n            player.x - Math.cos(player.rotation) * PLAYER_RADIUS,\n            player.y - Math.sin(player.rotation) * PLAYER_RADIUS,\n            -Math.cos(player.rotation) * BULLET_SPEED + player.dx,\n            -Math.sin(player.rotation) * BULLET_SPEED + player.dy\n        );\n    }\n    player.cooldown = PLAYER_SHOOT_COOLDOWN;\n    PlayerShootSound.get(scene.assets).play();\n}\n\nexport function killPlayer(scene, player) {\n    scene.gamePause = true;\n    scene.showPlayer = false;\n    explode(\n        scene,\n        player.x,\n        player.y,\n        100,\n        Random.choose.bind(null, PLAYER_EXPLODE_PARTICLE_COLORS)\n    );\n\n    PlayerDeadSound.get(scene.assets).play();\n    PlayerBoomSound.get(scene.assets).play();\n    setTimeout(() => (scene.gameStart = scene.gameWait = true), 1000);\n}\n\nexport function thrust(scene, x, y, dx, dy, color) {\n    if (Random.next() > 0.3) {\n        spawnParticle(\n            scene,\n            x + Random.range(PLAYER_MOVE_PARTICLE_OFFSET_RANGE[0], PLAYER_MOVE_PARTICLE_OFFSET_RANGE[1]),\n            y + Random.range(PLAYER_MOVE_PARTICLE_OFFSET_RANGE[0], PLAYER_MOVE_PARTICLE_OFFSET_RANGE[1]),\n            dx,\n            dy,\n            color,\n            Random.range(\n                MAX_PARTICLE_AGE * MIN_PLAYER_MOVE_PARTICLE_LIFE_RATIO,\n                MAX_PARTICLE_AGE * MAX_PLAYER_MOVE_PARTICLE_LIFE_RATIO\n            )\n        );\n    }\n}\n", "import { Random } from '@milque/random';\nimport { useSystem } from './lib/M';\nimport { DisplayPortProvider, useDraw, useUpdate } from './main';\n\n/**\n * What I learned:\n * - I need access to the current bound canvas, wherever this object\n * is being used.\n * - I should implement all things related to Starfield in here and\n * just expose an interface for the engine to connect to.\n */\n\nexport const STAR_SIZE_RANGE = [2, 4];\nexport const STAR_SPEED_RANGE = [0.3, 1];\nexport const STAR_PARTICLE_COUNT = 30;\nexport const STARFIELD_DRAW_LAYER_INDEX = 1;\n\n/**\n * @param {import('./lib/M').M} m \n */\nexport function StarfieldSystem(m) {\n  const { canvas } = useSystem(m, DisplayPortProvider);\n  const starfield = createStarfield(canvas.width, canvas.height);\n  \n  useUpdate(m, () => {\n    updateStarfield(starfield);\n  });\n\n  useDraw(m, STARFIELD_DRAW_LAYER_INDEX, (ctx) => {\n    renderStarfield(ctx, starfield);\n  });\n}\n\nfunction createStarfield(width, height) {\n  let result = {\n    x: [],\n    y: [],\n    size: [],\n    speed: [],\n    length: 0,\n    width,\n    height,\n  };\n  for (let i = 0; i < STAR_PARTICLE_COUNT; ++i) {\n    result.x.push(Random.range(0, width));\n    result.y.push(Random.range(0, height));\n    result.size.push(Random.range(STAR_SIZE_RANGE[0], STAR_SIZE_RANGE[1]));\n    result.speed.push(Random.range(STAR_SPEED_RANGE[0], STAR_SPEED_RANGE[1]));\n    result.length++;\n  }\n  return result;\n}\n\nfunction renderStarfield(ctx, starfield, color = 'white') {\n  for (let i = 0; i < starfield.length; ++i) {\n    let x = starfield.x[i];\n    let y = starfield.y[i];\n    let size = starfield.size[i];\n\n    let halfSize = size / 2;\n    ctx.fillStyle = color;\n    ctx.fillRect(x - halfSize, y - halfSize, size, size);\n  }\n}\n\nfunction updateStarfield(starfield, dx = 1, dy = 0) {\n  const { length, width, height } = starfield;\n\n  for (let i = 0; i < length; ++i) {\n    let ddx = dx * starfield.speed[i];\n    let ddy = dy * starfield.speed[i];\n\n    starfield.x[i] += ddx;\n    starfield.y[i] += ddy;\n\n    if (ddx < 0) {\n      if (starfield.x[i] < 0) {\n        starfield.x[i] = width;\n        starfield.y[i] = Random.range(0, height);\n      }\n    } else if (ddx > 0) {\n      if (starfield.x[i] > width) {\n        starfield.x[i] = 0;\n        starfield.y[i] = Random.range(0, height);\n      }\n    }\n\n    if (ddy < 0) {\n      if (starfield.y[i] < 0) {\n        starfield.x[i] = Random.range(0, width);\n        starfield.y[i] = height;\n      }\n    } else if (ddy > 0) {\n      if (starfield.y[i] > height) {\n        starfield.x[i] = Random.range(0, width);\n        starfield.y[i] = 0;\n      }\n    }\n  }\n}\n", "/** @typedef {() => void|AfterEffectHandler|Promise<AfterEffectHandler>} EffectHandler */\n/** @typedef {() => void|Promise<void>} AfterEffectHandler */\n\nexport class EffectManager {\n\n    constructor() {\n        /** @type {Array<EffectHandler>} */\n        this.before = [];\n        /** @type {Array<AfterEffectHandler|void>} */\n        this.after = [];\n        this.started = false;\n    }\n\n    /**\n     * @param {EffectHandler} effectHandler\n     */\n    attachEffect(effectHandler) {\n        if (this.started) {\n            throw new Error('Cannot attach effect when already started.');\n        }\n        this.before.push(effectHandler);\n        return this;\n    }\n\n    /**\n     * @param {AfterEffectHandler} afterEffectHandler \n     */\n    attachAfterEffect(afterEffectHandler) {\n        if (this.started) {\n            throw new Error('Cannot attach effect when already started.');\n        }\n        this.after.push(afterEffectHandler);\n        return this;\n    }\n\n    async startEffects() {\n        if (this.started) {\n            throw new Error('Cannot start effects already started.');\n        }\n        this.started = true;\n        let befores = this.before.slice();\n        this.before.length = 0;\n        this.after.push(...await Promise.all(befores.map(effect => effect && effect())));\n    }\n\n    async stopEffects() {\n        if (!this.started) {\n            throw new Error('Cannot stop effects not yet started.');\n        }\n        this.started = false;\n        let afters = this.after.slice().reverse();\n        this.after.length = 0;\n        await Promise.all(afters.map(effect => effect && effect()));\n    }\n}\n", "import { EffectManager } from './EffectManager.js';\n\n/**\n * @template T\n * @typedef {import('./SystemManager').System<T>} System<T>\n */\n/**\n * @template T\n * @typedef {System<T>} SystemInitCallback<T>\n */\n/**\n * @template T\n * @typedef {(state: T) => void} SystemDeadCallback<T>\n */\n/** @typedef {import('./SystemManager').SystemManager} SystemManager */\n/** @typedef {import('./EffectManager').EffectHandler} EffectHandler */\n/** @typedef {import('./EffectManager').AfterEffectHandler} AfterEffectHandler */\n\n/** @template T */\nexport class SystemContext {\n\n    /** @param {SystemContext<?>} ctx */\n    static async initializeContext(ctx) {\n        try {\n            ctx.state = await ctx.initCallback.call({}, ctx);\n        } catch (e) {\n            throw new Error(`Failed to initialize system context '${ctx.name}' with dependencies [${ctx.dependencies.map(dep => dep.name).join(', ')}].\\n\\n${e}`, { cause: e });\n        }\n        return ctx.dependencies;\n    }\n\n    /** @param {SystemContext<?>} ctx */\n    static async initializeEffects(ctx) {\n        await ctx.effects.startEffects();\n    }\n\n    /** @param {SystemContext<?>} ctx */\n    static markDead(ctx) {\n        ctx.dead = true;\n    }\n\n    /** @param {SystemContext<?>} ctx */\n    static async terminateEffects(ctx) {\n        await ctx.effects.stopEffects();\n    }\n\n    /** @param {SystemContext<?>} ctx */\n    static async terminateContext(ctx) {\n        await ctx.deadCallback(ctx.state);\n        ctx.state = null;\n    }\n\n    /**\n     * @param {SystemManager} parent \n     * @param {string} name \n     * @param {SystemInitCallback<T>} initCallback\n     * @param {SystemDeadCallback<T>} deadCallback\n     */\n    constructor(parent, name, initCallback, deadCallback) {\n        this.name = name;\n        /** @type {T} */\n        this.state = null;\n\n        /** @protected */\n        this.parent = parent;\n        /** @protected */\n        this.effects = new EffectManager();\n        /** @protected */\n        this.dead = false;\n\n        /** @protected */\n        this.dependencies = [];\n\n        /** @private */\n        this.initCallback = initCallback;\n        /** @private */\n        this.deadCallback = deadCallback;\n    }\n\n    /**\n     * @param {EffectHandler} callback\n     */\n    before(callback) {\n        this.effects.attachEffect(callback);\n    }\n\n    /**\n     * @param {AfterEffectHandler} callback\n     */\n    after(callback) {\n        this.effects.attachAfterEffect(callback);\n    }\n\n    /**\n     * @template E\n     * @param {System<E>} system\n     * @returns {E}\n     */\n    use(system) {\n        if (this.effects.started) {\n            throw new Error('use() must be called during initialization only.');\n        }\n        if (this.dependencies.indexOf(system) < 0) {\n            this.dependencies.push(system);\n        }\n        return this.parent.getState(system);\n    }\n}\n", "export function assertNotNull(value) {\n    return assert('Must be non-null!', typeof value !== 'undefined' && value !== null, value);\n}\n\nexport function assertTruthy(value) {\n    return assert('Must be truthy!', Boolean(value), value);\n}\n\nexport function assertFalsey(value) {\n    return assert('Must be falsey!', !value, value);\n}\n\nexport function assertNotEmpty(value) {\n    if (typeof value === 'string' || Array.isArray(value)) {\n        return assert('Must be not empty!', value && value.length > 0, value);\n    } else if (typeof value === 'object') {\n        return assert('Must be not empty!', value && Object.keys(value).length > 0, value);\n    } else {\n        return assert('Must be a collection!', false, value);\n    }\n}\n\nexport function assertEmpty(value) {\n    if (typeof value === 'string' || Array.isArray(value)) {\n        return assert('Must be empty!', value && value.length <= 0, value);\n    } else if (typeof value === 'object') {\n        return assert('Must be empty!', value && Object.keys(value).length <= 0, value);\n    } else {\n        return assert('Must be a collection!', false, value);\n    }\n}\n\nexport function assert(message, condition, value) {\n    if (!condition) {\n        throw new Error(`Assertion failed - ${message} But found ${value}.`);\n    }\n    return value;\n}\n", "import { SystemContext } from './SystemContext.js';\nimport { assertNotNull } from '../Assertion.js';\n\n/**\n * @template T\n * @typedef {(m: SystemContext<T>) => void|T|Promise<T>} System<T>\n */\n\nexport class SystemManager {\n\n    constructor() {\n        /**\n         * @protected\n         * @type {Array<SystemContext<?>>}\n         */\n        this.pendingSystems = [];\n        /**\n         * @protected\n         * @type {Array<SystemContext<?>>}\n         */\n        this.activeSystems = [];\n    }\n\n    /**\n     * @template T\n     * @param {any} handle \n     * @param {import('./SystemContext.js').SystemInitCallback<T>} [initCallback] \n     * @param {import('./SystemContext.js').SystemDeadCallback<T>} [deadCallback]\n     */\n    register(handle, initCallback = undefined, deadCallback = undefined) {\n        assertNotNull(handle);\n\n        // Resolve handle.\n        let name;\n        if (typeof handle === 'function') {\n            name = /** @type {Function} */ (handle).name;\n        } else if (typeof handle === 'object') {\n            if ('name' in handle) {\n                name = handle.name;\n            } else {\n                throw new Error('Invalid handle for system - missing name.');\n            }\n        } else {\n            // Use handle as is :)\n            name = handle;\n        }\n\n        // Resolve init callback.\n        if (!initCallback) {\n            if (typeof handle === 'function') {\n                initCallback = handle;\n            } else {\n                initCallback = () => {};\n            }\n        }\n\n        // Resolve dead callback.\n        if (!deadCallback) {\n            deadCallback = () => {};\n        }\n\n        let ctx = new SystemContext(this, name, initCallback, deadCallback);\n        this.pendingSystems.push(ctx);\n        return this;\n    }\n\n    /**\n     * @param {any} handle\n     */\n    unregister(handle) {\n        let i = this.pendingSystems.findIndex(ctx => ctx.name === handle);\n        if (i >= 0) {\n            this.pendingSystems.splice(i, 1);\n        }\n        return this;\n    }\n\n    async start() {\n        let created = this.pendingSystems.slice();\n        // Prepare for active\n        this.pendingSystems.length = 0;\n        // Connect systems\n        for (let ctx of created) {\n            this.activeSystems.push(ctx);\n            await SystemContext.initializeContext(ctx);\n        }\n        // Initialize systems\n        for (let ctx of created) {\n            await SystemContext.initializeEffects(ctx);\n        }\n        return this;\n    }\n\n    async stop() {\n        let deleted = this.activeSystems.slice().reverse();\n        // Prepare for death\n        deleted.forEach(SystemContext.markDead);\n        // Terminate systems\n        for (let ctx of deleted) {\n            await SystemContext.terminateEffects(ctx);\n        }\n        // Disconnect systems\n        for (let ctx of deleted) {\n            await SystemContext.terminateContext(ctx);\n            let i = this.activeSystems.indexOf(ctx);\n            if (i >= 0) {\n                this.activeSystems.splice(i, 1);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @template T\n     * @param {System<T>} system\n     * @returns {T}\n     */\n    getState(system) {\n        let ctx = this.activeSystems.find(ctx => ctx.name === system.name);\n        if (!ctx) {\n            return null;\n        }\n        return /** @type {T} */ (ctx.state);\n    }\n}\n", "import { DisplayPort } from '@milque/display';\nimport { InputPort } from '@milque/input';\nimport { AssetManager, cacheAssetPackAsRaw } from '@milque/asset';\nimport { EntityManager, EventTopic, PriorityEventTopic } from '@milque/scene';\n\nimport { Assets, loadAssets } from './Assets.js';\nimport * as Inputs from './Inputs.js';\n\nimport { PlayerSystem } from './Player.js';\nimport { ParticleSystem } from './Particle.js';\nimport { PowerUpSystem } from './PowerUp.js';\nimport { BulletSystem } from './Bullet.js';\n\nimport { StarfieldSystem } from './Starfield.js';\nimport { createAnimationFrameLoop, useSystem } from './lib/M';\nimport { SystemManager } from './lib/system/SystemManager.js';\nimport { AsteroidGame, NextLevelEvent } from './AsteroidGame.js';\nimport { AsteroidSystem } from './Asteroid.js';\n\n\n/** @typedef {{ deltaTime: number, currentTime: number }} UpdateEventAttachment */\n/** @type {EventTopic<UpdateEventAttachment>} */\nexport const EarlyUpdateEvent = new EventTopic();\n/** @type {EventTopic<UpdateEventAttachment>} */\nexport const UpdateEvent = new EventTopic();\n/** @type {EventTopic<UpdateEventAttachment>} */\nexport const LateUpdateEvent = new EventTopic();\n\n/** @typedef {CanvasRenderingContext2D} DrawEventAttachment */\n/** @type {PriorityEventTopic<DrawEventAttachment>} */\nexport const DrawEvent = new PriorityEventTopic();\n\nexport async function main() {\n  const m = await init();\n  requestAnimationFrame(createAnimationFrameLoop((e) => {\n    EarlyUpdateEvent.dispatchImmediately(e.detail);\n    UpdateEvent.dispatchImmediately(e.detail);\n    DrawEvent.dispatchImmediately(m.getState(DisplayPortProvider).ctx);\n    LateUpdateEvent.dispatchImmediately(e.detail);\n  }));\n}\n\nasync function init() {\n  console.log('Loading...');\n  await loadAssets();\n  console.log('...loading complete!');\n\n  const systemManager = new SystemManager();\n  systemManager\n    .register(DisplayPortProvider)\n    .register(InputPortProvider)\n    .register(EntityManagerProvider, undefined, (state) => state.reset())\n    .register(AsteroidGame)\n    .register(StarfieldSystem)\n    .register(ParticleSystem)\n    .register(PlayerSystem)\n    .register(BulletSystem)\n    .register(PowerUpSystem)\n    .register(AsteroidSystem);\n  return await systemManager.start();\n}\n\n/**\n * @param {AsteroidGame} scene \n */\nexport function nextLevel(scene) {\n  scene.level++;\n  scene.gamePause = false;\n  scene.showPlayer = true;\n\n  NextLevelEvent.dispatchImmediately(scene);\n\n  if (!Assets.BackgroundMusic.current.isPlaying()) {\n    Assets.BackgroundMusic.current.play({ loop: true });\n  }\n}\n\nexport async function AssetManagerProvider(m) {\n  const assets = new AssetManager();\n  await cacheAssetPackAsRaw(assets, 'res.pack');\n  return assets;\n}\n\nexport function InputPortProvider() {\n  /** @type {InputPort} */\n  const inputs = document.querySelector('#inputs');\n  const ctx = inputs.getContext('axisbutton');\n  ctx.bindBindings(Object.values(Inputs));\n\n  EarlyUpdateEvent.on(({ currentTime: now }) => {\n    ctx.poll(now);\n  });\n  return { inputs, ctx };\n}\n\nexport function DisplayPortProvider() {\n  /** @type {DisplayPort} */\n  const display = document.querySelector('#display');\n  const canvas = display.canvas;\n  const ctx = canvas.getContext('2d');\n  return { display, canvas, ctx };\n}\n\nexport function EntityManagerProvider() {\n  let state = new EntityManager();\n  UpdateEvent.on(() => state.flush());\n  return state;\n}\n\nexport function useEarlyUpdate(m, updateCallback) {\n  useEventTopic(m, EarlyUpdateEvent, updateCallback);\n}\n\nexport function useUpdate(m, updateCallback) {\n  useEventTopic(m, UpdateEvent, updateCallback);\n}\n\nexport function useDraw(m, layerIndex, drawCallback) {\n  m.before(() => {\n    DrawEvent.on(layerIndex, drawCallback);\n    return () => {\n      DrawEvent.off(drawCallback);\n    };\n  });\n}\n\nexport function useLateUpdate(m, updateCallback) {\n  useEventTopic(m, LateUpdateEvent, updateCallback);\n}\n\nexport function useEventTopic(m, eventTopic, callback) {\n  m.before(() => {\n    eventTopic.on(callback);\n    return () => {\n      eventTopic.off(callback);\n    };\n  })\n}\n\nexport function useCanvas(m) {\n  let displayPort = useSystem(m, DisplayPortProvider);\n  return displayPort.canvas;\n}\n", "import '@milque/display';\nimport '@milque/input';\nimport '@milque/asset';\nimport './error.js';\n\nimport { main } from './asteroid/main.js';\nwindow.addEventListener('DOMContentLoaded', main);\n"],
  "mappings": "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",
  "names": []
}
