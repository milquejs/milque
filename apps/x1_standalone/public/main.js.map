{
  "version": 3,
  "sources": ["node-modules-polyfills:path", "node-modules-polyfills-commonjs:path", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/constants.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/utils.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/scan.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/parse.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/picomatch.js", "../../../common/temp/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/index.js", "../../../libs/display/src/DisplayPort.js", "../../../libs/input/src/state/InputState.js", "../../../libs/input/src/state/AxisState.js", "../../../libs/input/src/state/ButtonState.js", "../../../libs/input/src/keycode/KeyCode.js", "../../../libs/input/src/keycode/KeyCodes.js", "../../../libs/input/src/binding/InputBinding.js", "../../../libs/input/src/keycode/KeyCodeHelper.js", "../../../libs/input/src/binding/AxisBinding.js", "../../../libs/input/src/binding/ButtonBinding.js", "../../../libs/input/src/binding/AxisButtonBinding.js", "../../../libs/input/src/device/InputDevice.js", "../../../libs/input/src/device/KeyboardDevice.js", "../../../libs/input/src/device/MouseDevice.js", "../../../libs/input/src/inputcode/InputCode.js", "../../../libs/input/src/AutoPoller.js", "../../../libs/input/src/DeviceInputAdapter.js", "../../../libs/input/src/InputBindings.js", "../../../libs/input/src/InputContext.js", "../../../libs/input/src/inputport/InputPort.js", "../../../libs/input/src/Keyboard.js", "../../../libs/input/src/Mouse.js", "../../../libs/asset/src/GlobExp.js", "../../../libs/asset/src/AssetStore.js", "../../../libs/asset/src/AssetManager.js", "../../../libs/asset/src/AssetRef.js", "../../../libs/asset/src/AssetHelper.js", "../../../libs/asset/src/loaders/AtlasLoader.js", "../../../libs/asset/src/loaders/BMFontLoader.js", "../../../libs/asset/src/loaders/ImageLoader.js", "../../../libs/asset/src/loaders/OBJLoader.js", "../../../libs/asset/src/loaders/TextLoader.js", "../../../libs/asset/src/loaders/AudioBufferLoader.js", "../src/error.js", "../src/Inputs.js", "../src/Assets.js", "../src/toaster/Toaster.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/common.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat4.js", "../../../common/temp/node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/vec3.js", "../../../libs/scene/src/camera/CameraHelper.js", "../../../libs/scene/src/camera/Camera.js", "../../../libs/scene/src/camera/PerspectiveCamera.js", "../../../libs/scene/src/camera/OrthographicCamera.js", "../../../libs/scene/src/camera/FirstPersonCameraController.js", "../../../libs/scene/src/scenegraph/SceneGraph.js", "../../../libs/scene/src/entity/ComponentClass.js", "../../../libs/scene/src/entity/QueryManager.js", "../../../libs/scene/src/entity/EntityManager.js", "../../../libs/scene/src/entity/EntityTemplate.js", "../../../libs/scene/src/entity/Query.js", "../../../libs/scene/src/topic/Topic.js", "../../../libs/scene/src/topic/CommandTopic.js", "../../../libs/scene/src/topic/EventTopic.js", "../../../libs/scene/src/topic/PriorityEventTopic.js", "../../../libs/scene/src/loop/AnimationFrameLoop.js", "../../../libs/mogli/src/GLHelper.js", "../../../libs/mogli/src/buffer/BufferBuilder.js", "../../../libs/mogli/src/buffer/BufferInfo.js", "../../../libs/mogli/src/buffer/BufferEnums.js", "../../../libs/mogli/src/buffer/helper/BufferHelper.js", "../../../libs/mogli/src/buffer/BufferInfoBuilder.js", "../../../libs/mogli/src/program/helper/ProgramActives.js", "../../../libs/mogli/src/program/ProgramAttributeHelper.js", "../../../libs/mogli/src/program/ProgramAttributeFunctions.js", "../../../libs/mogli/src/program/ProgramAttributeInfo.js", "../../../libs/mogli/src/program/helper/ProgramHelper.js", "../../../libs/mogli/src/program/ProgramUniformFunctions.js", "../../../libs/mogli/src/program/ProgramUniformInfo.js", "../../../libs/mogli/src/program/helper/ProgramInfoHelper.js", "../../../libs/mogli/src/buffer/helper/BufferInfoHelper.js", "../../../libs/mogli/src/program/ProgramInfo.js", "../../../libs/mogli/src/program/ProgramBuilder.js", "../../../libs/mogli/src/program/ProgramInfoBuilder.js", "../../../libs/mogli/src/program/ProgramUniformEnums.js", "../../../libs/mogli/src/program/ProgramAttributeEnums.js", "../src/ShaderBasic.js", "../src/geometry/GeometryCylinder.js", "../src/ecs/SystemManager.js", "../src/ecs/EntityManager.js", "../src/geometry/Geometry.js", "../src/main.js"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n", "\nconst polyfill = require('path')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n", "'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n", "'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n", "'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n", "'use strict';\n\nmodule.exports = require('./lib/picomatch');\n", "import INNER_HTML from './DisplayPort.template.html';\nimport INNER_STYLE from './DisplayPort.module.css';\n\n/**\n * No scaling is applied. The canvas size maintains a\n * 1:1 pixel ratio to the defined display dimensions.\n */\nexport const MODE_NOSCALE = 'noscale';\n\n/**\n * No scaling is applied, but the element fills the\n * entire viewport. The canvas size maintains a 1:1\n * pixel ratio to the defined display dimensions and\n * is centered inside the scaled element.\n */\nexport const MODE_CENTER = 'center';\n\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio. This will adjust\n * canvas resolution to fit the viewport dimensions.\n * In other words, the canvas pixel size remains\n * constant, but the number of pixels in the canvas\n * will increase or decrease to compensate. This is\n * the default scaling mode.\n */\nexport const MODE_FIT = 'fit';\n\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio and pixel\n * resolution. This will upscale and downscale the\n * pixel size depending on the viewport dimentions\n * in order to preserve the canvas pixel count. In\n * other words, the number of pixels in the canvas\n * remain constant but appear larger or smaller to\n * compensate.\n */\nexport const MODE_SCALE = 'scale';\n\n/**\n * Resizes the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio nor pixel\n * count (adds and removes pixels to fill size). If you\n * care about aspect ratio but not pixel count, consider\n * using 'fit' mode instead.\n */\nexport const MODE_FILL = 'fill';\n\n/**\n * Scales the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio but\n * does preserve pixel count (by stretching the pixel\n * size). If you care about aspect ratio and pixel\n * count, consider using 'scale' mode instead.\n */\nexport const MODE_STRETCH = 'stretch';\n\n/**\n * The default display x dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_WIDTH = 300;\n/**\n * The default display y dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_HEIGHT = 150;\n\n/** The default display scaling mode. */\nconst DEFAULT_MODE = MODE_FIT;\n\n/** The default resize timeout */\nconst DELAYED_RESIZE_MILLIS = 200;\n\n/**\n * @typedef {CustomEvent} FrameEvent\n * @property {number} detail.now\n * The current time in milliseconds.\n * @property {number} detail.prevTime\n * The previous frame time in milliseconds.\n * @property {number} detail.deltaTime\n * The time taken between the current and previous\n * frame in milliseconds.\n * @property {HTMLCanvasElement} detail.canvas\n * The canvas element.\n */\n\n/**\n * @typedef {MODE_CENTER\n *          |MODE_FIT\n *          |MODE_NOSCALE\n *          |MODE_SCALE\n *          |MODE_FILL\n *          |MODE_STRETCH} DisplayScaling\n */\n\n/**\n * A canvas that can scale and stretch with respect to the aspect ratio to fill\n * the viewport size.\n *\n * To start drawing, you should get the canvas context like so:\n *\n * For Canvas2D:\n * ```\n * const display = document.querySelector('display-port');\n * const ctx = display.canvas.getContext('2d');\n * ctx.drawText(0, 0, 'Hello World!');\n * ```\n *\n * For WebGL:\n * ```\n * const display = document.querySelector('display-port');\n * const gl = display.canvas.getContext('webgl');\n * gl.clear(gl.COLOR_BUFFER_BIT);\n * ```\n *\n * Usually, you would want to set the `width` and `height` attributes to define\n * the canvas size and aspect ratio in pixels. You can also change the scaling\n * behavior by setting the `mode` attribute.\n *\n * And for convenience, this element also dispatches a `frame` event every animation\n * frame (60 fps). This is basically the same as calling `requestAnimationFrame()`.\n *\n * NOTE: The viewport size is usually the parent container size. However, in the\n * rare case the element must be nested in a child container, you can define the\n * boolean attribute `full` to force the dimensions to be the actual window size.\n */\nexport class DisplayPort extends HTMLElement {\n\n  /**\n   * @param {object} [opts]\n   * @param {HTMLElement} [opts.root]\n   * @param {string} [opts.id]\n   * @param {DisplayScaling} [opts.mode]\n   * @param {number} [opts.width]\n   * @param {number} [opts.height]\n   * @param {boolean} [opts.debug]\n   */\n  static create(opts = {}) {\n    const {\n      root = document.body,\n      id = undefined,\n      mode = DEFAULT_MODE,\n      width = DEFAULT_WIDTH,\n      height = DEFAULT_HEIGHT,\n      debug = false\n    } = opts || {};\n    let result = new DisplayPort();\n    result.id = id;\n    result.mode = mode;\n    result.width = width;\n    result.height = height;\n    result.debug = debug;\n    root.appendChild(result);\n    return result;\n  }\n\n  /** @private */\n  static get [Symbol.for('templateNode')]() {\n    let t = document.createElement('template');\n    t.innerHTML = INNER_HTML;\n    Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n    return t;\n  }\n\n  /** @private */\n  static get [Symbol.for('styleNode')]() {\n    let t = document.createElement('style');\n    t.innerHTML = INNER_STYLE;\n    Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n    return t;\n  }\n\n  static define(customElements = window.customElements) {\n    customElements.define('display-port', this);\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  static get observedAttributes() {\n    return [\n      'debug',\n      'disabled',\n      // 'mode',\n      'width',\n      'height',\n      'onframe',\n      // Built-in attributes\n      'id',\n      'class',\n    ];\n  }\n\n  /**\n   * The scaling mode.\n   * - `noscale`: Do not perform scaling.\n   * - `center`: Do not perform scaling but stretch the display to fill the entire\n   * viewport. The unscaled canvas is centered.\n   * - `fit`: Resize resolution to fill the entire viewport and maintains the aspect\n   * ratio. The pixel resolution is changed. This is the default behavior.\n   * - `fill`: Resize resolution to fill the entire viewport but does not maintain\n   * aspect ratio.\n   * - `stretch`: Perform scaling to fill the entire viewport but does not maintain\n   * aspect ratio.\n   * - `scale`: Perform scaling to fill the entire viewport and maintains the\n   * aspect ratio and resolution. The pixel resolution remains constant.\n   * @returns {DisplayScaling} The current scaling mode.\n   */\n  get mode() {\n    return /** @type {DisplayScaling} */ (this.getAttribute('mode'));\n  }\n\n  set mode(value) {\n    this.setAttribute('mode', value);\n  }\n\n  /**\n   * Set to true for debug information.\n   * @returns {boolean}\n   */\n  get debug() {\n    return this._debug;\n  }\n\n  set debug(value) {\n    this.toggleAttribute('debug', value);\n  }\n\n  /**\n   * If disabled, animation frames will not fire.\n   * @returns {boolean}\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  /**\n   * The canvas width in pixels. This determines the aspect ratio and canvas buffer size.\n   * @returns {number}\n   */\n  get width() {\n    return this._width;\n  }\n\n  set width(value) {\n    this.setAttribute('width', String(value));\n  }\n\n  /**\n   * The canvas height in pixels. This determines the aspect ratio and canvas buffer size.\n   */\n  get height() {\n    return this._height;\n  }\n\n  set height(value) {\n    this.setAttribute('height', String(value));\n  }\n\n  /** Fired every animation frame. */\n  get onframe() {\n    return this._onframe;\n  }\n\n  set onframe(value) {\n    if (this._onframe) this.removeEventListener('frame', this._onframe);\n    this._onframe = value;\n    if (this._onframe) this.addEventListener('frame', value);\n  }\n\n  constructor() {\n    super();\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('templateNode')].content.cloneNode(true)\n    );\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('styleNode')].cloneNode(true)\n    );\n\n    /** @private */\n    this._canvasElement = shadowRoot.querySelector('canvas');\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this._contentElement = shadowRoot.querySelector('.content');\n    /**\n     * @private\n     * @type {HTMLSlotElement}\n     */\n    this._innerElement = shadowRoot.querySelector('#inner');\n\n    /** @private */\n    this._titleElement = shadowRoot.querySelector('#title');\n    /** @private */\n    this._fpsElement = shadowRoot.querySelector('#fps');\n    /** @private */\n    this._dimensionElement = shadowRoot.querySelector('#dimension');\n\n    /** @private */\n    this._debug = false;\n    /** @private */\n    this._disabled = false;\n    /** @private */\n    this._width = DEFAULT_WIDTH;\n    /** @private */\n    this._height = DEFAULT_HEIGHT;\n    /** @private */\n    this._onframe = undefined;\n\n    /** @private */\n    this._animationRequestHandle = 0;\n    /** @private */\n    this._prevAnimationFrameTime = 0;\n\n    /** @private */\n    this._resizeTimeoutHandle = 0;\n    /** @private */\n    this._resizeCanvasWidth = 0;\n    /** @private */\n    this._resizeCanvasHeight = 0;\n\n    /** @private */\n    this._frameEvent = new CustomEvent('frame', {\n      composed: true,\n      bubbles: false,\n      detail: {\n        now: 0,\n        prevTime: 0,\n        deltaTime: 0,\n        canvas: this._canvasElement,\n      },\n    });\n    /** @private */\n    this._resizeEvent = new CustomEvent('resize', {\n      composed: true,\n      bubbles: false,\n      detail: {\n        width: 0,\n        height: 0,\n      },\n    });\n\n    /** @private */\n    this.update = this.update.bind(this);\n    /** @private */\n    this.onDelayCanvasResize = this.onDelayCanvasResize.bind(this);\n  }\n\n  /** Get the canvas element. */\n  get canvas() {\n    return this._canvasElement;\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  connectedCallback() {\n    upgradeProperty(this, 'mode');\n    upgradeProperty(this, 'debug');\n    upgradeProperty(this, 'disabled');\n    upgradeProperty(this, 'width');\n    upgradeProperty(this, 'height');\n    upgradeProperty(this, 'onframe');\n\n    if (!this.hasAttribute('mode')) {\n      this.setAttribute('mode', DEFAULT_MODE);\n    }\n\n    // Allows this element to be focusable\n    if (!this.hasAttribute('tabindex')) {\n      this.setAttribute('tabindex', '0');\n    }\n\n    this.updateCanvasSize(true);\n    this.resume();\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  disconnectedCallback() {\n    this.pause();\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  attributeChangedCallback(attribute, prev, value) {\n    switch (attribute) {\n      case 'debug':\n        {\n          this._debug = value !== null;\n        }\n        break;\n      case 'disabled':\n        {\n          this._disabled = value !== null;\n        }\n        break;\n      case 'width':\n        {\n          this._width = Number(value);\n        }\n        break;\n      case 'height':\n        {\n          this._height = Number(value);\n        }\n        break;\n      case 'onframe':\n        {\n          this.onframe = new Function(\n            'event',\n            'with(document){with(this){' + value + '}}'\n          ).bind(this);\n        }\n        break;\n    }\n\n    switch (attribute) {\n      case 'disabled':\n        if (value) {\n          this.update(0);\n          this.pause();\n        } else {\n          this.resume();\n        }\n        break;\n      // NOTE: For debugging purposes...\n      case 'id':\n      case 'class':\n        this._titleElement.innerHTML = `display-port${\n          this.className ? '.' + this.className : ''\n        }${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n        break;\n      case 'debug':\n        this._titleElement.classList.toggle('hidden', value);\n        this._fpsElement.classList.toggle('hidden', value);\n        this._dimensionElement.classList.toggle('hidden', value);\n        break;\n    }\n  }\n\n  /**\n   * @param {'2d'|'webgl'|'webgl2'} [contextId]\n   * @param {CanvasRenderingContext2DSettings} [options]\n   */\n  getContext(contextId = '2d', options = undefined) {\n    return this._canvasElement.getContext(contextId, options);\n  }\n\n  /** Pause animation of the display frames. */\n  pause() {\n    window.cancelAnimationFrame(this._animationRequestHandle);\n  }\n\n  /** Resume animation of the display frames. */\n  resume() {\n    this._animationRequestHandle = window.requestAnimationFrame(this.update);\n  }\n\n  /** @private */\n  update(now) {\n    this._animationRequestHandle = window.requestAnimationFrame(this.update);\n    this.updateCanvasSize(false);\n    const deltaTime = now - this._prevAnimationFrameTime;\n    this._prevAnimationFrameTime = now;\n\n    // NOTE: For debugging purposes...\n    if (this._debug) {\n      // Update FPS...\n      const frames =\n        deltaTime <= 0\n          ? '--'\n          : String(Math.round(1000 / deltaTime)).padStart(2, '0');\n      if (this._fpsElement.textContent !== frames) {\n        this._fpsElement.textContent = frames;\n      }\n\n      // Update dimensions...\n      const mode = this.mode;\n      if (mode === MODE_NOSCALE) {\n        let result = `${this._width}x${this._height}`;\n        if (this._dimensionElement.textContent !== result) {\n          this._dimensionElement.textContent = result;\n        }\n      } else {\n        let result = `${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;\n        if (this._dimensionElement.textContent !== result) {\n          this._dimensionElement.textContent = result;\n        }\n      }\n    }\n\n    let event = this._frameEvent;\n    let detail = event.detail;\n    detail.now = now;\n    detail.prevTime = this._prevAnimationFrameTime;\n    detail.deltaTime = deltaTime;\n    this.dispatchEvent(this._frameEvent);\n  }\n\n  /** @private */\n  onDelayCanvasResize() {\n    this._resizeTimeoutHandle = null;\n    this.updateCanvasSize(true);\n  }\n\n  delayCanvasResize(canvasWidth, canvasHeight) {\n    if (\n      canvasWidth !== this._resizeCanvasWidth ||\n      canvasHeight !== this._resizeCanvasHeight\n    ) {\n      // Only call onDelayCanvasResize, if new canvas size actually changed since last time.\n      this._resizeCanvasWidth = canvasWidth;\n      this._resizeCanvasHeight = canvasHeight;\n      if (this._resizeTimeoutHandle) {\n        window.clearTimeout(this._resizeTimeoutHandle);\n      }\n      this._resizeTimeoutHandle = window.setTimeout(\n        this.onDelayCanvasResize,\n        DELAYED_RESIZE_MILLIS\n      );\n    }\n  }\n\n  /** @private */\n  updateCanvasSize(force = true) {\n    const clientRect = this.shadowRoot.host.getBoundingClientRect();\n    const clientWidth = clientRect.width;\n    const clientHeight = clientRect.height;\n\n    let canvas = this._canvasElement;\n    let canvasWidth = this._width;\n    let canvasHeight = this._height;\n\n    const mode = this.mode;\n    if (mode === MODE_STRETCH || mode === MODE_FILL) {\n      canvasWidth = clientWidth;\n      canvasHeight = clientHeight;\n    } else if (mode !== MODE_NOSCALE) {\n      if (\n        clientWidth < canvasWidth ||\n        clientHeight < canvasHeight ||\n        mode === MODE_FIT ||\n        mode == MODE_SCALE\n      ) {\n        let ratioX = clientWidth / canvasWidth;\n        let ratioY = clientHeight / canvasHeight;\n\n        if (ratioX < ratioY) {\n          canvasWidth = clientWidth;\n          canvasHeight = canvasHeight * ratioX;\n        } else {\n          canvasWidth = canvasWidth * ratioY;\n          canvasHeight = clientHeight;\n        }\n      }\n    }\n\n    canvasWidth = Math.floor(canvasWidth);\n    canvasHeight = Math.floor(canvasHeight);\n\n    if (typeof force === 'undefined') {\n      force =\n        canvas.clientWidth !== canvasWidth ||\n        canvas.clientHeight !== canvasHeight;\n    }\n\n    if (!force) {\n      this.delayCanvasResize(canvasWidth, canvasHeight);\n      return;\n    }\n\n    let fontSize =\n      Math.min(canvasWidth / this._width, canvasHeight / this._height) * 0.5;\n    // NOTE: Update the inner container for the default slotted children.\n    // To anchor children outside the canvas, use the slot named 'frame'.\n    this._innerElement.style.fontSize = `font-size: ${fontSize}em`;\n    if (force) {\n      if (mode === MODE_SCALE) {\n        canvas.width = this._width;\n        canvas.height = this._height;\n      } else if (mode !== MODE_STRETCH) {\n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n      }\n      let contentStyle = this._contentElement.style;\n      contentStyle.width = `${canvasWidth}px`;\n      contentStyle.height = `${canvasHeight}px`;\n\n      if (mode === MODE_FIT || mode === MODE_FILL) {\n        this._width = canvasWidth;\n        this._height = canvasHeight;\n      }\n\n      let event = this._resizeEvent;\n      let detail = event.detail;\n      detail.width = canvasWidth;\n      detail.height = canvasHeight;\n      this.dispatchEvent(this._resizeEvent);\n    }\n  }\n}\nDisplayPort.define();\n\nfunction upgradeProperty(element, propertyName) {\n  if (Object.prototype.hasOwnProperty.call(element, propertyName)) {\n    let value = element[propertyName];\n    delete element[propertyName];\n    element[propertyName] = value;\n  }\n}\n", "/**\n * @typedef {number} BindingIndex\n *\n * @typedef BindingOptions\n * @property {boolean} inverted\n *\n * @typedef InputReadOnly\n * @property {number} value\n * @property {boolean} polling\n */\n\nexport class InputState {\n  get polling() {\n    let dt = performance.now() - this._lastPollingTime;\n    return dt < 1_000;\n  }\n\n  /** @abstract */\n  get value() {\n    return 0;\n  }\n  \n  get size() {\n    return this._size;\n  }\n\n  /**\n   * @abstract\n   * @param {number} size The initial binding state size.\n   */\n  constructor(size) {\n    /** @private */\n    this._size = size;\n    /** @private */\n    this._lastPollingTime = Number.MIN_SAFE_INTEGER;\n  }\n\n  /**\n   * Called to internally resize to accomodate more/less\n   * binding states.\n   *\n   * @protected\n   * @param {number} newSize\n   */\n  resize(newSize) {\n    this._size = newSize;\n  }\n\n  /**\n   * @abstract\n   * @param {BindingIndex} code\n   * @returns {number}\n   */\n  // eslint-disable-next-line no-unused-vars\n  getState(code) {\n    throw new Error('Missing implementation.');\n  }\n\n  /**\n   * @abstract\n   * @param {BindingIndex} code\n   * @param {number} value\n   * @param {number} delta\n   */\n  // eslint-disable-next-line no-unused-vars\n  onUpdate(code, value, delta) {\n    throw new Error('Missing implementation.');\n  }\n\n  /**\n   * @abstract\n   * @param {BindingIndex} code\n   * @param {number} value\n   */\n  // eslint-disable-next-line no-unused-vars\n  onStatus(code, value) {\n    throw new Error('Missing implementation.');\n  }\n\n  /**\n   * Called to poll all bound states.\n   *\n   * @param {number} now\n   */\n  onPoll(now) {\n    this._lastPollingTime = now;\n  }\n\n  /**\n   * Called to bind a state to the given binding code.\n   *\n   * @param {BindingIndex} code\n   * @param {BindingOptions} [opts]\n   */\n  // eslint-disable-next-line no-unused-vars\n  onBind(code, opts = undefined) {\n    if (code >= this._size) {\n      this.resize(code + 1);\n    }\n  }\n\n  /**\n   * Called to unbind all states.\n   */\n  onUnbind() {\n    this.resize(0);\n  }\n}\n", "import { InputState } from './InputState.js';\n\n/**\n * @typedef {import('./InputState.js').BindingIndex} BindingIndex The binding index\n * @typedef {import('./InputState.js').BindingOptions} BindingOptions The binding options\n *\n * @typedef AxisBindingState\n * @property {number} value\n * @property {number} delta\n * @property {boolean} inverted\n *\n * @typedef AxisReadOnly\n * @property {number} value\n * @property {number} delta\n * @property {boolean} polling\n */\n\nexport class AxisState extends InputState {\n  /** @returns {AxisBindingState} */\n  static createAxisBindingState() {\n    return {\n      value: 0,\n      delta: 0,\n      inverted: false,\n    };\n  }\n\n  /** @returns {number} */\n  get delta() {\n    return this._delta;\n  }\n\n  /**\n   * @override\n   * @returns {number}\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @param {number} [size]\n   */\n  constructor(size = 0) {\n    super(size);\n    let state = new Array();\n    let c = /** @type {typeof AxisState} */ (this.constructor);\n    for (let i = 0; i < size; ++i) {\n      state.push(c.createAxisBindingState());\n    }\n    /**\n     * @private\n     * @type {Array<AxisBindingState>}\n     */\n    this._state = state;\n    /** @private */\n    this._value = 0;\n    /** @private */\n    this._delta = 0;\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  resize(newSize) {\n    let oldState = this._state;\n    let oldSize = oldState.length;\n    let newState;\n    if (newSize <= oldSize) {\n      newState = oldState.slice(0, newSize);\n    } else {\n      newState = oldState;\n      // Fill with new states\n      let c = /** @type {typeof AxisState} */ (this.constructor);\n      for (let i = oldSize; i < newSize; ++i) {\n        newState.push(c.createAxisBindingState());\n      }\n    }\n    this._state = newState;\n    super.resize(newSize);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @returns {number}\n   */\n  getState(code) {\n    return this._state[code].value;\n  }\n\n  /**\n   * @override\n   * @param {number} now\n   */\n  onPoll(now) {\n    let state = this._state;\n    let accumulatedValue = 0;\n    let accumulatedDelta = 0;\n    const len = state.length;\n    for (let i = 0; i < len; ++i) {\n      let value = state[i];\n      accumulatedValue += value.value * (value.inverted ? -1 : 1);\n      accumulatedDelta += value.delta;\n      state[i].delta = 0;\n    }\n    this._value = accumulatedValue;\n    this._delta = accumulatedDelta;\n    super.onPoll(now);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {number} value\n   * @param {number} delta\n   */\n  onUpdate(code, value, delta) {\n    if (typeof value === 'undefined') {\n      this.onAxisChange(code, delta);\n    } else {\n      this.onAxisMove(code, value, delta);\n    }\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {number} value\n   */\n  onStatus(code, value) {\n    this.onAxisStatus(code, value);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {BindingOptions} [opts]\n   */\n  onBind(code, opts = undefined) {\n    super.onBind(code, opts);\n    const { inverted = false } = opts || {};\n    let state = this._state;\n    state[code].inverted = inverted;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   * @param {number} x\n   * @param {number} dx\n   */\n  onAxisMove(code, x, dx) {\n    let state = this._state[code];\n    state.value = x;\n    state.delta += dx;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   * @param {number} dx\n   */\n  onAxisChange(code, dx) {\n    let state = this._state[code];\n    state.value += dx;\n    state.delta += dx;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   * @param {number} x\n   */\n  onAxisStatus(code, x) {\n    let state = this._state[code];\n    let prev = state.value;\n    state.value = x;\n    state.delta = x - prev;\n  }\n}\n", "import { InputState } from './InputState.js';\n\n/**\n * @typedef {import('./InputState.js').BindingIndex} BindingIndex\n * @typedef {import('./InputState.js').BindingOptions} BindingOptions\n *\n * @typedef ButtonReadOnly\n * @property {number} value\n * @property {boolean} pressed\n * @property {boolean} repeated\n * @property {boolean} released\n * @property {boolean} down\n * @property {boolean} polling\n */\n\nexport const CLEAR_POLL_BITS = 0b1111_0001;\nexport const CLEAR_DOWN_STATE_BITS = 0b1111_1110;\nexport const CLEAR_INVERTED_MODIFIER_BITS = 0b1110_1111;\n\nexport const DOWN_STATE_BIT = 0b0000_0001;\nexport const PRESSED_STATE_BIT = 0b0000_0010;\nexport const REPEATED_STATE_BIT = 0b0000_0100;\nexport const RELEASED_STATE_BIT = 0b0000_1000;\nexport const INVERTED_MODIFIER_BIT = 0b0001_0000;\n\nexport class ButtonState extends InputState {\n  /** @returns {boolean} */\n  get pressed() {\n    return this._pressed;\n  }\n\n  /** @returns {boolean} */\n  get repeated() {\n    return this._repeated;\n  }\n\n  /** @returns {boolean} */\n  get released() {\n    return this._released;\n  }\n\n  /** @returns {boolean} */\n  get down() {\n    return this._down;\n  }\n\n  /**\n   * @override\n   * @returns {number}\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @param {number} [size]\n   */\n  constructor(size = 0) {\n    super(size);\n    /** @private */\n    this._state = new Uint8Array(size);\n    /** @private */\n    this._value = 0;\n    /** @private */\n    this._down = false;\n    /** @private */\n    this._pressed = false;\n    /** @private */\n    this._repeated = false;\n    /** @private */\n    this._released = false;\n  }\n\n  /**\n   * @override\n   * @protected\n   */\n  resize(newSize) {\n    let oldState = this._state;\n    let oldSize = oldState.length;\n    let newState;\n    if (newSize <= oldSize) {\n      newState = oldState.slice(0, newSize);\n    } else {\n      newState = new Uint8Array(newSize);\n      newState.set(oldState);\n    }\n    this._state = newState;\n    super.resize(newSize);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @returns {number}\n   */\n  getState(code) {\n    let state = this._state[code];\n    let modifier = state & INVERTED_MODIFIER_BIT ? -1 : 1;\n    let value = state & DOWN_STATE_BIT ? 1 : 0;\n    return value * modifier;\n  }\n\n  /**\n   * @override\n   * @param {number} now\n   */\n  onPoll(now) {\n    let state = this._state;\n    let result = 0;\n    let down = 0;\n    let pressed = 0;\n    let repeated = 0;\n    let released = 0;\n    const len = state.length;\n    for (let i = 0; i < len; ++i) {\n      let value = state[i];\n      let v = value & DOWN_STATE_BIT;\n      let m = value & INVERTED_MODIFIER_BIT;\n      down |= v;\n      pressed |= value & PRESSED_STATE_BIT;\n      repeated |= value & REPEATED_STATE_BIT;\n      released |= value & RELEASED_STATE_BIT;\n      result += (v ? 1 : 0) * (m ? -1 : 1);\n      state[i] &= CLEAR_POLL_BITS;\n    }\n    this._value = result;\n    this._down = down !== 0;\n    this._pressed = pressed !== 0;\n    this._repeated = repeated !== 0;\n    this._released = released !== 0;\n    super.onPoll(now);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {number} value\n   * @param {number} delta\n   */\n  onUpdate(code, value, delta) {\n    if (delta > 0) {\n      this.onButtonPressed(code);\n    } else {\n      this.onButtonReleased(code);\n    }\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {number} value\n   */\n  onStatus(code, value) {\n    this.onButtonStatus(code, value !== 0);\n  }\n\n  /**\n   * @override\n   * @param {BindingIndex} code\n   * @param {BindingOptions} [opts]\n   */\n  onBind(code, opts = { inverted: false }) {\n    super.onBind(code, opts);\n    const { inverted = false } = opts;\n    let state = this._state;\n    if (inverted) {\n      state[code] |= INVERTED_MODIFIER_BIT;\n    } else {\n      state[code] &= CLEAR_INVERTED_MODIFIER_BITS;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   */\n  onButtonPressed(code) {\n    let state = this._state;\n    let bits = state[code];\n    if (!(bits & DOWN_STATE_BIT)) {\n      bits |= PRESSED_STATE_BIT;\n      bits |= DOWN_STATE_BIT;\n    }\n    bits |= REPEATED_STATE_BIT;\n    state[code] = bits;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   */\n  onButtonReleased(code) {\n    let state = this._state;\n    let bits = state[code];\n    if (bits & DOWN_STATE_BIT) {\n      bits |= RELEASED_STATE_BIT;\n      bits &= CLEAR_DOWN_STATE_BITS;\n    }\n    state[code] = bits;\n  }\n\n  /**\n   * @protected\n   * @param {BindingIndex} code\n   * @param {boolean} isDown\n   */\n  onButtonStatus(code, isDown) {\n    let state = this._state;\n    let bits = state[code];\n    let wasDown = Boolean(bits & DOWN_STATE_BIT);\n    if (isDown) {\n      bits |= DOWN_STATE_BIT;\n    } else {\n      bits &= CLEAR_DOWN_STATE_BITS;\n    }\n    if (wasDown && !isDown) {\n      bits |= RELEASED_STATE_BIT;\n    }\n    if (!wasDown && isDown) {\n      bits |= PRESSED_STATE_BIT;\n      bits |= REPEATED_STATE_BIT;\n    }\n    state[code] = bits;\n  }\n}\n", "export class KeyCode {\n  /**\n   * @param {string} string\n   * @returns {KeyCode}\n   */\n  static parse(string) {\n    string = string.trim();\n    let i = string.indexOf('.');\n    if (i < 0) {\n      throw new Error('Missing device separator for key code.');\n    }\n    let device = string.substring(0, i);\n    if (device.length < 0) {\n      throw new Error('Missing device for key code.');\n    }\n    let key = string.substring(i + 1);\n    if (key.length < 0) {\n      throw new Error('Missing code for key code.');\n    }\n    return new KeyCode(device, key);\n  }\n\n  /**\n   * @param {string} device\n   * @param {string} code\n   */\n  constructor(device, code) {\n    this.device = device;\n    this.code = code;\n  }\n\n  /** @override */\n  toString() {\n    return `${this.device}.${this.code}`;\n  }\n}\n", "import { KeyCode } from './KeyCode.js';\n\nexport function from(device, code) {\n  return new KeyCode(device, code);\n}\n\nexport function isKeyCode(object) {\n  return 'device' in object && 'code' in object;\n}\n\nexport const KEYBOARD = 'Keyboard';\nexport const MOUSE = 'Mouse';\n\nexport const KEY_A = new KeyCode(KEYBOARD, 'KeyA');\nexport const KEY_B = new KeyCode(KEYBOARD, 'KeyB');\nexport const KEY_C = new KeyCode(KEYBOARD, 'KeyC');\nexport const KEY_D = new KeyCode(KEYBOARD, 'KeyD');\nexport const KEY_E = new KeyCode(KEYBOARD, 'KeyE');\nexport const KEY_F = new KeyCode(KEYBOARD, 'KeyF');\nexport const KEY_G = new KeyCode(KEYBOARD, 'KeyG');\nexport const KEY_H = new KeyCode(KEYBOARD, 'KeyH');\nexport const KEY_I = new KeyCode(KEYBOARD, 'KeyI');\nexport const KEY_J = new KeyCode(KEYBOARD, 'KeyJ');\nexport const KEY_K = new KeyCode(KEYBOARD, 'KeyK');\nexport const KEY_L = new KeyCode(KEYBOARD, 'KeyL');\nexport const KEY_M = new KeyCode(KEYBOARD, 'KeyM');\nexport const KEY_N = new KeyCode(KEYBOARD, 'KeyN');\nexport const KEY_O = new KeyCode(KEYBOARD, 'KeyO');\nexport const KEY_P = new KeyCode(KEYBOARD, 'KeyP');\nexport const KEY_Q = new KeyCode(KEYBOARD, 'KeyQ');\nexport const KEY_R = new KeyCode(KEYBOARD, 'KeyR');\nexport const KEY_S = new KeyCode(KEYBOARD, 'KeyS');\nexport const KEY_T = new KeyCode(KEYBOARD, 'KeyT');\nexport const KEY_U = new KeyCode(KEYBOARD, 'KeyU');\nexport const KEY_V = new KeyCode(KEYBOARD, 'KeyV');\nexport const KEY_W = new KeyCode(KEYBOARD, 'KeyW');\nexport const KEY_X = new KeyCode(KEYBOARD, 'KeyX');\nexport const KEY_Y = new KeyCode(KEYBOARD, 'KeyY');\nexport const KEY_Z = new KeyCode(KEYBOARD, 'KeyZ');\n\nexport const DIGIT_0 = new KeyCode(KEYBOARD, 'Digit0');\nexport const DIGIT_1 = new KeyCode(KEYBOARD, 'Digit1');\nexport const DIGIT_2 = new KeyCode(KEYBOARD, 'Digit2');\nexport const DIGIT_3 = new KeyCode(KEYBOARD, 'Digit3');\nexport const DIGIT_4 = new KeyCode(KEYBOARD, 'Digit4');\nexport const DIGIT_5 = new KeyCode(KEYBOARD, 'Digit5');\nexport const DIGIT_6 = new KeyCode(KEYBOARD, 'Digit6');\nexport const DIGIT_7 = new KeyCode(KEYBOARD, 'Digit7');\nexport const DIGIT_8 = new KeyCode(KEYBOARD, 'Digit8');\nexport const DIGIT_9 = new KeyCode(KEYBOARD, 'Digit9');\n\nexport const MINUS = new KeyCode(KEYBOARD, 'Minus');\nexport const EQUAL = new KeyCode(KEYBOARD, 'Equal');\nexport const BRACKET_LEFT = new KeyCode(KEYBOARD, 'BracketLeft');\nexport const BRACKET_RIGHT = new KeyCode(KEYBOARD, 'BracketRight');\nexport const SEMICOLON = new KeyCode(KEYBOARD, 'Semicolon');\nexport const QUOTE = new KeyCode(KEYBOARD, 'Quote');\nexport const BACKQUOTE = new KeyCode(KEYBOARD, 'Backquote');\nexport const BACKSLASH = new KeyCode(KEYBOARD, 'Backslash');\nexport const COMMA = new KeyCode(KEYBOARD, 'Comma');\nexport const PERIOD = new KeyCode(KEYBOARD, 'Period');\nexport const SLASH = new KeyCode(KEYBOARD, 'Slash');\n\nexport const ESCAPE = new KeyCode(KEYBOARD, 'Escape');\nexport const SPACE = new KeyCode(KEYBOARD, 'Space');\nexport const CAPS_LOCK = new KeyCode(KEYBOARD, 'CapsLock');\nexport const BACKSPACE = new KeyCode(KEYBOARD, 'Backspace');\nexport const DELETE = new KeyCode(KEYBOARD, 'Delete');\nexport const TAB = new KeyCode(KEYBOARD, 'Tab');\nexport const ENTER = new KeyCode(KEYBOARD, 'Enter');\n\nexport const ARROW_UP = new KeyCode(KEYBOARD, 'ArrowUp');\nexport const ARROW_DOWN = new KeyCode(KEYBOARD, 'ArrowDown');\nexport const ARROW_LEFT = new KeyCode(KEYBOARD, 'ArrowLeft');\nexport const ARROW_RIGHT = new KeyCode(KEYBOARD, 'ArrowRight');\n\nexport const MOUSE_BUTTON_0 = new KeyCode(MOUSE, 'Button0');\nexport const MOUSE_BUTTON_1 = new KeyCode(MOUSE, 'Button1');\nexport const MOUSE_BUTTON_2 = new KeyCode(MOUSE, 'Button2');\nexport const MOUSE_BUTTON_3 = new KeyCode(MOUSE, 'Button3');\nexport const MOUSE_BUTTON_4 = new KeyCode(MOUSE, 'Button4');\n\nexport const MOUSE_POS_X = new KeyCode(MOUSE, 'PosX');\nexport const MOUSE_POS_Y = new KeyCode(MOUSE, 'PosY');\n\nexport const MOUSE_WHEEL_X = new KeyCode(MOUSE, 'WheelX');\nexport const MOUSE_WHEEL_Y = new KeyCode(MOUSE, 'WheelY');\nexport const MOUSE_WHEEL_Z = new KeyCode(MOUSE, 'WheelZ');\n", "export class InputBinding {\n  /** @returns {boolean} */\n  get polling() {\n    if (!this.ref) {\n      return false;\n    }\n    return this.ref.polling;\n  }\n\n  /** @returns {number} */\n  get value() {\n    if (!this.ref || this.disabled) {\n      return 0;\n    }\n    return this.ref.value;\n  }\n\n  /**\n   * @param {string} name\n   */\n  constructor(name) {\n    /** @protected */\n    this.name = name;\n\n    /** @protected */\n    this.ref = null;\n\n    /** @protected */\n    this.disabled = false;\n  }\n\n  /**\n   * @abstract\n   * @param {import('../InputContext.js').InputContext} inputContext\n   */\n  bindTo(inputContext) {\n    throw new Error('Unsupported operation.');\n  }\n\n  disable(force = true) {\n    this.disabled = force;\n    return this;\n  }\n\n  /**\n   * @param {number} code\n   * @returns {number}\n   */\n  getState(code) {\n    if (!this.ref || this.disabled) {\n      return 0;\n    }\n    return this.ref.getState(code);\n  }\n}\n", "import { KeyCode } from './KeyCode.js';\nimport * as KeyCodes from './KeyCodes.js';\n\nexport { KeyCodes };\n\n/**\n * @param {string|Array<string>} strings\n * @returns {Array<KeyCode>}\n */\nexport function stringsToKeyCodes(strings) {\n  if (!Array.isArray(strings)) {\n    strings = [strings];\n  }\n  let result = [];\n  for (let str of strings) {\n    let keyCode;\n    try {\n      keyCode = KeyCode.parse(str);\n    } catch (e) {\n      let keyName = camelToSnakeCase(str).toUpperCase();\n      if (!(keyName in KeyCodes)) {\n        throw new Error('Invalid key code string - ' + e);\n      }\n      keyCode = KeyCodes[keyName];\n    }\n    result.push(keyCode);\n  }\n  return result;\n}\n\n/**\n * @param {string} str\n * @returns {string}\n */\nfunction camelToSnakeCase(str) {\n  return str\n    .replace(/([a-z]|(?:[A-Z0-9]+))([A-Z0-9]|$)/g, function (_, a, b) {\n      return a + (b && '_' + b);\n    })\n    .toLowerCase();\n}\n", "import { from } from '../keycode/KeyCodes.js';\nimport { InputBinding } from './InputBinding.js';\nimport { stringsToKeyCodes } from '../keycode/KeyCodeHelper.js';\n\n/** @typedef {import('../keycode/KeyCode.js').KeyCode} KeyCode */\n\nexport class AxisBinding extends InputBinding {\n  /**\n   * @param {string} name\n   * @param {string} device\n   * @param {string} code\n   * @param {object} [opts]\n   * @returns {AxisBinding}\n   */\n  static fromBind(name, device, code, opts = undefined) {\n    return new AxisBinding(name, from(device, code), opts);\n  }\n\n  /**\n   * @param {string} name\n   * @param {...string} strings\n   * @returns {AxisBinding}\n   */\n  static fromString(name, ...strings) {\n    let keyCodes = stringsToKeyCodes(strings);\n    return new AxisBinding(name, keyCodes);\n  }\n\n  /** @returns {number} */\n  get delta() {\n    if (!this.ref || this.disabled) {\n      return 0;\n    }\n    return this.ref.delta;\n  }\n\n  /**\n   * @param {string} name\n   * @param {KeyCode|Array<KeyCode>} keyCodes\n   * @param {object} [opts]\n   */\n  constructor(name, keyCodes, opts = undefined) {\n    super(name);\n\n    /** @protected */\n    this.keyCodes = Array.isArray(keyCodes) ? keyCodes : [keyCodes];\n    /** @protected */\n    this.opts = opts;\n  }\n\n  /**\n   * @override\n   * @param {import('../InputContext.js').InputContext} inputContext\n   */\n  bindTo(inputContext) {\n    let name = this.name;\n    let opts = this.opts;\n    for (let keyCode of this.keyCodes) {\n      inputContext.bindAxis(name, keyCode.device, keyCode.code, opts);\n    }\n    this.ref = inputContext.getAxis(name);\n    return this;\n  }\n}\n", "import { from } from '../keycode/KeyCodes.js';\nimport { InputBinding } from './InputBinding.js';\nimport { stringsToKeyCodes } from '../keycode/KeyCodeHelper.js';\n\n/**\n * @typedef {import('../keycode/KeyCode.js').KeyCode} KeyCode\n * @typedef {import('../InputContext.js').InputContext} InputContext\n */\n\nexport class ButtonBinding extends InputBinding {\n  /**\n   * @param {string} name\n   * @param {string} device\n   * @param {string} code\n   * @param {object} [opts]\n   * @returns {ButtonBinding}\n   */\n  static fromBind(name, device, code, opts = undefined) {\n    return new ButtonBinding(name, from(device, code), opts);\n  }\n\n  /**\n   * @param {string} name\n   * @param {...string} strings\n   * @returns {ButtonBinding}\n   */\n  static fromString(name, ...strings) {\n    let keyCodes = stringsToKeyCodes(strings);\n    return new ButtonBinding(name, keyCodes);\n  }\n\n  /** @returns {boolean} */\n  get pressed() {\n    if (!this.ref || this.disabled) {\n      return false;\n    }\n    return this.ref.pressed;\n  }\n\n  /** @returns {boolean} */\n  get repeated() {\n    if (!this.ref || this.disabled) {\n      return false;\n    }\n    return this.ref.repeated;\n  }\n\n  /** @returns {boolean} */\n  get released() {\n    if (!this.ref || this.disabled) {\n      return false;\n    }\n    return this.ref.released;\n  }\n\n  /** @returns {boolean} */\n  get down() {\n    if (!this.ref || this.disabled) {\n      return false;\n    }\n    return this.ref.down;\n  }\n\n  /**\n   * @param {string} name\n   * @param {KeyCode|Array<KeyCode>} keyCodes\n   * @param {object} [opts]\n   */\n  constructor(name, keyCodes, opts = undefined) {\n    super(name);\n\n    /** @protected */\n    this.keyCodes = Array.isArray(keyCodes) ? keyCodes : [keyCodes];\n    /** @protected */\n    this.opts = opts;\n  }\n\n  /**\n   * @override\n   * @param {InputContext} inputContext\n   */\n  bindTo(inputContext) {\n    let name = this.name;\n    let opts = this.opts;\n    for (let keyCode of this.keyCodes) {\n      inputContext.bindButton(name, keyCode.device, keyCode.code, opts);\n    }\n    this.ref = inputContext.getButton(name);\n    return this;\n  }\n}\n", "import { from } from '../keycode/KeyCodes.js';\nimport { AxisBinding } from './AxisBinding.js';\n\n/** @typedef {import('../keycode/KeyCode.js').KeyCode} KeyCode */\n\nexport class AxisButtonBinding extends AxisBinding {\n  /**\n   * @param {string} name\n   * @param {string} device\n   * @param {string} negativeCode\n   * @param {string} positiveCode\n   * @returns {AxisButtonBinding}\n   */\n  static fromBind(name, device, negativeCode, positiveCode) {\n    return new AxisButtonBinding(\n      name,\n      from(device, negativeCode),\n      from(device, positiveCode)\n    );\n  }\n\n  /**\n   * @param {string} name\n   * @param {KeyCode} negativeKeyCode\n   * @param {KeyCode} positiveKeyCode\n   */\n  constructor(name, negativeKeyCode, positiveKeyCode) {\n    super(name, []);\n\n    if (negativeKeyCode.device !== positiveKeyCode.device) {\n      throw new Error('Cannot create axis-button codes for different devices.');\n    }\n\n    /** @protected */\n    this.negativeKeyCode = negativeKeyCode;\n    /** @protected */\n    this.positiveKeyCode = positiveKeyCode;\n  }\n\n  /**\n   * @param {import('../InputContext.js').InputContext} inputContext\n   */\n  bindTo(inputContext) {\n    let name = this.name;\n    let negativeKeyCode = this.negativeKeyCode;\n    let positiveKeyCode = this.positiveKeyCode;\n    inputContext.bindAxisButtons(\n      name,\n      negativeKeyCode.device,\n      negativeKeyCode.code,\n      positiveKeyCode.code\n    );\n    this.ref = inputContext.getAxis(name);\n    return this;\n  }\n}\n", "/**\n * @typedef InputDeviceEvent\n * @property {EventTarget} target\n * @property {string} device\n * @property {string} code\n * @property {string} event\n * @property {number} [value] The input value of the triggered event (usually this is 1).\n * @property {number} [movement] The change in value for the triggered event.\n * @property {boolean} [control] Whether any control keys are down (false if up).\n * @property {boolean} [shift] Whether any shift keys are down (false if up).\n * @property {boolean} [alt] Whether any alt keys are down (false if up).\n *\n * @callback InputDeviceEventListener\n * @param {InputDeviceEvent} e\n */\n\n/**\n * A class that represents a raw system device that\n * emits input events.\n */\nexport class InputDevice {\n  /** @abstract */\n  // eslint-disable-next-line no-unused-vars\n  static isAxis(keyCode) {\n    return false;\n  }\n\n  /** @abstract */\n  // eslint-disable-next-line no-unused-vars\n  static isButton(keyCode) {\n    return false;\n  }\n\n  /**\n   * @param {string} deviceName\n   * @param {EventTarget} eventTarget\n   */\n  constructor(deviceName, eventTarget) {\n    if (!eventTarget) {\n      throw new Error(`Missing event target for device ${deviceName}.`);\n    }\n\n    this.name = deviceName;\n    this.eventTarget = eventTarget;\n\n    /**\n     * @private\n     * @type {Record<string, Array<InputDeviceEventListener>>}\n     */\n    this.listeners = {\n      input: [],\n    };\n  }\n\n  /**\n   * @param {EventTarget} eventTarget\n   */\n  setEventTarget(eventTarget) {\n    if (!eventTarget) {\n      throw new Error(`Missing event target for device ${this.name}.`);\n    }\n    this.eventTarget = eventTarget;\n  }\n\n  destroy() {\n    let listeners = this.listeners;\n    for (let event in listeners) {\n      listeners[event].length = 0;\n    }\n  }\n\n  /**\n   * @param {string} event\n   * @param {InputDeviceEventListener} listener\n   */\n  addEventListener(event, listener) {\n    let listeners = this.listeners;\n    if (event in listeners) {\n      listeners[event].push(listener);\n    } else {\n      listeners[event] = [listener];\n    }\n  }\n\n  /**\n   * @param {string} event\n   * @param {InputDeviceEventListener} listener\n   */\n  removeEventListener(event, listener) {\n    let listeners = this.listeners;\n    if (event in listeners) {\n      let list = listeners[event];\n      let i = list.indexOf(listener);\n      if (i >= 0) {\n        list.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * @param {InputDeviceEvent} e\n   * @returns {boolean} Whether the input event should be consumed.\n   */\n  dispatchInputEvent(e) {\n    let flag = 0;\n    for (let listener of this.listeners.input) {\n      flag |= listener(e);\n    }\n    return Boolean(flag);\n  }\n}\n", "import { InputDevice } from './InputDevice.js';\n\n/** @typedef {import('./InputDevice.js').InputDeviceEvent} InputDeviceEvent */\n\n/**\n * A class that listens to the keyboard events from the event target and\n * transforms the events into a valid {@link InputEvent} for the added\n * listeners.\n *\n * - This device uses the `event.code` standard to reference each key.\n * - Use this to help you determine the key code: https://keycode.info/\n */\nexport class KeyboardDevice extends InputDevice {\n  /** @override */\n  // eslint-disable-next-line no-unused-vars\n  static isAxis(keyCode) {\n    return false;\n  }\n\n  /** @override */\n  // eslint-disable-next-line no-unused-vars\n  static isButton(keyCode) {\n    return true;\n  }\n\n  /**\n   * Constructs a listening keyboard with no listeners (yet).\n   *\n   * @param {string} deviceName\n   * @param {EventTarget} eventTarget\n   * @param {object} [opts] Any additional options.\n   * @param {boolean} [opts.ignoreRepeat] Whether to\n   * accept repeated key events.\n   */\n  constructor(deviceName, eventTarget, opts = {}) {\n    super(deviceName, eventTarget);\n\n    const { ignoreRepeat = true } = opts;\n    this.ignoreRepeat = ignoreRepeat;\n\n    /**\n     * @private\n     * @type {InputDeviceEvent}\n     */\n    this._eventObject = {\n      target: eventTarget,\n      device: deviceName,\n      code: '',\n      event: '',\n      // Key values\n      value: 0,\n      control: false,\n      shift: false,\n      alt: false,\n    };\n\n    /** @private */\n    this.onKeyDown = this.onKeyDown.bind(this);\n    /** @private */\n    this.onKeyUp = this.onKeyUp.bind(this);\n\n    eventTarget.addEventListener('keydown', this.onKeyDown);\n    eventTarget.addEventListener('keyup', this.onKeyUp);\n  }\n\n  /** @override */\n  setEventTarget(eventTarget) {\n    if (this.eventTarget) this.destroy();\n    super.setEventTarget(eventTarget);\n    eventTarget.addEventListener('keydown', this.onKeyDown);\n    eventTarget.addEventListener('keyup', this.onKeyUp);\n  }\n\n  /** @override */\n  destroy() {\n    let eventTarget = this.eventTarget;\n    eventTarget.removeEventListener('keydown', this.onKeyDown);\n    eventTarget.removeEventListener('keyup', this.onKeyUp);\n    super.destroy();\n  }\n\n  /**\n   * @private\n   * @param {KeyboardEvent} e\n   */\n  onKeyDown(e) {\n    if (e.repeat && this.ignoreRepeat) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n\n    let event = this._eventObject;\n    // We care more about location (code) than print char (key).\n    event.code = e.code;\n    event.event = 'pressed';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.dispatchInputEvent(event);\n    if (result) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {KeyboardEvent} e\n   */\n  onKeyUp(e) {\n    /** @type {InputDeviceEvent} */\n    let event = this._eventObject;\n    // We care more about location (code) than print char (key).\n    event.code = e.code;\n    event.event = 'released';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.dispatchInputEvent(event);\n    if (result) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n  }\n}\n", "import { InputDevice } from './InputDevice.js';\n\n/**\n * @typedef {import('./InputDevice.js').InputDeviceEvent} InputDeviceEvent\n */\n\nconst DEFAULT_LINE_PIXELS = 10;\nconst DEFAULT_PAGE_PIXELS = 100;\n\n/**\n * A class that listens to the mouse events from the event target and\n * transforms the events into a valid {@link InputDeviceEvent} for its\n * listeners.\n *\n * - PosX\n * - PosY\n * - WheelX\n * - WheelY\n * - WheelZ\n * - Button0 (left button)\n * - Button1 (middle button)\n * - Button2 (right button)\n * - Button3 (next button)\n * - Button4 (back button)\n */\nexport class MouseDevice extends InputDevice {\n  /** @override */\n  static isAxis(keyCode) {\n    return (\n      keyCode === 'PosX' ||\n      keyCode === 'PosY' ||\n      keyCode === 'WheelX' ||\n      keyCode === 'WheelY' ||\n      keyCode === 'WheelZ'\n    );\n  }\n\n  /** @override */\n  static isButton(keyCode) {\n    return !this.isAxis(keyCode);\n  }\n\n  /**\n   * Constructs a listening mouse with no listeners (yet).\n   *\n   * @param {string} deviceName\n   * @param {EventTarget} eventTarget\n   * @param {Object} [opts] Any additional options.\n   * @param {Boolean} [opts.eventsOnFocus=true] Whether to capture events only when it has focus.\n   */\n  constructor(deviceName, eventTarget, opts = {}) {\n    super(deviceName, eventTarget);\n\n    const { eventsOnFocus = true } = opts;\n    this.eventsOnFocus = eventsOnFocus;\n    this.canvasTarget = this.getCanvasFromEventTarget(eventTarget);\n\n    /** @private */\n    this._downHasFocus = false;\n\n    /**\n     * @private\n     * @type {InputDeviceEvent}\n     */\n    this._eventObject = {\n      target: eventTarget,\n      device: deviceName,\n      code: '',\n      event: '',\n      // Button values\n      value: 0,\n      control: false,\n      shift: false,\n      alt: false,\n    };\n    /**\n     * @private\n     * @type {InputDeviceEvent}\n     */\n    this._positionObject = {\n      target: eventTarget,\n      device: deviceName,\n      code: '',\n      event: 'move',\n      // Pos values\n      value: 0,\n      movement: 0,\n    };\n    /**\n     * @private\n     * @type {InputDeviceEvent}\n     */\n    this._wheelObject = {\n      target: eventTarget,\n      device: deviceName,\n      code: '',\n      event: 'wheel',\n      // Wheel values\n      movement: 0,\n    };\n\n    /** @private */\n    this.onMouseDown = this.onMouseDown.bind(this);\n    /** @private */\n    this.onMouseUp = this.onMouseUp.bind(this);\n    /** @private */\n    this.onMouseMove = this.onMouseMove.bind(this);\n    /** @private */\n    this.onContextMenu = this.onContextMenu.bind(this);\n    /** @private */\n    this.onWheel = this.onWheel.bind(this);\n\n    eventTarget.addEventListener('mousedown', this.onMouseDown);\n    eventTarget.addEventListener('contextmenu', this.onContextMenu);\n    eventTarget.addEventListener('wheel', this.onWheel);\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  /** @override */\n  setEventTarget(eventTarget) {\n    if (this.eventTarget) this.destroy();\n    super.setEventTarget(eventTarget);\n    this.canvasTarget = this.getCanvasFromEventTarget(eventTarget);\n    eventTarget.addEventListener('mousedown', this.onMouseDown);\n    eventTarget.addEventListener('contextmenu', this.onContextMenu);\n    eventTarget.addEventListener('wheel', this.onWheel);\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  /** @override */\n  destroy() {\n    let eventTarget = this.eventTarget;\n    eventTarget.removeEventListener('mousedown', this.onMouseDown);\n    eventTarget.removeEventListener('contextmenu', this.onContextMenu);\n    eventTarget.removeEventListener('wheel', this.onWheel);\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    super.destroy();\n  }\n\n  setPointerLock(force = true) {\n    if (force) {\n      this.eventTarget.requestPointerLock();\n    } else {\n      this.eventTarget.exitPointerLock();\n    }\n  }\n\n  hasPointerLock() {\n    return document.pointerLockElement === this.eventTarget;\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} e\n   */\n  onMouseDown(e) {\n    this._downHasFocus = true;\n\n    let event = this._eventObject;\n    // We care more about location (code) than print char (key).\n    event.code = 'Button' + e.button;\n    event.event = 'pressed';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.dispatchInputEvent(event);\n    if (result) {\n      // Make sure it has focus first.\n      if (document.activeElement === this.eventTarget) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} e\n   */\n  onContextMenu(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {WheelEvent} e\n   */\n  onWheel(e) {\n    let dx, dy, dz;\n    switch (e.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        dx = e.deltaX * DEFAULT_LINE_PIXELS;\n        dy = e.deltaY * DEFAULT_LINE_PIXELS;\n        dz = e.deltaZ * DEFAULT_LINE_PIXELS;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        dx = e.deltaX * DEFAULT_PAGE_PIXELS;\n        dy = e.deltaY * DEFAULT_PAGE_PIXELS;\n        dz = e.deltaZ * DEFAULT_PAGE_PIXELS;\n        break;\n      case WheelEvent.DOM_DELTA_PIXEL:\n      default:\n        dx = e.deltaX;\n        dy = e.deltaY;\n        dz = e.deltaZ;\n        break;\n    }\n\n    let result = 0;\n    let event = this._wheelObject;\n    event.code = 'WheelX';\n    event.movement = dx;\n    result |= this.dispatchInputEvent(event);\n    event.code = 'WheelY';\n    event.movement = dy;\n    result |= this.dispatchInputEvent(event);\n    event.code = 'WheelZ';\n    event.movement = dz;\n    result |= this.dispatchInputEvent(event);\n    if (result) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} e\n   */\n  onMouseUp(e) {\n    // Make sure mouse down was pressed before this (with focus).\n    if (!this._downHasFocus) return;\n    this._downHasFocus = false;\n\n    let event = this._eventObject;\n    // We care more about location (code) than print char (key).\n    event.code = 'Button' + e.button;\n    event.event = 'released';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.dispatchInputEvent(event);\n    if (result) {\n      e.preventDefault();\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} e\n   */\n  onMouseMove(e) {\n    if (this.eventsOnFocus && document.activeElement !== this.eventTarget)\n      return;\n\n    const element = this.canvasTarget;\n    const { clientWidth, clientHeight } = element;\n    const rect = element.getBoundingClientRect();\n\n    let dx = e.movementX / clientWidth;\n    let dy = e.movementY / clientHeight;\n    let x = (e.clientX - rect.left) / clientWidth;\n    let y = (e.clientY - rect.top) / clientHeight;\n\n    let event = this._positionObject;\n    event.code = 'PosX';\n    event.value = x;\n    event.movement = dx;\n    this.dispatchInputEvent(event);\n    event.code = 'PosY';\n    event.value = y;\n    event.movement = dy;\n    this.dispatchInputEvent(event);\n  }\n\n  /** @private */\n  getCanvasFromEventTarget(eventTarget) {\n    if (eventTarget instanceof HTMLCanvasElement) {\n      return eventTarget;\n    } else {\n      return (\n        eventTarget.canvas ||\n        eventTarget.querySelector('canvas') ||\n        (eventTarget.shadowRoot &&\n          eventTarget.shadowRoot.querySelector('canvas')) ||\n        eventTarget\n      );\n    }\n  }\n}\n", "import INNER_HTML from './InputCode.template.html';\nimport INNER_STYLE from './InputCode.module.css';\n\nexport class InputCode extends HTMLElement {\n  /** @protected */\n  static get [Symbol.for('templateNode')]() {\n    let t = document.createElement('template');\n    t.innerHTML = INNER_HTML;\n    Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n    return t;\n  }\n\n  /** @protected */\n  static get [Symbol.for('styleNode')]() {\n    let t = document.createElement('style');\n    t.innerHTML = INNER_STYLE;\n    Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n    return t;\n  }\n\n  static define(customElements = window.customElements) {\n    customElements.define('input-code', this);\n  }\n\n  static get observedAttributes() {\n    return ['name', 'value', 'disabled'];\n  }\n\n  /** @returns {boolean} */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  /** @returns {string} */\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this.setAttribute('value', value);\n  }\n\n  /** @returns {string} */\n  get name() {\n    return this._name;\n  }\n\n  set name(value) {\n    this.setAttribute('name', value);\n  }\n\n  constructor() {\n    super();\n    const c = this.constructor;\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(c[Symbol.for('templateNode')].content.cloneNode(true));\n    shadowRoot.appendChild(c[Symbol.for('styleNode')].cloneNode(true));\n\n    /** @private */\n    this._name = '';\n    /** @private */\n    this._value = '';\n    /** @private */\n    this._disabled = false;\n\n    /** @private */\n    this._kbdElement = shadowRoot.querySelector('kbd');\n    /** @private */\n    this._nameElement = shadowRoot.querySelector('#name');\n    /** @private */\n    this._valueElement = shadowRoot.querySelector('#value');\n  }\n\n  attributeChangedCallback(attribute, prev, value) {\n    switch (attribute) {\n      case 'name':\n        this._name = value;\n        this._nameElement.textContent = value;\n        break;\n      case 'value':\n        this._value = value;\n        if (value !== null) {\n          this._valueElement.classList.toggle('hidden', false);\n          this._valueElement.textContent = value;\n          this._kbdElement.style.paddingRight = `${this._valueElement.clientWidth + 4\n            }px`;\n        } else {\n          this._valueElement.classList.toggle('hidden', true);\n        }\n        break;\n      case 'disabled':\n        this._disabled = value !== null;\n        this._kbdElement.classList.toggle('disabled', value !== null);\n        break;\n    }\n  }\n\n  connectedCallback() {\n    if (Object.prototype.hasOwnProperty.call(this, 'name')) {\n      let value = this.name;\n      delete this.name;\n      this.name = value;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(this, 'value')) {\n      let value = this.value;\n      delete this.value;\n      this.value = value;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(this, 'disabled')) {\n      let value = this.disabled;\n      delete this.disabled;\n      this.disabled = value;\n    }\n  }\n}\nInputCode.define();\n", "/**\n * @callback OnPollCallback\n * @param {number} now\n *\n * @typedef Pollable\n * @property {OnPollCallback} onPoll\n */\n\n/**\n * A class to automatically call onPoll() on animation frame.\n */\nexport class AutoPoller {\n  /**\n   * @param {Pollable} pollable\n   */\n  constructor(pollable) {\n    /** @private */\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n    /** @private */\n    this.animationFrameHandle = null;\n    /** @private */\n    this.pollable = pollable;\n  }\n\n  get running() {\n    return this.animationFrameHandle !== null;\n  }\n\n  start() {\n    let handle = this.animationFrameHandle;\n    if (handle) cancelAnimationFrame(handle);\n    this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n  }\n\n  stop() {\n    let handle = this.animationFrameHandle;\n    if (handle) cancelAnimationFrame(handle);\n    this.animationFrameHandle = null;\n  }\n\n  /** @private */\n  onAnimationFrame(now) {\n    this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n    this.pollable.onPoll(now);\n  }\n}\n", "/** @typedef {import('./InputBindings.js').InputBindings} InputBindings */\n\n/**\n * A class to listen and transform device events through\n * each mapped bindings into an input state.\n *\n * It requires onPoll() to be called to keep the input\n * state up to date. This is usually called from\n * requestAnimationFrame() or using the AutoPoller.\n */\nexport class DeviceInputAdapter {\n  /**\n   * @param {InputBindings} bindings\n   */\n  constructor(bindings) {\n    /** @private */\n    this.onInput = this.onInput.bind(this);\n    /** @private */\n    this.onPoll = this.onPoll.bind(this);\n\n    this.bindings = bindings;\n  }\n\n  /**\n   * @param {number} now \n   */\n  onPoll(now) {\n    for (let input of this.bindings.getInputs()) {\n      input.onPoll(now);\n    }\n  }\n  \n  onInput(e) {\n    const {\n      device,\n      code,\n      event,\n      value,\n      movement,\n      // eslint-disable-next-line no-unused-vars\n      control,\n      shift,\n      alt,\n    } = e;\n    let bindings = this.bindings.getBindings(device, code);\n    switch (event) {\n      case 'pressed':\n        for (let { input, index } of bindings) {\n          input.onUpdate(index, 1, 1);\n        }\n        break;\n      case 'released':\n        for (let { input, index } of bindings) {\n          input.onUpdate(index, 0, -1);\n        }\n        break;\n      case 'move':\n        for (let { input, index } of bindings) {\n          input.onUpdate(index, value, movement);\n        }\n        break;\n      case 'wheel':\n        for (let { input, index } of bindings) {\n          input.onUpdate(index, undefined, movement);\n        }\n        break;\n    }\n    return bindings.length > 0;\n  }\n}\n", "/**\n * @typedef {import('./state/InputState.js').InputState} InputState\n * @typedef {import('./state/InputState.js').BindingOptions} BindingOptions\n *\n * @typedef {string} DeviceName\n * @typedef {string} KeyCode\n */\n\nclass Binding {\n  /**\n   * @param {DeviceName} device The name of the device\n   * @param {KeyCode} code The key code for the device\n   * @param {InputState} input The parent input\n   * @param {number} index The binding index for the input\n   */\n  constructor(device, code, input, index) {\n    /** Name of the device */\n    this.device = device;\n    /** The key code for the device */\n    this.code = code;\n    /** The parent input */\n    this.input = input;\n    /** The binding index for the input */\n    this.index = index;\n  }\n}\n\n/**\n * A class that maps inputs to their respective key bindings.\n *\n * This does not handle input state (refer to InputState.js) nor\n * input events (refer to InputDevice.js). It is only responsible\n * for the redirection of key codes to their bound input. Usually\n * this is used together with the interfaces referenced above.\n */\nexport class InputBindings {\n  constructor() {\n    /**\n     * @private\n     * @type {Record<DeviceName, Record<KeyCode, Array<Binding>>>}\n     */\n    this.bindingMap = {};\n    /**\n     * @private\n     * @type {Map<InputState, Array<Binding>>}\n     */\n    this.inputMap = new Map();\n  }\n\n  clear() {\n    for (let input of this.inputMap.keys()) {\n      input.onUnbind();\n    }\n    this.inputMap.clear();\n    this.bindingMap = {};\n  }\n\n  /**\n   * @param {InputState} input\n   * @param {DeviceName} device\n   * @param {KeyCode} code\n   * @param {BindingOptions} [opts]\n   */\n  bind(input, device, code, opts = { inverted: false }) {\n    let binding;\n\n    let inputMap = this.inputMap;\n    if (inputMap.has(input)) {\n      let bindings = inputMap.get(input);\n      let index = input.size;\n      input.onBind(index, opts);\n      binding = new Binding(device, code, input, index);\n      bindings.push(binding);\n    } else {\n      let bindings = [];\n      inputMap.set(input, bindings);\n      let index = 0;\n      input.onBind(index, opts);\n      binding = new Binding(device, code, input, index);\n      bindings.push(binding);\n    }\n\n    let bindingMap = this.bindingMap;\n    if (device in bindingMap) {\n      if (code in bindingMap[device]) {\n        bindingMap[device][code].push(binding);\n      } else {\n        bindingMap[device][code] = [binding];\n      }\n    } else {\n      bindingMap[device] = { [code]: [binding] };\n    }\n  }\n\n  /**\n   * @param {InputState} input\n   */\n  unbind(input) {\n    let inputMap = this.inputMap;\n    if (inputMap.has(input)) {\n      let bindingMap = this.bindingMap;\n      let bindings = inputMap.get(input);\n      for (let binding of bindings) {\n        let { device, code } = binding;\n        let boundList = bindingMap[device][code];\n        let i = boundList.indexOf(binding);\n        boundList.splice(i, 1);\n      }\n      bindings.length = 0;\n      input.onUnbind();\n      inputMap.delete(input);\n    }\n  }\n\n  /**\n   * @param {InputState} input\n   * @returns {boolean}\n   */\n  isBound(input) {\n    return this.inputMap.has(input);\n  }\n\n  /** @returns {Iterable<InputState>} */\n  getInputs() {\n    return this.inputMap.keys();\n  }\n\n  /** @returns {Iterable<Binding>} */\n  getBindingsByInput(input) {\n    return this.inputMap.get(input);\n  }\n\n  /**\n   * @param {DeviceName} device\n   * @param {KeyCode} code\n   * @returns {Array<Binding>}\n   */\n  getBindings(device, code) {\n    let deviceCodeBindings = this.bindingMap;\n    if (device in deviceCodeBindings) {\n      let codeBindings = deviceCodeBindings[device];\n      if (code in codeBindings) {\n        return codeBindings[code];\n      }\n    }\n    return [];\n  }\n}\n", "import { AutoPoller } from './AutoPoller.js';\nimport { AxisState } from './state/AxisState.js';\nimport { ButtonState } from './state/ButtonState.js';\nimport { KeyboardDevice } from './device/KeyboardDevice.js';\nimport { MouseDevice } from './device/MouseDevice.js';\nimport { DeviceInputAdapter } from './DeviceInputAdapter.js';\nimport { InputBindings } from './InputBindings.js';\n\n/**\n * @typedef {import('./device/InputDevice.js').InputDevice} InputDevice\n * @typedef {import('./device/InputDevice.js').InputDeviceEvent} InputDeviceEvent\n * @typedef {import('./state/InputState.js').InputState} InputState\n * @typedef {import('./InputBindings.js').DeviceName} DeviceName\n * @typedef {import('./InputBindings.js').KeyCode} KeyCode\n * @typedef {import('./InputBindings.js').BindingOptions} BindingOptions\n *\n * @typedef {import('./binding/InputBinding.js').InputBinding} InputBinding\n */\n\n/**\n * @typedef {string} InputName\n * \n * @typedef {'bind'|'unbind'|'focus'|'blur'} InputContextEventType\n * @typedef {(e: InputContextEvent) => boolean} InputContextEventListener\n * \n * @typedef InputContextEvent\n * @property {InputContextEventType} type\n */\n\nexport class InputContext {\n  /**\n   * @param {EventTarget} eventTarget\n   * @param {object} [opts]\n   */\n  constructor(eventTarget, opts = undefined) {\n    /**\n     * @type {Record<string, AxisState|ButtonState>}\n     */\n    this.inputs = {};\n    /**\n     * @type {Array<InputDevice>}\n     */\n    this.devices = [\n      new MouseDevice('Mouse', eventTarget),\n      new KeyboardDevice('Keyboard', eventTarget),\n    ];\n    this.bindings = new InputBindings();\n    this.adapter = new DeviceInputAdapter(this.bindings);\n    this.autopoller = new AutoPoller(this.adapter);\n\n    /** @protected */\n    this.eventTarget = eventTarget;\n    /** @protected */\n    this.anyButton = new ButtonState(1);\n    /** @protected */\n    this.anyButtonDevice = '';\n    /** @protected */\n    this.anyButtonCode = '';\n    /** @protected */\n    this.anyAxis = new AxisState(1);\n    /** @protected */\n    this.anyAxisDevice = '';\n    /** @protected */\n    this.anyAxisCode = '';\n\n    /**\n     * @private\n     * @type {Record<InputContextEventType, Array<InputContextEventListener>>}\n     */\n    this.listeners = {\n      bind: [],\n      unbind: [],\n      focus: [],\n      blur: [],\n    };\n\n    // Prepare listeners\n    /** @private */\n    this.onInput = this.onInput.bind(this);\n    /** @private */\n    this.onEventTargetBlur = this.onEventTargetBlur.bind(this);\n    /** @private */\n    this.onEventTargetFocus = this.onEventTargetFocus.bind(this);\n\n    // Attach listeners\n    eventTarget.addEventListener('focus', this.onEventTargetFocus);\n    eventTarget.addEventListener('blur', this.onEventTargetBlur);\n    for (let device of this.devices) {\n      device.addEventListener('input', this.onInput);\n    }\n  }\n\n  get autopoll() {\n    return this.autopoller.running;\n  }\n\n  set autopoll(value) {\n    this.toggleAutoPoll(value);\n  }\n\n  destroy() {\n    let listeners = this.listeners;\n    for (let event in listeners) {\n      listeners[event].length = 0;\n    }\n    if (this.autopoller.running) {\n      this.autopoller.stop();\n    }\n    for (let device of this.devices) {\n      device.removeEventListener('input', this.onInput);\n      device.destroy();\n    }\n    let eventTarget = this.eventTarget;\n    eventTarget.removeEventListener('focus', this.onEventTargetFocus);\n    eventTarget.removeEventListener('blur', this.onEventTargetBlur);\n  }\n\n  setEventTarget(eventTarget) {\n    let oldEventTarget = this.eventTarget;\n    oldEventTarget.removeEventListener('focus', this.onEventTargetFocus);\n    oldEventTarget.removeEventListener('blur', this.onEventTargetBlur);\n\n    this.eventTarget = eventTarget;\n    for (let device of this.devices) {\n      device.setEventTarget(eventTarget);\n    }\n    eventTarget.addEventListener('focus', this.onEventTargetFocus);\n    eventTarget.addEventListener('blur', this.onEventTargetBlur);\n  }\n\n  toggleAutoPoll(force = undefined) {\n    let current = this.autopoller.running;\n    let next = typeof force === 'undefined' ? !current : Boolean(force);\n    if (next === current) return;\n    if (next) {\n      this.autopoller.start();\n    } else {\n      this.autopoller.stop();\n    }\n  }\n\n  /**\n   * @param {InputContextEventType} event\n   * @param {InputContextEventListener} listener\n   */\n  addEventListener(event, listener) {\n    let listeners = this.listeners;\n    if (event in listeners) {\n      listeners[event].push(listener);\n    } else {\n      listeners[event] = [listener];\n    }\n  }\n\n  /**\n   * @param {InputContextEventType} event\n   * @param {InputContextEventListener} listener\n   */\n  removeEventListener(event, listener) {\n    let listeners = this.listeners;\n    if (event in listeners) {\n      let list = listeners[event];\n      let i = list.indexOf(listener);\n      if (i >= 0) {\n        list.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * @param {InputContextEvent} e\n   * @returns {boolean} Whether the event should be consumed.\n   */\n  dispatchEvent(e) {\n    const { type } = e;\n    let flag = 0;\n    for (let listener of this.listeners[type]) {\n      flag |= listener(e) ? 1 : 0;\n    }\n    return Boolean(flag);\n  }\n\n  /**\n   * @param {number} now\n   */\n  poll(now = performance.now()) {\n    if (this.autopoller.running) {\n      throw new Error('Should not manually poll() while autopolling.');\n    }\n    this.onPoll(now);\n  }\n\n  /**\n   * @private\n   * @param {InputDeviceEvent} e\n   */\n  onInput(e) {\n    let result = this.adapter.onInput(e);\n    switch (e.event) {\n      case 'pressed':\n        this.anyButtonDevice = e.device;\n        this.anyButtonCode = e.code;\n        this.anyButton.onUpdate(0, 1, 1);\n        break;\n      case 'released':\n        this.anyButtonDevice = e.device;\n        this.anyButtonCode = e.code;\n        this.anyButton.onUpdate(0, 0, -1);\n        break;\n      case 'move':\n      case 'wheel':\n        this.anyAxisDevice = e.device;\n        this.anyAxisCode = e.code;\n        this.anyAxis.onUpdate(0, e.value, e.movement);\n        break;\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * @param {number} now\n   */\n  onPoll(now) {\n    this.adapter.onPoll(now);\n    this.anyButton.onPoll(now);\n    this.anyAxis.onPoll(now);\n  }\n\n  /** @private */\n  onBind() {\n    this.dispatchEvent({\n      type: 'bind',\n    });\n  }\n\n  /** @private */\n  onUnbind() {\n    this.dispatchEvent({\n      type: 'unbind',\n    });\n  }\n\n  /** @private */\n  onEventTargetFocus() {\n    this.dispatchEvent({\n      type: 'focus',\n    });\n  }\n\n  /** @private */\n  onEventTargetBlur() {\n    // Clear all input states.\n    for (let input of this.bindings.getInputs()) {\n      input.onStatus(0, 0);\n    }\n    this.anyButton.onStatus(0, 0);\n    this.anyAxis.onStatus(0, 0);\n    this.dispatchEvent({\n      type: 'blur',\n    });\n  }\n\n  /**\n   * @param {Array<InputBinding>|Record<string, InputBinding>} bindings\n   */\n  bindBindings(bindings) {\n    if (!Array.isArray(bindings)) {\n      bindings = Object.values(bindings);\n    }\n    for (let binding of bindings) {\n      binding.bindTo(this);\n    }\n  }\n\n  /**\n   * @param {InputBinding} binding\n   */\n  bindBinding(binding) {\n    binding.bindTo(this);\n  }\n\n  /**\n   * @param {InputName} name\n   * @param {DeviceName} device\n   * @param {KeyCode} code\n   * @param {BindingOptions} [opts]\n   */\n  bindButton(name, device, code, opts = undefined) {\n    let input;\n    if (this.hasButton(name)) {\n      input = this.getButton(name);\n    } else {\n      input = new ButtonState(1);\n      this.inputs[name] = input;\n    }\n    this.bindings.bind(input, device, code, opts);\n    this.onBind();\n  }\n\n  /**\n   * @param {string} name\n   * @param {DeviceName} device\n   * @param {KeyCode} code\n   * @param {BindingOptions} [opts]\n   */\n  bindAxis(name, device, code, opts = undefined) {\n    let input;\n    if (this.hasAxis(name)) {\n      input = this.getAxis(name);\n    } else {\n      input = new AxisState(1);\n      this.inputs[name] = input;\n    }\n    this.bindings.bind(input, device, code, opts);\n    this.onBind();\n  }\n\n  /**\n   * @param {string} name\n   * @param {DeviceName} device\n   * @param {KeyCode} negativeCode\n   * @param {KeyCode} positiveCode\n   */\n  bindAxisButtons(name, device, negativeCode, positiveCode) {\n    let input;\n    if (this.hasAxis(name)) {\n      input = this.getAxis(name);\n    } else {\n      input = new AxisState(2);\n      this.inputs[name] = input;\n    }\n    this.bindings.bind(input, device, positiveCode);\n    this.bindings.bind(input, device, negativeCode, { inverted: true });\n    this.onBind();\n  }\n\n  /**\n   * @param {string} name\n   */\n  unbindButton(name) {\n    if (this.hasButton(name)) {\n      let input = this.getButton(name);\n      delete this.inputs[name];\n      this.bindings.unbind(input);\n      this.onUnbind();\n    }\n  }\n\n  /**\n   * @param {string} name\n   */\n  unbindAxis(name) {\n    if (this.hasAxis(name)) {\n      let input = this.getAxis(name);\n      delete this.inputs[name];\n      this.bindings.unbind(input);\n      this.onUnbind();\n    }\n  }\n\n  /**\n   * Get the input for the given name. Assumes the input already exists for the name.\n   * @param {InputName} name\n   * @returns {InputState}\n   */\n  getInput(name) {\n    return this.inputs[name];\n  }\n\n  /**\n   * Get the button for the given name. Assumes a button already exists for the name.\n   * @param {InputName} name\n   * @returns {ButtonState}\n   */\n  getButton(name) {\n    return /** @type {ButtonState} */ (this.inputs[name]);\n  }\n\n  /**\n   * Get the axis for the given name. Assumes an axis already exists for the name.\n   * @param {InputName} name\n   * @returns {AxisState}\n   */\n  getAxis(name) {\n    return /** @type {AxisState} */ (this.inputs[name]);\n  }\n\n  /**\n   * Whether a button exists for the name and that it is of type {@link Button}.\n   * @returns {boolean}\n   */\n  hasButton(name) {\n    return name in this.inputs && this.inputs[name] instanceof ButtonState;\n  }\n\n  /**\n   * Whether an axis exists for the name and that it is of type {@link Axis}.\n   * @returns {boolean}\n   */\n  hasAxis(name) {\n    return name in this.inputs && this.inputs[name] instanceof AxisState;\n  }\n\n  /**\n   * Get whether a button for the given name is down. Assumes a button already exists for the name.\n   * @param {InputName} name\n   * @returns {boolean}\n   */\n  isButtonDown(name) {\n    return /** @type {ButtonState} */ (this.inputs[name]).down;\n  }\n\n  /**\n   * Get whether a button for the given name is pressed. Assumes a button already exists for the name.\n   * @param {InputName} name\n   * @returns {boolean}\n   */\n  isButtonPressed(name) {\n    return /** @type {ButtonState} */ (this.inputs[name]).pressed;\n  }\n\n  /**\n   * Get whether a button for the given name is released. Assumes a button already exists for the name.\n   * @param {InputName} name\n   * @returns {boolean}\n   */\n  isButtonReleased(name) {\n    return /** @type {ButtonState} */ (this.inputs[name]).released;\n  }\n\n  /**\n   * @param {InputName} name\n   * @returns {number}\n   */\n  getInputValue(name) {\n    return this.inputs[name].value;\n  }\n\n  /**\n   * @param {InputName} name\n   * @returns {number}\n   */\n  getButtonValue(name) {\n    return this.inputs[name].value;\n  }\n\n  /**\n   * @param {InputName} name\n   * @returns {number}\n   */\n  getAxisValue(name) {\n    return this.inputs[name].value;\n  }\n\n  /**\n   * @param {InputName} name\n   * @returns {number}\n   */\n  getAxisDelta(name) {\n    return /** @type {AxisState} */ (this.inputs[name]).delta;\n  }\n\n  /** @returns {boolean} */\n  isAnyButtonDown(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyButton.down;\n    } else {\n      let buttons = this.inputs;\n      for (let name of include) {\n        let button = /** @type {ButtonState} */ (buttons[name]);\n        if (button.down) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /** @returns {boolean} */\n  isAnyButtonPressed(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyButton.pressed;\n    } else {\n      let buttons = this.inputs;\n      for (let name of include) {\n        let button = /** @type {ButtonState} */ (buttons[name]);\n        if (button.pressed) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /** @returns {boolean} */\n  isAnyButtonReleased(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyButton.released;\n    } else {\n      let buttons = this.inputs;\n      for (let name of include) {\n        let button = /** @type {ButtonState} */ (buttons[name]);\n        if (button.released) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /** @returns {number} */\n  getAnyAxisValue(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyAxis.value;\n    } else {\n      let axes = this.inputs;\n      for (let name of include) {\n        let axis = axes[name];\n        if (axis.value) {\n          return axis.value;\n        }\n      }\n    }\n    return 0;\n  }\n\n  /** @returns {number} */\n  getAnyAxisDelta(include = undefined) {\n    if (typeof include === 'undefined') {\n      return this.anyAxis.delta;\n    } else {\n      let axes = this.inputs;\n      for (let name of include) {\n        let axis = /** @type {AxisState} */ (axes[name]);\n        if (axis.delta) {\n          return axis.delta;\n        }\n      }\n    }\n    return 0;\n  }\n\n  getLastButtonDevice() {\n    return this.anyButtonDevice;\n  }\n\n  getLastButtonCode() {\n    return this.anyButtonCode;\n  }\n\n  getLastAxisDevice() {\n    return this.anyAxisDevice;\n  }\n\n  getLastAxisCode() {\n    return this.anyAxisCode;\n  }\n\n  getMouse() {\n    return /** @type {MouseDevice}*/ (this.devices[0]);\n  }\n\n  getKeyboard() {\n    return /** @type {KeyboardDevice}*/ (this.devices[1]);\n  }\n}\n", "import INNER_HTML from './InputPort.template.html';\nimport INNER_STYLE from './InputPort.module.css';\n\nimport { InputCode } from '../inputcode/InputCode.js';\nimport { InputContext } from '../InputContext';\n\n/**\n * @typedef {import('../device/InputDevice.js').InputDevice} InputDevice\n * @typedef {import('../device/InputDevice.js').InputDeviceEvent} InputDeviceEvent\n * @typedef {import('../InputBindings.js').DeviceName} DeviceName\n * @typedef {import('../InputBindings.js').KeyCode} KeyCode\n * @typedef {import('../InputBindings.js').BindingOptions} BindingOptions\n * @typedef {import('../InputContext').InputName} InputName\n */\n\nexport class InputPort extends HTMLElement {\n\n  /**\n   * @param {object} [opts]\n   * @param {HTMLElement} [opts.root]\n   * @param {string} [opts.id]\n   * @param {string} [opts.for]\n   * @param {boolean} [opts.autopoll]\n   */\n  static create(opts = {}) {\n    const {\n      root = document.body,\n      id = undefined,\n      for: forId = undefined,\n      autopoll = false,\n    } = opts || {};\n    let result = new InputPort();\n    result.id = id;\n    result.for = forId;\n    result.autopoll = autopoll;\n    root.appendChild(result);\n    return result;\n  }\n\n  /** @protected */\n  static get [Symbol.for('templateNode')]() {\n    let t = document.createElement('template');\n    t.innerHTML = INNER_HTML;\n    Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n    return t;\n  }\n\n  /** @protected */\n  static get [Symbol.for('styleNode')]() {\n    let t = document.createElement('style');\n    t.innerHTML = INNER_STYLE;\n    Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n    return t;\n  }\n\n  static define(customElements = window.customElements) {\n    customElements.define('input-port', this);\n  }\n\n  static get observedAttributes() {\n    return ['autopoll', 'for'];\n  }\n\n  /** @returns {boolean} */\n  get autopoll() {\n    return this._autopoll;\n  }\n\n  set autopoll(value) {\n    this.toggleAttribute('autopoll', value);\n  }\n\n  /** @returns {string} */\n  get for() {\n    return this._for;\n  }\n\n  set for(value) {\n    this.setAttribute('for', value);\n  }\n\n  constructor() {\n    super();\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('templateNode')].content.cloneNode(true)\n    );\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('styleNode')].cloneNode(true)\n    );\n\n    /** @private */\n    this._titleElement = shadowRoot.querySelector('#title');\n    /** @private */\n    this._pollElement = shadowRoot.querySelector('#poll');\n    /** @private */\n    this._focusElement = shadowRoot.querySelector('#focus');\n    /** @private */\n    this._bodyElement = shadowRoot.querySelector('tbody');\n    /** @private */\n    this._outputElements = {};\n\n    /** @private */\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n    /** @private */\n    this.animationFrameHandle = null;\n\n    const eventTarget = this;\n    /** @private */\n    this._for = '';\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this._eventTarget = eventTarget;\n    /** @private */\n    this._autopoll = false;\n\n    /** @private */\n    this._context = null;\n\n    /** @private */\n    this.onInputContextBind = this.onInputContextBind.bind(this);\n    /** @private */\n    this.onInputContextUnbind = this.onInputContextUnbind.bind(this);\n    /** @private */\n    this.onInputContextFocus = this.onInputContextFocus.bind(this);\n    /** @private */\n    this.onInputContextBlur = this.onInputContextBlur.bind(this);\n  }\n\n  connectedCallback() {\n    if (Object.prototype.hasOwnProperty.call(this, 'for')) {\n      let value = this.for;\n      delete this.for;\n      this.for = value;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(this, 'autopoll')) {\n      let value = this.autopoll;\n      delete this.autopoll;\n      this.autopoll = value;\n    }\n\n    // Make sure the table and values are up to date\n    this.updateTable();\n    this.updateTableValues();\n    this.animationFrameHandle = window.requestAnimationFrame(this.onAnimationFrame);\n  }\n\n  disconnectedCallback() {\n    let ctx = this._context;\n    if (ctx) {\n      ctx.removeEventListener('bind', this.onInputContextBind);\n      ctx.removeEventListener('unbind', this.onInputContextUnbind);\n      ctx.removeEventListener('blur', this.onInputContextBlur);\n      ctx.removeEventListener('focus', this.onInputContextFocus);\n      ctx.destroy();\n      this._context = null;\n    }\n  }\n  \n  attributeChangedCallback(attribute, prev, value) {\n    switch (attribute) {\n      case 'for': {\n        this._for = value;\n        let target;\n        let name;\n        if (value) {\n          target = document.getElementById(value);\n          name = `${target.tagName.toLowerCase()}#${value}`;\n        } else {\n          target = this;\n          name = 'input-port';\n        }\n        this._eventTarget = target;\n        if (this._context) {\n          this._context.setEventTarget(this._eventTarget);\n        }\n        // For debug info\n        this._titleElement.innerHTML = `for ${name}`;\n      }\n        break;\n      case 'autopoll':\n        this._autopoll = value !== null;\n        if (this._context) {\n          this._context.toggleAutoPoll(this._autopoll);\n        }\n        break;\n    }\n  }\n\n  /** @private */\n  onAnimationFrame() {\n    this.animationFrameHandle = window.requestAnimationFrame(this.onAnimationFrame);\n    this.updateTableValues();\n    this.updatePollStatus();\n  }\n\n  /** @private */\n  onInputContextBind() {\n    this.updateTable();\n    return true;\n  }\n\n  /** @private */\n  onInputContextUnbind() {\n    this.updateTable();\n    return true;\n  }\n\n  /** @private */\n  onInputContextFocus() {\n    this._focusElement.innerHTML = '\u2713';\n    return true;\n  }\n\n  /** @private */\n  onInputContextBlur() {\n    this._focusElement.innerHTML = '';\n    return true;\n  }\n\n  /**\n   * @param {'axisbutton'} [contextId]\n   * @param {object} [options]\n   * @returns {InputContext}\n   */\n  getContext(contextId = 'axisbutton', options = undefined) {\n    switch (contextId) {\n      case 'axisbutton':\n        if (!this._context) {\n          let ctx = new InputContext(this._eventTarget, options);\n          ctx.addEventListener('bind', this.onInputContextBind);\n          ctx.addEventListener('unbind', this.onInputContextUnbind);\n          ctx.addEventListener('blur', this.onInputContextBlur);\n          ctx.addEventListener('focus', this.onInputContextFocus);\n          if (this._autopoll) {\n            ctx.toggleAutoPoll(true);\n          }\n          this._context = ctx;\n        }\n        return this._context;\n      default:\n        throw new Error(`Input context id '${contextId}' is not supported.`);\n    }\n  }\n\n  /** @private */\n  updateTable() {\n    if (!this.isConnected) {\n      // Don't update the DOM if not connected to any :(\n      return;\n    } else if (!this._context) {\n      // Clear all values if no context is available\n      this._outputElements = {};\n      this._bodyElement.innerHTML = '';\n      return;\n    } else {\n      let context = this._context;\n      let inputs = context.inputs;\n      let bindings = context.bindings;\n      let primaryElements = {};\n      let entries = [];\n      for (let name of Object.keys(inputs)) {\n        let input = inputs[name];\n        let primary = true;\n        for (let binding of bindings.getBindingsByInput(input)) {\n          let element = createInputTableEntry(\n            `${input.constructor.name}.${name}`,\n            `${binding.device}.${binding.code}`,\n            0,\n            primary\n          );\n          entries.push(element);\n          if (primary) {\n            primaryElements[name] = element.querySelector('output');\n            primary = false;\n          }\n        }\n      }\n      this._outputElements = primaryElements;\n      this._bodyElement.innerHTML = '';\n      for (let entry of entries) {\n        this._bodyElement.appendChild(entry);\n      }\n    }\n  }\n\n  /** @private */\n  updateTableValues() {\n    if (!this.isConnected) {\n      // Don't update the DOM if not connected to any :(\n      return;\n    } else if (!this._context) {\n      // Clear all values if no context is available\n      for (let name of Object.keys(this._outputElements)) {\n        let element = this._outputElements[name];\n        element.innerText = '---';\n      }\n      return;\n    } else {\n      let context = this._context;\n      let inputs = context.inputs;\n      for (let name of Object.keys(this._outputElements)) {\n        let element = this._outputElements[name];\n        let value = inputs[name].value;\n        element.innerText = Number(value).toFixed(2);\n      }\n    }\n  }\n\n  /** @private */\n  updatePollStatus() {\n    if (!this.isConnected) {\n      // Don't update the DOM if not connected to any :(\n      return;\n    } else if (!this._context) {\n      // Clear all values if no context is available\n      this._pollElement.innerHTML = '-';\n      return;\n    } else {\n      let context = this._context;\n      let inputs = context.inputs;\n      for (let input of Object.values(inputs)) {\n        if (!input.polling) {\n          this._pollElement.innerHTML = '';\n          return;\n        }\n      }\n      this._pollElement.innerHTML = '\u2713';\n    }\n  }\n}\nInputPort.define();\n\nfunction createInputTableEntry(name, key, value, primary = true) {\n  let row = document.createElement('tr');\n  if (primary) {\n    row.classList.add('primary');\n  }\n  // Name\n  {\n    let data = document.createElement('td');\n    data.textContent = name;\n    data.classList.add('name');\n    row.appendChild(data);\n  }\n  // Value\n  {\n    let data = document.createElement('td');\n    let output = document.createElement('output');\n    if (primary) {\n      output.innerText = Number(value).toFixed(2);\n    } else {\n      output.innerText = '---';\n    }\n    output.classList.add('value');\n    data.appendChild(output);\n    row.appendChild(data);\n  }\n  // Key\n  {\n    let data = document.createElement('td');\n    data.classList.add('key');\n    let kbd = new InputCode();\n    kbd.innerText = key;\n    data.appendChild(kbd);\n    row.appendChild(data);\n  }\n  return row;\n}\n", "import { ButtonState } from './state/ButtonState.js';\nimport { KeyboardDevice } from './device/KeyboardDevice.js';\nimport { InputBindings } from './InputBindings.js';\nimport { AutoPoller } from './AutoPoller.js';\nimport { DeviceInputAdapter } from './DeviceInputAdapter.js';\nimport { KEYBOARD } from './keycode/KeyCodes.js';\n\n/**\n * @typedef {import('./state/ButtonState.js').ButtonReadOnly} ButtonReadOnly\n */\n\nconst KEYBOARD_SOURCE = Symbol('keyboardSource');\nexport class Keyboard {\n  constructor(eventTarget, opts) {\n    /** @type {ButtonReadOnly} */\n    this.KeyA = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyB = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyC = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyD = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyE = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyF = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyG = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyH = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyI = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyJ = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyK = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyL = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyM = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyN = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyO = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyP = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyQ = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyR = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyS = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyT = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyU = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyV = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyW = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyX = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyY = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.KeyZ = new ButtonState();\n\n    /** @type {ButtonReadOnly} */\n    this.Digit0 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit1 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit2 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit3 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit4 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit5 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit6 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit7 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit8 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Digit9 = new ButtonState();\n\n    /** @type {ButtonReadOnly} */\n    this.Minus = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Equal = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.BracketLeft = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.BracketRight = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Semicolon = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Quote = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Backquote = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Backslash = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Comma = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Period = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Slash = new ButtonState();\n\n    /** @type {ButtonReadOnly} */\n    this.Escape = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Space = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.CapsLock = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Backspace = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Delete = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Tab = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Enter = new ButtonState();\n\n    /** @type {ButtonReadOnly} */\n    this.ArrowUp = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.ArrowDown = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.ArrowLeft = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.ArrowRight = new ButtonState();\n\n    const deviceName = KEYBOARD;\n    const device = new KeyboardDevice(deviceName, eventTarget, opts);\n    const bindings = new InputBindings();\n    for (let key in this) {\n      if (Object.prototype.hasOwnProperty.call(this, key)) {\n        let input = /** @type {ButtonState} */ (this[key]);\n        bindings.bind(input, deviceName, key);\n      }\n    }\n    const adapter = new DeviceInputAdapter(bindings);\n    // @ts-ignore\n    device.addEventListener('input', adapter.onInput);\n    // @ts-ignore\n    const autopoller = new AutoPoller(adapter);\n    autopoller.start();\n    this[KEYBOARD_SOURCE] = {\n      device,\n      bindings,\n      adapter,\n      autopoller,\n    };\n  }\n\n  destroy() {\n    const source = this[KEYBOARD_SOURCE];\n    source.autopoller.stop();\n    // @ts-ignore\n    source.device.removeEventListener('input', source.adapter.onInput);\n    source.device.destroy();\n    source.bindings.clear();\n  }\n}\n", "import { AxisState } from './state/AxisState.js';\nimport { ButtonState } from './state/ButtonState.js';\nimport { MouseDevice } from './device/MouseDevice.js';\nimport { InputBindings } from './InputBindings.js';\nimport { DeviceInputAdapter } from './DeviceInputAdapter.js';\nimport { AutoPoller } from './AutoPoller.js';\nimport { MOUSE } from './keycode/KeyCodes.js';\n\n/**\n * @typedef {import('./state/AxisState.js').AxisReadOnly} AxisReadOnly\n * @typedef {import('./state/ButtonState.js').ButtonReadOnly} ButtonReadOnly\n */\n\nconst MOUSE_SOURCE = Symbol('mouseSource');\nexport class Mouse {\n  constructor(eventTarget, opts) {\n    /** @type {AxisReadOnly} */\n    this.PosX = new AxisState();\n    /** @type {AxisReadOnly} */\n    this.PosY = new AxisState();\n\n    /** @type {AxisReadOnly} */\n    this.WheelX = new AxisState();\n    /** @type {AxisReadOnly} */\n    this.WheelY = new AxisState();\n    /** @type {AxisReadOnly} */\n    this.WheelZ = new AxisState();\n\n    /** @type {ButtonReadOnly} */\n    this.Button0 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Button1 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Button2 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Button3 = new ButtonState();\n    /** @type {ButtonReadOnly} */\n    this.Button4 = new ButtonState();\n\n    const deviceName = MOUSE;\n    const device = new MouseDevice(deviceName, eventTarget, opts);\n    const bindings = new InputBindings();\n    for (let key in this) {\n      if (Object.prototype.hasOwnProperty.call(this, key)) {\n        let input = /** @type {AxisState|ButtonState} */ (this[key]);\n        bindings.bind(input, deviceName, key);\n      }\n    }\n    const adapter = new DeviceInputAdapter(bindings);\n    device.addEventListener('input', adapter.onInput);\n    const autopoller = new AutoPoller(adapter);\n    autopoller.start();\n    this[MOUSE_SOURCE] = {\n      device,\n      bindings,\n      adapter,\n      autopoller,\n    };\n  }\n\n  destroy() {\n    const source = this[MOUSE_SOURCE];\n    source.autopoller.stop();\n    source.device.removeEventListener('input', source.adapter.onInput);\n    source.device.destroy();\n    source.bindings.clear();\n  }\n}\n", "import { makeRe } from 'picomatch';\n\nexport class GlobExp {\n    /**\n     * @param {string|GlobExp} pattern \n     */\n    constructor(pattern) {\n        let source;\n        if (typeof pattern === 'object' && pattern instanceof GlobExp) {\n            source = pattern.source;\n        } else {\n            source = String(pattern);\n        }\n        this.source = source;\n\n        /** @private */\n        this._re = makeRe(source);\n    }\n\n    /**\n     * @param {string} string \n     * @returns {boolean}\n     */\n    test(string) {\n        return this._re.test(string);\n    }\n}\n", "import { GlobExp } from './GlobExp.js';\n\n/**\n * @typedef AssetStore\n * @property {Record<string, object>} store\n * @property {Record<string, Loading>} loadings\n * @property {Array<Fallback>} defaults\n */\n\n/**\n * @template T\n * @template {object} S\n * @callback AssetLoader\n * @param {string|ArrayBuffer} src\n * @param {S} [opts]\n * @returns {Promise<T>}\n */\n\nconst FILE_URI_PREFIX_PATTERN = /^([_\\w\\d]+)\\:\\/\\//;\n\n/**\n * Load asset using a loader with the given src.\n * - If loading to transform a cached asset, the cached uri must start with `res://` (or equivalent).\n * - If loading to transform cached raw buffers from an asset pack, use `raw://`.\n * - Otherwise, it will call `fetch()` on src.\n * \n * @template T, S\n * @param {AssetStore} assets\n * @param {string} uri \n * @param {string} src\n * @param {AssetLoader<T, S>} loader\n * @param {S} opts\n * @param {number} timeout\n * @returns {Promise<T>}\n */\n export async function loadInStore(assets, uri, src, loader, opts, timeout) {\n    const { loadings } = assets;\n    \n    let loading;\n    if (uri in loadings) {\n        loading = loadings[uri];\n    } else {\n        loading = new Loading(timeout);\n        loadings[uri] = loading;\n    }\n\n    const attempt = Loading.nextAttempt(loading);\n\n    /** @type {Array<Promise<T>>} */\n    let promises = [loading.promise];\n    if (FILE_URI_PREFIX_PATTERN.test(src)) {\n        // Loading from cached file\n        promises.push(getLoadedInStore(assets, src, timeout)\n            .then(cached => loader(cached, opts))\n            .then(value => Loading.isCurrentAttempt(loading, attempt)\n                ? cacheInStore(assets, uri, value)\n                : undefined));\n    } else {\n        // Fetching from network\n        promises.push(fetch(src)\n            .then(response => response.arrayBuffer())\n            .then(arr => loader(arr))\n            .then(value => Loading.isCurrentAttempt(loading, attempt)\n                ? cacheInStore(assets, uri, value)\n                : undefined));\n    }\n    return await Promise.race(promises);\n}\n\n/**\n * @template T\n * @param {AssetStore} assets\n * @param {string} uri\n * @param {T} value\n * @returns {T}\n */\nexport function cacheInStore(assets, uri, value) {\n    const { store, loadings } = assets;\n    store[uri] = value;\n    // Send asset to awaiting loaders...\n    if (uri in loadings) {\n        loadings[uri].resolve(value);\n        delete loadings[uri];\n    }\n    return value;\n}\n\n/**\n * @template T\n * @param {AssetStore} assets\n * @param {string|GlobExp} glob\n * @param {T} value\n * @returns {T}\n */\nexport function cacheDefaultInStore(assets, glob, value) {\n    const { defaults } = assets;\n    if (typeof glob === 'string') {\n        glob = new GlobExp(glob);\n    }\n    const uri = `__default://[${defaults.length}]`;\n    cacheInStore(assets, uri, value);\n    defaults.push(new Fallback(glob, uri));\n    return value;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n */\nexport function unloadInStore(assets, uri) {\n    const { store, loadings } = assets;\n    if (uri in loadings) {\n        loadings[uri].reject(new Error('Stop loading to delete asset.'));\n        delete loadings[uri];\n    }\n    if (uri in store) {\n        delete store[uri];\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string|GlobExp} glob\n */\nexport function clearInStore(assets, glob) {\n    if (typeof glob === 'string') {\n        glob = new GlobExp(glob);\n    }\n    const { store, loadings } = assets;\n    // Clear loadings\n    for (let [uri, loading] of Object.entries(loadings)) {\n        if (glob.test(uri)) {\n            loading.reject(new Error(`Stop loading to clear assets matching ${glob}`));\n            delete loadings[uri];\n        }\n    }\n    // Clear cache\n    for (let uri of Object.keys(store)) {\n        if (glob.test(uri)) {\n            delete store[uri];\n        }\n    }\n}\n\n/**\n * @param {AssetStore} assets \n */\nexport function resetStore(assets) {\n    const { store, loadings, defaults } = assets;\n    // Clear loadings\n    for (let [uri, loading] of Object.entries(loadings)) {\n        loading.reject(new Error(`Stop loading to clear all assets.`));\n        delete loadings[uri];\n    }\n    // Clear cache\n    for (let uri of Object.keys(store)) {\n        delete store[uri];\n    }\n    // Clear defaults\n    defaults.length = 0;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @returns {Promise<object>}\n */\nexport function getLoadingInStore(assets, uri) {\n    const { loadings } = assets;\n    if (uri in loadings) {\n        return loadings[uri].promise;\n    } else {\n        return null;\n    }\n}\n\n/**\n * @param {AssetStore} assets \n * @param {string} uri \n */\nexport function cancelLoadingInStore(assets, uri) {\n    const { loadings } = assets;\n    for (let [uri, loading] of Object.entries(loadings)) {\n        loading.reject(new Error(`Stop loading to clear all assets.`));\n        delete loadings[uri];\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @param {number} timeout\n * @returns {Promise<object>}\n */\nexport async function getLoadedInStore(assets, uri, timeout) {\n    const { store, loadings } = assets;\n    if (uri in store) {\n        return store[uri];\n    } else if (uri in loadings) {\n        return loadings[uri].promise;\n    } else {\n        let loading = new Loading(timeout);\n        loadings[uri] = loading;\n        return loading.promise;\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {object}\n */\nexport function getDefaultInStore(assets, uri) {\n    const { defaults } = assets;\n    for (let def of defaults) {\n        if (def.glob.test(uri)) {\n            return getCurrentInStore(assets, def.uri);\n        }\n    }\n    return null;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @returns {object}\n */\nexport function getCurrentInStore(assets, uri) {\n    return assets.store[uri];\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function hasInStore(assets, uri) {\n    return Boolean(assets.store[uri]);\n}\n\n/**\n * @param {AssetStore} assets\n * @returns {Array<string>}\n */\nexport function keysInStore(assets) {\n    return Object.keys(assets.store);\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function isAssetCachedInStore(assets, uri) {\n    return uri in assets.store;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function isAssetLoadingInStore(assets, uri) {\n    return uri in assets.loadings;\n}\n\nclass Fallback {\n    /**\n     * @param {GlobExp} glob \n     * @param {string} uri \n     */\n    constructor(glob, uri) {\n        this.glob = glob;\n        this.uri = uri;\n    }\n}\n\nclass Loading {\n\n    /**\n     * @param {Loading} loading\n     */\n    static nextAttempt(loading) {\n        return ++loading._promiseHandle;\n    }\n\n    /**\n     * @param {Loading} loading \n     * @param {number} attempt\n     */\n    static isCurrentAttempt(loading, attempt) {\n        return loading._promiseHandle === attempt;\n    }\n\n    constructor(timeout) {\n        /** @private */\n        this._promiseHandle = 0;\n        /** @private */\n        this._resolve = null;\n        /** @private */\n        this._reject = null;\n        /** @private */\n        this._reason = null;\n        /** @private */\n        this._value = null;\n        /** @private */\n        this._timeoutHandle =\n            Number.isFinite(timeout) && timeout > 0\n                ? setTimeout(() => {\n                    this.reject(`Asset loading exceeded timeout of ${timeout} ms.`);\n                }, timeout)\n                : null;\n        /** @private */\n        this._promise = new Promise((resolve, reject) => {\n            if (this._value) {\n                resolve(this._value);\n            } else {\n                this._resolve = resolve;\n            }\n            if (this._reason) {\n                reject(this._reason);\n            } else {\n                this._reject = reject;\n            }\n        });\n    }\n\n    get promise() {\n        return this._promise;\n    }\n\n    resolve(value) {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n            this._timeoutHandle = null;\n        }\n        if (this._resolve) {\n            this._resolve(value);\n        } else {\n            this._value = value;\n        }\n    }\n\n    reject(reason) {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n            this._timeoutHandle = null;\n        }\n        if (this._reject) {\n            this._reject(reason);\n        } else {\n            this._reason = reason;\n        }\n    }\n}\n", "import { cacheDefaultInStore, cacheInStore, clearInStore, getCurrentInStore, getDefaultInStore, getLoadedInStore, getLoadingInStore, hasInStore, isAssetCachedInStore, isAssetLoadingInStore, keysInStore, loadInStore, resetStore, unloadInStore } from './AssetStore.js';\nimport { GlobExp } from './GlobExp.js';\n\nexport class AssetManager {\n\n    /**\n     * @param {AssetManager} [parent] \n     */\n    constructor(parent = null) {\n        this.parent = parent;\n        /** @private */\n        this.store = {};\n        /** @private */\n        this.loadings = {};\n        /** @private */\n        this.defaults = [];\n    }\n\n    /**\n     * @param {string} uri \n     * @returns {object}\n     */\n    get(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetCachedInStore(assets, uri)) {\n            return getCurrentInStore(assets, uri);\n        }\n        let def = getDefaultInStore(assets, uri);\n        if (def) {\n            return def;\n        }\n        return null;\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout \n     * @returns {Promise<T>}\n     */\n    async resolve(uri, filepath, loader, opts, timeout) {\n        return this.get(uri) || await this.load(uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @template T\n     * @param {string|GlobExp} uriGlob \n     * @param {T} value \n     * @returns {T}\n     */\n    fallback(uriGlob, value) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return cacheDefaultInStore(assets, uriGlob, value);\n    }\n\n    /**\n     * @template T\n     * @param {string} uri \n     * @param {T} value \n     * @returns {T}\n     */\n    cache(uri, value) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return cacheInStore(assets, uri, value);\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout\n     * @returns {Promise<T>}\n     */\n    async load(uri, filepath, loader, opts, timeout) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetCachedInStore(assets, uri)) {\n            return getCurrentInStore(assets, uri);\n        } else if (isAssetLoadingInStore(assets, uri)) {\n            return await getLoadedInStore(assets, uri, timeout);\n        }\n        return await loadInStore(assets, uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout\n     * @returns {Promise<T>}\n     */\n    async reload(uri, filepath, loader, opts, timeout) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return await loadInStore(assets, uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    unload(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        unloadInStore(assets, uri);\n    }\n\n    /**\n     * @param {string|GlobExp} uriGlob \n     */\n    clear(uriGlob) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        clearInStore(assets, uriGlob);\n    }\n\n    /**\n     * @param {string} uri\n     */\n    current(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return getCurrentInStore(assets, uri);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    exists(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return hasInStore(assets, uri);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    loading(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetLoadingInStore(assets, uri)) {\n            return getLoadingInStore(assets, uri);\n        } else {\n            return null;\n        }\n    }\n\n    keys() {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return keysInStore(assets);\n    }\n\n    reset() {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        resetStore(assets);\n    }\n}\n", "import { AssetManager } from './AssetManager';\n\nconst DEFAULT_TIMEOUT = 5000;\n\n/** @template T, S */\nexport class AssetRef {\n\n    /**\n     * @param {string} uri \n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} [opts] \n     * @param {string} [filepath]\n     * @param {T|AssetRef<T>} [initial]\n     */\n    constructor(uri, loader, opts = undefined, filepath = uri, initial = null) {\n        this.uri = uri;\n        this.loader = loader;\n        this.opts = opts;\n\n        /** @private */\n        this.initial = initial;\n        /** @private */\n        this.filepath = filepath;\n\n        /** @type {AssetManager} */\n        this.source = null;\n        /** @type {T} */\n        this.current = null;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {T} value \n     */\n    cache(assetManager, value) {\n        assetManager.cache(this.uri, value);\n        this.source = assetManager;\n        this.current = value;\n        return this;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @returns {T}\n     */\n    get(assetManager) {\n        let result;\n        if (!assetManager.exists(this.uri)) {\n            if (this.initial && this.initial instanceof AssetRef) {\n                result = this.initial.get(assetManager);\n            } else {\n                result = this.initial;\n            }\n        } else {\n            result = assetManager.current(this.uri);\n        }\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {number} [timeout]\n     */\n    async load(assetManager, timeout = DEFAULT_TIMEOUT) {\n        let result;\n        if (!assetManager.exists(this.uri)) {\n            result = await assetManager.load(this.uri, this.filepath, this.loader, this.opts, timeout);\n            if (!result) {\n                if (this.initial && this.initial instanceof AssetRef) {\n                    let initial = this.initial;\n                    result = await assetManager.load(initial.uri, initial.filepath, initial.loader, initial.opts, timeout);\n                } else {\n                    result = this.initial;\n                }\n            }\n        } else {\n            result = assetManager.current(this.uri);\n        }\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {number} [timeout] \n     */\n    async reload(assetManager, timeout = DEFAULT_TIMEOUT) {\n        let result = await assetManager.reload(this.uri, this.filepath, this.loader, this.opts, timeout);\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n}\n", "import { unzip } from 'fflate';\n\nimport { cacheInStore } from './AssetStore.js';\nimport { AssetManager } from './AssetManager.js';\nimport { AssetRef } from './AssetRef.js';\n\n/**\n * Fetch asset pack from url and cache raw file content under `raw://`.\n * \n * @param {string} url\n * @param {(src: Uint8Array, path: string) => void} callback\n */\nexport async function loadAssetPack(url, callback) {\n    let response = await fetch(url);\n    let arrayBuffer = await response.arrayBuffer();\n    await new Promise((resolve, reject) => {\n        unzip(new Uint8Array(arrayBuffer), (err, data) => {\n            if (err) {\n                reject(err);\n            } else {\n                for (let [path, buf] of Object.entries(data)) {\n                    // Standardize WIN paths\n                    path = path.replaceAll('\\\\', '/');\n                    callback(buf, path);\n                }\n                resolve();\n            }\n        });\n    });\n}\n\n/**\n * Fetch asset pack from url and cache raw file content under `raw://`.\n * \n * @param {AssetManager} assets\n * @param {string} url\n * @param {(src: Uint8Array, uri: string, path: string) => void} [callback]\n */\nexport async function cacheAssetPackAsRaw(assets, url, callback = undefined) {\n    const assetStore = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (assets));\n    let rootPath = 'raw://';\n    let response = await fetch(url);\n    let arrayBuffer = await response.arrayBuffer();\n    await new Promise((resolve, reject) => {\n        unzip(new Uint8Array(arrayBuffer), (err, data) => {\n            if (err) {\n                reject(err);\n            } else {\n                for (let [path, buf] of Object.entries(data)) {\n                    // Standardize WIN paths\n                    path = path.replaceAll('\\\\', '/');\n                    // Remove the zip directory name\n                    let i = path.indexOf('/');\n                    if (i >= 0) {\n                        path = path.substring(i + 1);\n                    }\n                    // Put the raw file in cache\n                    let uri = rootPath + path;\n                    cacheInStore(assetStore, uri, buf);\n                    if (callback) {\n                        callback(buf, uri, path);\n                    }\n                }\n                resolve();\n            }\n        });\n    });\n}\n\n/**\n * This is the same as calling `await AssetRef.load()` for each ref.\n * \n * @param {AssetManager} assets\n * @param {Array<AssetRef<?, ?>>} refs \n * @param {number} [timeout] \n */\nexport async function preloadAssetRefs(assets, refs, timeout = 5000) {\n    let promises = [];\n    for (let ref of refs) {\n        promises.push(ref.load(assets, timeout));\n    }\n    await Promise.allSettled(promises);\n}\n", "/**\n * @typedef {Record<string, AtlasSpriteData>} Atlas\n * \n * @typedef AtlasSpriteData\n * @property {number} u\n * @property {number} v\n * @property {number} w\n * @property {number} h\n * @property {number} frames\n * @property {number} cols\n * @property {number} rows\n * @property {string} name\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @param {{ onprogress: (value: number, loaded: number, total: number) => void }} opts\n * @returns {Promise<Atlas>}\n */\nexport async function AtlasLoader(src, opts = { onprogress: undefined }) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return AtlasLoader(arrayBuffer, opts);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error('Cannot load from source - must be an array buffer or fetchable url.');\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  const string = new TextDecoder().decode(arrayBuffer);\n  /** @type {Atlas} */\n  let result = {};\n  let lines = string.split('\\n');\n  let progressTotal = lines.length;\n  let progressLoaded = 0;\n  if (opts.onprogress) {\n    opts.onprogress(0, 0, progressTotal);\n  }\n  for (let line of lines) {\n    ++progressLoaded;\n    line = line.trim();\n    if (line.length <= 0) continue;\n    if (line.startsWith('#')) continue;\n    if (line.startsWith('//')) continue;\n\n    let args = [];\n    let i = 0;\n    let j = line.indexOf(' ');\n    while (j >= 0) {\n      args.push(line.substring(i, j));\n      i = j + 1;\n      j = line.indexOf(' ', i);\n    }\n    args.push(line.substring(i));\n\n    let name = args[0];\n    let u = Number.parseInt(args[1]);\n    let v = Number.parseInt(args[2]);\n    let w = Number.parseInt(args[3]);\n    let h = Number.parseInt(args[4]);\n    let frames =\n      args.length >= 6\n        ? Number.parseInt(args[5]) // User-defined\n        : 1; // Default 1 frame\n    let cols =\n      args.length >= 7\n        ? Number.parseInt(args[6]) // User-defined\n        : frames; // Default same as frame count\n    let rows =\n      args.length >= 8\n        ? Number.parseInt(args[7]) // User-defined\n        : frames > cols // If more frames than cols...\n        ? Math.ceil(frames / cols) // ...then expect more rows\n        : 1; // Otherwise, default single row\n\n    result[name] = {\n      u,\n      v,\n      w,\n      h,\n      frames,\n      cols,\n      rows,\n      name,\n    };\n\n    if (opts.onprogress) {\n      opts.onprogress(progressLoaded / progressTotal, progressLoaded, progressTotal);\n    }\n  }\n  if (opts.onprogress) {\n    opts.onprogress(1, progressLoaded, progressLoaded);\n  }\n  return result;\n}\n", "/**\n * @typedef BMFontChar\n * @property {number} id The character id.\n * @property {number} x The left position of the character image in the texture.\n * @property {number} y The top position of the character image in the texture.\n * @property {number} width The width of the character image in the texture.\n * @property {number} height The height of the character image in the texture.\n * @property {number} xoffset How much the current position should be offset when\n *                            copying the image from the texture to the screen.\n * @property {number} yoffset How much the current position should be offset when\n *                            copying the image from the texture to the screen.\n * @property {number} xadvance How much the current position should be advanced\n *                             after drawing the character.\n * @property {number} page The texture page where the character image is found.\n * @property {number} chnl The texture channel where the character image is\n *                         found (1 = blue, 2 = green, 4 = red, 8 = alpha,\n *                         15 = all channels).\n *\n * @typedef BMFontKerning\n * @property {number} first The first character id.\n * @property {number} second The second character id.\n * @property {number} amount How much the x position should be adjusted when\n *                           drawing the second character immediately following\n *                           the first.\n *\n * @typedef BMFontData\n * @property {object} info              This tag holds information on how the\n *                                      font was generated.\n * @property {string} info.face         This is the name of the true type font.\n * @property {number} info.size         The size of the true type font.\n * @property {number} info.bold         The font is bold.\n * @property {number} info.italic\t    The font is italic.\n * @property {string} info.charset\t    The name of the OEM charset used (when\n *                                      not unicode).\n * @property {number} info.unicode\t    Set to 1 if it is the unicode charset.\n * @property {number} info.stretchH\t    The font height stretch in percentage.\n *                                      100% means no stretch.\n * @property {number} info.smooth\t    Set to 1 if smoothing was turned on.\n * @property {number} info.aa\t        The supersampling level used. 1 means no\n *                                      supersampling was used.\n * @property {number} info.padding\t    The padding for each character\n *                                      (up, right, down, left).\n * @property {number} info.spacing\t    The spacing for each character\n *                                      (horizontal, vertical).\n * @property {number} info.outline\t    The outline thickness for the characters.\n * @property {object} common            This tag holds information common to all\n *                                      characters.\n * @property {number} common.lineHeight This is the distance in pixels between\n *                                      each line of text.\n * @property {number} common.base\t    The number of pixels from the absolute\n *                                      top of the line to the base of the characters.\n * @property {number} common.scaleW\t    The width of the texture, normally used\n *                                      to scale the x pos of the character image.\n * @property {number} common.scaleH\t    The height of the texture, normally used\n *                                      to scale the y pos of the character image.\n * @property {number} common.pages\t    The number of texture pages included in\n *                                      the font.\n * @property {number} common.packed\t    Set to 1 if the monochrome characters\n *                                      have been packed into each of the texture\n *                                      channels. In this case alphaChnl describes\n *                                      what is stored in each channel.\n * @property {number} common.alphaChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.redChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.greenChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.blueChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {object} page              This tag gives the name of a texture\n *                                      file. There is one for each page in the font.\n * @property {number} page.id\t        The page id.\n * @property {number} page.file\t        The texture file name.\n * @property {Array<BMFontChar>} chars  This tag describes characters in the font.\n *                                      There is one for each included character\n *                                      in the font.\n * @property {Array<BMFontKerning>} kernings The kerning information is used to adjust\n *                                           the distance between certain characters,\n *                                           e.g. some characters should be placed\n *                                           closer to each other than others.\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<BMFontData>}\n */\nexport async function BMFontLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return BMFontLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return parse(new TextDecoder().decode(arrayBuffer));\n}\n\nconst TAG_PATTERN = /(.+?)\\s+(.*)/;\nconst LINE_PATTERN = /(.+)=(.+)/;\n\n/**\n * @param {string} string\n * @returns {BMFontData}\n */\nfunction parse(string) {\n  let lines = string.split('\\n');\n  let info = {};\n  let common = {};\n  let page = {};\n  let chars = [];\n  let kernings = [];\n  for (let line of lines) {\n    let array = TAG_PATTERN.exec(line);\n    if (!array) {\n      continue;\n    }\n    let [_, tag, props] = array;\n    switch (tag) {\n      case 'info':\n        parseBMLine(info, props);\n        break;\n      case 'common':\n        parseBMLine(common, props);\n        break;\n      case 'page':\n        parseBMLine(page, props);\n        break;\n      case 'chars':\n        // This only has count info. Ignore it.\n        break;\n      case 'char':\n        let char = {};\n        parseBMLine(char, props);\n        if ('id' in char) {\n          chars.push(char);\n        }\n        break;\n      case 'kerning':\n        let kerning = {};\n        parseBMLine(kerning, props);\n        if ('first' in kerning) {\n          kernings.push(kerning);\n        }\n        break;\n      default:\n      // Unknown tag.\n    }\n  }\n  let data = /** @type {BMFontData} */ ({\n    info,\n    common,\n    page,\n    chars,\n    kernings,\n  });\n  return data;\n}\n\nfunction parseBMLine(out, line) {\n  let props = line.split(/\\s+/);\n  for (let prop of props) {\n    let array = LINE_PATTERN.exec(prop);\n    if (!array) {\n      continue;\n    }\n    let [_, key, value] = array;\n    let result = JSON.parse(`[${value}]`);\n    if (result.length === 1) {\n      out[key] = result[0];\n    } else {\n      out[key] = result;\n    }\n  }\n}\n", "/**\n * @param {string|ArrayBuffer} src\n * @param {object} [opts]\n * @param {string} [opts.imageType]\n * @returns {Promise<HTMLImageElement>}\n */\nexport async function ImageLoader(src, opts = undefined) {\n  let { imageType = undefined } = opts || {};\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    if (typeof imageType === 'undefined') {\n      let i = src.lastIndexOf('.');\n      if (i < 0) {\n        throw new Error('Cannot load from url - unknown image type.');\n      } else {\n        imageType = 'image/' + src.slice(i + 1);\n      }\n    }\n    return ImageLoader(arrayBuffer, { ...opts, imageType });\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  if (typeof imageType === 'undefined') {\n    imageType = 'image/png';\n  }\n  let blob = new Blob([arrayBuffer], { type: imageType });\n  let imageUrl = URL.createObjectURL(blob);\n  let image = new Image();\n  return new Promise((resolve, reject) => {\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n    image.addEventListener('error', (e) => {\n      reject(e);\n    });\n    image.src = imageUrl;\n  });\n}\n", "/**\n * @typedef MeshData\n * @property {Float32Array} positions\n * @property {Float32Array} texcoords\n * @property {Float32Array} normals\n * @property {Uint16Array} indices\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<MeshData>}\n */\nexport async function OBJLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return OBJLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return parse(new TextDecoder().decode(arrayBuffer));\n}\n\n/**\n * @param {string} string\n * @returns {MeshData}\n */\nfunction parse(string) {\n  const vertexList = [];\n  const texcoordList = [];\n  const normalList = [];\n\n  const vertexIndices = [];\n  const texcoordIndices = [];\n  const normalIndices = [];\n\n  // # comments\n  const commentPattern = /^#.*/g;\n  // v float float float\n  const vertexPattern = /v\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n  // vn float float float\n  const normalPattern = /vn\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n  // vt float float float\n  const texcoordPattern = /vt\\s+(\\S+)\\s+(\\S+)/g;\n  // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n  const facePattern =\n    /f\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))(\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*)))?/g;\n  // f float float float\n  const faceVertexPattern = /f\\s+([^/\\s]+)\\s+([^/\\s]+)\\s+([^/\\s]+)/g;\n\n  let quad = false;\n  let result = null;\n  let x, y, z, w;\n\n  // Remove all comments\n  string = string.replace(commentPattern, '');\n\n  // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n  while ((result = vertexPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    z = Number.parseFloat(result[3]);\n    vertexList.push(x);\n    vertexList.push(y);\n    vertexList.push(z);\n  }\n\n  // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n  while ((result = normalPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    z = Number.parseFloat(result[3]);\n    normalList.push(x);\n    normalList.push(y);\n    normalList.push(z);\n  }\n\n  // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n  while ((result = texcoordPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    texcoordList.push(x);\n    texcoordList.push(y);\n  }\n\n  // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n  while ((result = facePattern.exec(string)) != null) {\n    // Vertex indices\n    x = Number.parseInt(result[2]);\n    if (Number.isNaN(x)) x = 1;\n    y = Number.parseInt(result[6]);\n    if (Number.isNaN(y)) y = 1;\n    z = Number.parseInt(result[10]);\n    if (Number.isNaN(z)) z = 1;\n    vertexIndices.push(x);\n    vertexIndices.push(y);\n    vertexIndices.push(z);\n\n    // Normal indices\n    x = Number.parseInt(result[4]);\n    if (Number.isNaN(x)) {\n      // No UVs.\n      x = Number.parseInt(result[3]);\n      y = Number.parseInt(result[7]);\n      z = Number.parseInt(result[11]);\n      normalIndices.push(x);\n      normalIndices.push(y);\n      normalIndices.push(z);\n\n      texcoordIndices.push(1);\n      texcoordIndices.push(1);\n      texcoordIndices.push(1);\n    } else {\n      // Maybe UVs.\n      y = Number.parseInt(result[8]);\n      if (Number.isNaN(y)) y = 1;\n      z = Number.parseInt(result[12]);\n      if (Number.isNaN(z)) z = 1;\n      normalIndices.push(x);\n      normalIndices.push(y);\n      normalIndices.push(z);\n\n      // UV indices\n      x = Number.parseInt(result[3]);\n      if (Number.isNaN(x)) x = 1;\n      y = Number.parseInt(result[7]);\n      if (Number.isNaN(y)) y = 1;\n      z = Number.parseInt(result[11]);\n      if (Number.isNaN(z)) z = 1;\n      texcoordIndices.push(x);\n      texcoordIndices.push(y);\n      texcoordIndices.push(z);\n    }\n\n    // Quad face\n    if (typeof result[13] !== 'undefined') {\n      // Vertex indices\n      w = Number.parseInt(result[15]);\n      if (Number.isNaN(w)) w = 1;\n      vertexIndices.push(w);\n\n      // Normal indices\n      w = Number.parseInt(result[17]);\n      if (Number.isNaN(w)) {\n        // No UVs.\n        w = Number.parseInt(result[16]);\n        normalIndices.push(w);\n        texcoordIndices.push(1);\n      } else {\n        // Maybe UVs.\n        normalIndices.push(w);\n\n        w = Number.parseInt(result[16]);\n        texcoordIndices.push(w);\n      }\n\n      quad = true;\n    }\n  }\n\n  // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n  while ((result = faceVertexPattern.exec(string)) != null) {\n    // Vertex indices\n    x = Number.parseInt(result[2]);\n    y = Number.parseInt(result[6]);\n    z = Number.parseInt(result[10]);\n    vertexIndices.push(x);\n    vertexIndices.push(y);\n    vertexIndices.push(z);\n\n    // UV indices\n    texcoordIndices.push(1);\n    texcoordIndices.push(1);\n    texcoordIndices.push(1);\n\n    // Normal indices\n    normalIndices.push(1);\n    normalIndices.push(1);\n    normalIndices.push(1);\n\n    // Quad face\n    if (typeof result[13] !== 'undefined') {\n      // Vertex indices\n      w = Number.parseInt(result[14]);\n      vertexIndices.push(w);\n\n      // UV indices\n      texcoordIndices.push(1);\n      // Normal indices\n      normalIndices.push(1);\n\n      quad = true;\n    }\n  }\n\n  let index, size;\n\n  size = vertexIndices.length;\n  const positions = new Float32Array(size * 3);\n  for (let i = 0; i < size; ++i) {\n    index = vertexIndices[i] - 1;\n    positions[i * 3 + 0] = vertexList[index * 3 + 0];\n    positions[i * 3 + 1] = vertexList[index * 3 + 1];\n    positions[i * 3 + 2] = vertexList[index * 3 + 2];\n  }\n\n  size = texcoordIndices.length;\n  const texcoords = new Float32Array(size * 2);\n  for (let i = 0; i < size; ++i) {\n    index = texcoordIndices[i] - 1;\n    texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n    texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n  }\n\n  size = normalIndices.length;\n  const normals = new Float32Array(size * 3);\n  for (let i = 0; i < size; ++i) {\n    index = normalIndices[i] - 1;\n    normals[i * 3 + 0] = normalList[index * 3 + 0];\n    normals[i * 3 + 1] = normalList[index * 3 + 1];\n    normals[i * 3 + 2] = normalList[index * 3 + 2];\n  }\n\n  // Must be either unsigned short or unsigned byte.\n  size = vertexIndices.length;\n  const indices = new Uint16Array(size);\n  for (let i = 0; i < size; ++i) {\n    indices[i] = i;\n  }\n\n  if (quad) {\n    console.warn('WebGL does not support quad faces, only triangles.');\n  }\n\n  return {\n    positions,\n    texcoords,\n    normals,\n    indices,\n  };\n}\n", "/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<string>}\n */\nexport async function TextLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return TextLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return new TextDecoder().decode(arrayBuffer);\n}\n", "/**\n * @param {ArrayBuffer|Uint8Array|string} src\n * @param {object} opts\n * @param {AudioContext} opts.audioContext\n * @returns {Promise<AudioBuffer>}\n */\nexport async function AudioBufferLoader(src, opts) {\n  const { audioContext } = opts || {};\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return AudioBufferLoader(arrayBuffer, { audioContext });\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  let audioArrayBuffer = new ArrayBuffer(arrayBuffer.byteLength);\n  new Uint8Array(audioArrayBuffer).set(arrayBuffer);\n  let audioBuffer = await audioContext.decodeAudioData(audioArrayBuffer);\n  return audioBuffer;\n}\n", "window.addEventListener('error', error, true);\nwindow.addEventListener('unhandledrejection', error, true);\n\nexport function error(e) {\n  if (typeof e === 'object') {\n    if (e instanceof PromiseRejectionEvent) {\n      error(e.reason);\n    } else if (e instanceof ErrorEvent) {\n      error(e.error);\n    } else if (e instanceof Error) {\n      window.alert(e.stack);\n    } else {\n      window.alert(JSON.stringify(e));\n    }\n  } else {\n    window.alert(e);\n  }\n}\n", "import { AxisBinding, ButtonBinding, KeyCodes } from '@milque/input';\n\nexport const INPUTS = {\n    CursorX: new AxisBinding('cursorX', [KeyCodes.MOUSE_POS_X]),\n    CursorY: new AxisBinding('cursorY', [KeyCodes.MOUSE_POS_Y]),\n    CursorMain: new ButtonBinding('cursorMain', KeyCodes.MOUSE_BUTTON_0),\n    CursorAlt: new ButtonBinding('cursorAlt', KeyCodes.MOUSE_BUTTON_2),\n    MoveLeft: new ButtonBinding('moveLeft', [\n        KeyCodes.KEY_A,\n        KeyCodes.ARROW_LEFT,\n    ]),\n    MoveRight: new ButtonBinding('moveRight', [\n        KeyCodes.KEY_D,\n        KeyCodes.ARROW_RIGHT,\n    ]),\n    MoveUp: new ButtonBinding('moveUp', [\n        KeyCodes.KEY_Q,\n    ]),\n    MoveDown: new ButtonBinding('moveDown', [\n        KeyCodes.KEY_E\n    ]),\n    MoveForward: new ButtonBinding('moveForward', [\n        KeyCodes.KEY_W,\n        KeyCodes.ARROW_UP,\n    ]),\n    MoveBackward: new ButtonBinding('moveBackward', [\n        KeyCodes.KEY_S,\n        KeyCodes.ARROW_DOWN,\n    ]),\n    MainAction: new ButtonBinding('mainAction', [\n        KeyCodes.KEY_Z,\n        KeyCodes.KEY_Q,\n    ]),\n    AltAction: new ButtonBinding('altAction', [\n        KeyCodes.KEY_X,\n        KeyCodes.KEY_E,\n    ]),\n    Evade: new ButtonBinding('evade', [KeyCodes.SPACE]),\n};\n", "import { AssetRef, ImageLoader } from '@milque/asset';\n\nexport const ASSETS = {\n    ImageToast: new AssetRef('toast', ImageLoader, undefined, 'res/toast.png'),\n};\n", "import { AssetManager } from '@milque/asset';\n\n/**\n * @param {Record<?, import('@milque/input').InputBinding>} inputs \n * @param {string} inputPortQuerySelector \n * @returns {Promise<import('@milque/input').InputContext>}\n */\nexport async function connectInputs(inputs, inputPortQuerySelector = 'input-port') {\n    /** @type {import('@milque/input').InputPort} */\n    let inputPort = document.querySelector(inputPortQuerySelector);\n    let ctx = inputPort.getContext('axisbutton');\n    ctx.bindBindings(Object.values(inputs));\n    return ctx;\n}\n\nexport async function preloadAssetPack() {\n  await AssetManager.loadAssetPack('res.pack', (src, path) => AssetManager.cache(path, src));\n}\n\n/**\n * @param {Record<?, import('@milque/asset').AssetRef>} assets \n * @param {string} assetPortQuerySelector \n * @returns {Promise<void>}\n */\nexport async function preloadAssets(assets, assetPortQuerySelector = 'asset-port') {\n    await AssetManager.loadAssetRefs(Object.values(assets));\n}\n\n/**\n * @param {ParentNode} root\n * @param {string} selector\n * @returns {import('@milque/display').DisplayPort}\n */\nexport function getDisplayPort(root = document, selector = 'display-port') {\n  return root.querySelector(selector);\n}\n\n/**\n * @param {ParentNode} root\n * @param {string} selector\n * @returns {import('@milque/input').InputPort}\n */\nexport function getInputPort(root = document, selector = 'input-port') {\n  return root.querySelector(selector);\n}\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import { mat4, quat, vec3, vec4 } from 'gl-matrix';\n\nconst UP = vec3.fromValues(0, 1, 0);\n\nexport function panTo(viewMatrix, x, y, z = 0, dt = 1) {\n  let position = vec3.create();\n  mat4.getTranslation(position, viewMatrix);\n  let translation = vec3.fromValues(\n    (x - position[0]) * dt,\n    (y - position[1]) * dt,\n    (z - position[2]) * dt\n  );\n  mat4.translate(viewMatrix, viewMatrix, translation);\n}\n\nexport function lookAt(viewMatrix, x, y, z = 0, dt = 1) {\n  let position = vec3.create();\n  let rotation = quat.create();\n  mat4.getTranslation(position, viewMatrix);\n  mat4.getRotation(rotation, viewMatrix);\n  let target = vec3.fromValues(x, y, z);\n\n  mat4.lookAt(viewMatrix, position, target, UP);\n\n  let targetRotation = quat.create();\n  mat4.getRotation(targetRotation, viewMatrix);\n  quat.slerp(rotation, rotation, targetRotation, dt);\n\n  mat4.fromRotationTranslation(viewMatrix, rotation, position);\n}\n\n/**\n * Gets a directional ray in the world space from the given normalized\n * screen coordinates and camera matrices.\n *\n * NOTE: In addition to some scaling, the y component from a pointer's\n * position usually has to be flipped to match the normalized screen\n * coordinate space, which assumes a range of [-1, 1] for both x and y,\n * where (0, 0) is the center and (-1, -1) is the bottom-left of the\n * screen.\n *\n * ### Typical Device Screen Coordinate Space:\n * ```\n * (0,0)------------(w,0)\n *    |               |\n *    |   (w/2,h/2)   |\n *    |               |\n * (0,w)------------(w,h)\n * ```\n *\n * ### Normalized Screen Coordinate Space:\n * ```\n * (-1,+1)---------(+1,+1)\n *    |               |\n *    |     (0,0)     |\n *    |               |\n * (-1,-1)---------(+1,-1)\n * ```\n *\n * ### Example Conversion from Device to Normalized:\n * ```\n * let normalizedScreenX = (canvasClientX / canvasWidth) * 2 - 1;\n * let normalizedScreenY = 1 - (canvasClientY / canvasHeight) * 2;\n * ```\n *\n * @param {vec3} out The output vector.\n * @param {number} normalizedScreenCoordX The X screen coordinate normalized to [-1, 1], where -1 is the left side of the screen.\n * @param {number} normalizedScreenCoordY The Y screen coordinate normalized to [-1, 1], where -1 is the bottom side of the screen.\n * @param {mat4} projectionMatrix The projection matrix of the world camera.\n * @param {mat4} viewMatrix The view matrix of the world camera.\n * @param {boolean} [normalized=false] Whether to normalize the result. Usually true for non-orthogonal projections.\n * @returns {vec3} The ray direction in the world space. By default, this is not normalized.\n */\nexport function screenToWorldRay(\n  out,\n  normalizedScreenCoordX,\n  normalizedScreenCoordY,\n  projectionMatrix,\n  viewMatrix,\n  normalized = false\n) {\n  // https://antongerdelan.net/opengl/raycasting.html\n  // To homogeneous clip coords\n  let v = vec4.fromValues(\n    normalizedScreenCoordX,\n    normalizedScreenCoordY,\n    -1,\n    1\n  );\n  // To camera coords\n  let m = mat4.create();\n  mat4.invert(m, projectionMatrix);\n  vec4.transformMat4(v, v, m);\n  v[2] = -1;\n  v[3] = 0;\n  // To world coords\n  mat4.invert(m, viewMatrix);\n  vec4.transformMat4(v, v, m);\n  out[0] = v[0];\n  out[1] = v[1];\n  out[2] = v[2];\n  // Normalized as directional ray\n  if (normalized) {\n    vec3.normalize(out, out);\n  }\n  return out;\n}\n", "export class Camera {\n  constructor(projectionMatrix, viewMatrix) {\n    this.projectionMatrix = projectionMatrix;\n    this.viewMatrix = viewMatrix;\n  }\n\n  /**\n   * @abstract\n   * @param {number} [viewportWidth]\n   * @param {number} [viewportHeight]\n   * @returns {Camera}\n   */\n  // eslint-disable-next-line no-unused-vars\n  resize(viewportWidth = undefined, viewportHeight = undefined) {\n    return this;\n  }\n}\n", "import { mat4 } from 'gl-matrix';\nimport { Camera } from './Camera.js';\n\nconst DEFAULT_FOVY = Math.PI / 3;\n\nexport class PerspectiveCamera extends Camera {\n  constructor(fieldOfView = DEFAULT_FOVY, near = 0.1, far = 1000) {\n    super(mat4.create(), mat4.create());\n\n    this.fieldOfView = Number(fieldOfView);\n    this.clippingPlane = {\n      near: Number(near),\n      far: Number(far),\n    };\n  }\n\n  /** @override */\n  resize(viewportWidth = undefined, viewportHeight = undefined) {\n    const aspectRatio =\n      typeof viewportWidth === 'undefined' ? 1 : viewportWidth / viewportHeight;\n    const { near, far } = this.clippingPlane;\n    mat4.perspective(\n      this.projectionMatrix,\n      this.fieldOfView,\n      aspectRatio,\n      near,\n      far\n    );\n    return this;\n  }\n}\n", "import { mat4 } from 'gl-matrix';\nimport { Camera } from './Camera.js';\n\nexport class OrthographicCamera extends Camera {\n  /**\n   * @param {number} [left]\n   * @param {number} [top]\n   * @param {number} [right]\n   * @param {number} [bottom]\n   * @param {number} [near]\n   * @param {number} [far]\n   */\n  constructor(\n    left = undefined,\n    top = undefined,\n    right = undefined,\n    bottom = undefined,\n    near = -1000,\n    far = 1000\n  ) {\n    super(mat4.create(), mat4.create());\n\n    this.orthoBounds = {\n      left: typeof left === 'undefined' ? undefined : Number(left),\n      top: typeof top === 'undefined' ? undefined : Number(top),\n      right: typeof right === 'undefined' ? undefined : Number(right),\n      bottom: typeof bottom === 'undefined' ? undefined : Number(bottom),\n    };\n    this.clippingPlane = {\n      near: Number(near),\n      far: Number(far),\n    };\n  }\n\n  /**\n   * If both the bounds and viewport dimensions are defined, the orthographic\n   * projection will be set the defined bounds adjusted with respect to\n   * the aspect ratio. This is usually the desired behavior.\n   *\n   * If the bounds are `undefined`, the orthographic projection will\n   * be set to the viewport dimensions. This is useful for pixel-perfect\n   * projections.\n   *\n   * If viewport dimensions are `undefined`, the orthographic projection\n   * will only use the defined bounds. This is useful if you are already\n   * performing your own calculations for the bounds or desire a static\n   * projection.\n   *\n   * @override\n   * @param {number} [viewportWidth]\n   * @param {number} [viewportHeight]\n   */\n  resize(viewportWidth = undefined, viewportHeight = undefined) {\n    const { near, far } = this.clippingPlane;\n    const { left, top, right, bottom } = this.orthoBounds;\n\n    let projectionMatrix = this.projectionMatrix;\n    let hasViewport = typeof viewportWidth !== 'undefined';\n    let hasBounds = typeof left !== 'undefined';\n\n    if (hasViewport) {\n      if (hasBounds) {\n        // Use the defined bounds with respect to the viewport aspect ratio\n        const aspectRatio = viewportWidth / viewportHeight;\n        mat4.ortho(\n          projectionMatrix,\n          left * aspectRatio,\n          right * aspectRatio,\n          bottom,\n          top,\n          near,\n          far\n        );\n      } else {\n        // Use the viewport dimensions as bounds\n        mat4.ortho(\n          projectionMatrix,\n          0,\n          viewportWidth,\n          viewportHeight,\n          0,\n          near,\n          far\n        );\n      }\n    } else {\n      if (hasBounds) {\n        // Use the defined bounds as-is\n        mat4.ortho(projectionMatrix, left, right, bottom, top, near, far);\n      } else {\n        // Use default bounds (since nothing else exists)\n        mat4.ortho(projectionMatrix, -1, 1, 1, -1, -1, 1);\n      }\n    }\n    return this;\n  }\n}\n", "import { vec3, mat4 } from 'gl-matrix';\n\nconst TO_RAD_FACTOR = Math.PI / 180;\n\n/**\n * A camera controller that behaves like a traditional first person camera.\n * Pitch is restricted to prevent gimbal lock and roll is ignored.\n *\n * NOTE: Don't forget to lock your pointer, i.e. `canvas.requestPointerLock()`.\n */\nexport class FirstPersonCameraController {\n  constructor(opts = { locky: false }) {\n    this.locky = opts.locky;\n\n    this.position = vec3.create();\n    this.forward = vec3.fromValues(0, 0, -1);\n    this.right = vec3.fromValues(1, 0, 0);\n    this.up = vec3.fromValues(0, 1, 0);\n\n    this.forwardAmount = 0;\n    this.rightAmount = 0;\n    this.upAmount = 0;\n\n    this.pitch = 0;\n    this.yaw = -90;\n  }\n\n  look(dx, dy, dt = 1) {\n    // NOTE: Increase sensitivity to relatively match movement.\n    dt *= 1000;\n    this.pitch = Math.min(89.9, Math.max(-89.9, this.pitch + dy * dt));\n    this.yaw = (this.yaw + dx * dt) % 360;\n    return this;\n  }\n\n  move(forward, right = 0, up = 0, dt = 1) {\n    this.forwardAmount += forward * dt;\n    this.rightAmount += right * dt;\n    this.upAmount += up * dt;\n    return this;\n  }\n\n  apply(viewMatrix) {\n    let {\n      position,\n      forward,\n      right,\n      up,\n      forwardAmount,\n      rightAmount,\n      upAmount,\n      pitch,\n      yaw,\n    } = this;\n\n    // Calculate forward and right vectors\n    let rady = yaw * TO_RAD_FACTOR;\n    let radp = pitch * TO_RAD_FACTOR;\n    let cosy = Math.cos(rady);\n    let cosp = Math.cos(radp);\n    let siny = Math.sin(rady);\n    let sinp = Math.sin(radp);\n    let dx = cosy * cosp;\n    let dy = sinp;\n    let dz = siny * cosp;\n\n    // Set forward for move vector\n    vec3.normalize(forward, vec3.set(forward, dx, this.locky ? 0 : dy, dz));\n    vec3.normalize(right, vec3.cross(right, forward, up));\n\n    let move = vec3.create();\n    // Move forward\n    vec3.scale(move, forward, forwardAmount);\n    vec3.add(position, position, move);\n    // Move right\n    vec3.scale(move, right, rightAmount);\n    vec3.add(position, position, move);\n    // Move up\n    vec3.scale(move, up, upAmount);\n    vec3.add(position, position, move);\n    // Reset movement\n    this.forwardAmount = 0;\n    this.rightAmount = 0;\n    this.upAmount = 0;\n\n    // Reset forward for look vector\n    if (this.locky) vec3.set(forward, dx, dy, dz);\n\n    let target = vec3.add(move, position, forward);\n    mat4.lookAt(viewMatrix, position, target, up);\n    return viewMatrix;\n  }\n}\n", "const MAX_DEPTH_LEVEL = 100;\n\n/**\n * @typedef {Number} SceneNode\n *\n * @typedef SceneNodeInfo\n * @property {SceneNode} parent The parent node. If the node does not have a parent,\n * it will be 0.\n * @property {Array<SceneNode>} children The list of child nodes.\n *\n * @callback WalkCallback Called for each node, before traversing its children.\n * @param {SceneNode} sceneNode The current scene node.\n * @param {SceneGraph} sceneGraph The current scene graph.\n * @returns {WalkBackCallback|Boolean} If false, the walk will skip\n * the current node's children and all of its descendents. If a function,\n * it will be called after traversing down all of its children.\n *\n * @callback WalkBackCallback Called if returned by {@link WalkCallback}, after\n * traversing the current node's children.\n * @param {SceneNode} sceneNode The current scene node.\n * @param {SceneGraph} sceneGraph The current scene graph.\n *\n * @callback WalkChildrenCallback Called for each level of children, before\n * traversing them. This is usually used to determine visit order.\n * @param {Array<SceneNode>} childNodes A list of child nodes to be visited.\n * @param {SceneNode} parentNode The current parent node of these children.\n * @param {SceneGraph} sceneGraph The current scene graph.\n * @returns {Array<SceneNode>} The list of children to traverse for this parent.\n */\n\n/**\n * A tree-like graph of nodes with n-children.\n */\nexport class SceneGraph {\n  /**\n   * Constructs an empty scene graph.\n   */\n  constructor() {\n    this.nodes = {};\n    this.roots = [];\n\n    this._nextAvailableSceneNodeId = 1;\n  }\n\n  /**\n   * Creates a scene node in the scene graph.\n   *\n   * @param {SceneNode} [parentNode] The parent node for the created scene\n   * node.\n   * @returns {SceneNode} The created scene node.\n   */\n  createSceneNode(parentNode = undefined) {\n    let sceneNode = this._nextAvailableSceneNodeId++;\n    let info = createSceneNodeInfo();\n    this.nodes[sceneNode] = info;\n    attach(parentNode, sceneNode, this);\n    return sceneNode;\n  }\n\n  /**\n   * Creates multiple scene nodes in the scene graph.\n   *\n   * @param {Number} count The number of scene nodes to create.\n   * @param {SceneNode} [parentNode] The parent node for the created scene\n   * nodes.\n   * @returns {Array<SceneNode>} A list of created scene nodes.\n   */\n  createSceneNodes(count, parentNode = undefined) {\n    let result = [];\n    for (let i = 0; i < count; ++i) {\n      result.push(this.createSceneNode(parentNode));\n    }\n    return result;\n  }\n\n  /**\n   * Deletes a scene node from the scene graph, along with all\n   * of its descendents.\n   *\n   * @param {SceneNode} sceneNode The scene node to remove.\n   */\n  deleteSceneNode(sceneNode) {\n    if (sceneNode in this.nodes) {\n      let info = this.nodes[sceneNode];\n      detach(info.parent, sceneNode, this);\n      walkImpl(this, sceneNode, 0, walkDeleteCallback);\n    } else {\n      throw new Error('Cannot delete non-existant scene node for scene graph.');\n    }\n  }\n\n  /**\n   * Deletes all given scene nodes from the scene graph, along with all\n   * of their descendents.\n   *\n   * @param {Array<SceneNode>} sceneNodes A list of scene nodes to remove.\n   */\n  deleteSceneNodes(sceneNodes) {\n    for (let sceneNode of sceneNodes) {\n      this.deleteSceneNode(sceneNode);\n    }\n  }\n\n  /**\n   * Get the scene node's info.\n   *\n   * @param {SceneNode} sceneNode The scene node to get info for.\n   * @returns {SceneNodeInfo} The info for the given scene node.\n   */\n  getSceneNodeInfo(sceneNode) {\n    return this.nodes[sceneNode];\n  }\n\n  /**\n   * Changes the parent of the scene node with the new parent node in\n   * the graph.\n   *\n   * @param {SceneNode} sceneNode The target scene node to change.\n   * @param {SceneNode} parentNode The scene node to set as the parent.\n   */\n  parentSceneNode(sceneNode, parentNode) {\n    let info = this.nodes[sceneNode];\n    detach(info.parent, sceneNode, this);\n    attach(parentNode, sceneNode, this);\n  }\n\n  /**\n   * Replaces the scene node with the new replacement node in the graph,\n   * inheriting its parent and children.\n   *\n   * @param {SceneNode} sceneNode The target scene node to replace.\n   * @param {SceneNode} replacementNode The scene node to replace with. If falsey,\n   * it will remove the target scene node and the target's parent will adopt\n   * its grandchildren. If the target did not have parents, the grandchildren will\n   * become root nodes in the graph.\n   */\n  replaceSceneNode(sceneNode, replacementNode) {\n    let info = this.nodes[sceneNode];\n    let parentNode = info.parent;\n    let grandChildren = info.children.slice();\n\n    // Remove the target node from graph\n    detach(parentNode, sceneNode, this);\n\n    // Begin grafting the grandchildren by removing them...\n    info.children.length = 0;\n\n    if (replacementNode) {\n      // Reattach all grandchildren to new replacement node.\n      let replacementInfo = this.nodes[replacementNode];\n      let replacementParent = replacementInfo.parent;\n\n      // Remove replacement node from previous parent\n      detach(replacementParent, replacementNode, this);\n\n      // ...and graft them back.\n      replacementInfo.children.push(...grandChildren);\n\n      // And reattach target parent to new child.\n      attach(parentNode, replacementNode, this);\n    } else {\n      // Reattach all grandchildren to target parent...\n      if (parentNode) {\n        //...as regular children.\n        let parentInfo = this.nodes[parentNode];\n        parentInfo.children.push(...grandChildren);\n      } else {\n        //...as root children.\n        this.roots.push(...grandChildren);\n      }\n    }\n\n    // ...and repair their parent relations.\n    for (let childNode of grandChildren) {\n      this.nodes[childNode].parent = parentNode;\n    }\n  }\n\n  /**\n   * Walks through every child node in the graph.\n   *\n   * @param {WalkCallback} callback The function called for each node\n   * in the graph, in ordered traversal from parent to child.\n   * @param {Object} [opts={}] Any additional options.\n   * @param {SceneNode|Array<SceneNode>} [opts.from] The parent node to\n   * start walking from, inclusive. By default, it will start from the root\n   * nodes.\n   * @param {WalkChildrenCallback} [opts.childfilter] The function called before\n   * walking through the children. This is usually used to determine the\n   * visiting order.\n   */\n  walk(callback, opts = {}) {\n    const { from = undefined, childFilter = undefined } = opts;\n\n    let fromNodes;\n    if (!from) fromNodes = this.roots;\n    else if (!Array.isArray(from)) fromNodes = [from];\n    else fromNodes = from;\n\n    if (childFilter) fromNodes = childFilter(fromNodes, 0, this);\n    for (let fromNode of fromNodes) {\n      walkImpl(this, fromNode, 0, callback, childFilter);\n    }\n  }\n}\n\n/**\n * @param {SceneNode} key The scene node handle.\n * @returns {SceneNodeInfo} The scene node metadata.\n */\nfunction createSceneNodeInfo() {\n  return {\n    parent: 0,\n    children: [],\n  };\n}\n\n/**\n * Attaches a child node to a parent in the scene graph. If parentNode is\n * null, then it will attach as a root node.\n *\n * @param {SceneNode} parentNode The parent node to attach to. Can be null.\n * @param {SceneNode} childNode The child node to attach from.\n * @param {SceneGraph} sceneGraph The scene graph to attach in.\n */\nfunction attach(parentNode, childNode, sceneGraph) {\n  if (parentNode) {\n    // Has new parent; attach to parent. It is now in the graph.\n    sceneGraph.nodes[parentNode].children.push(childNode);\n    sceneGraph.nodes[childNode].parent = parentNode;\n  } else {\n    // No parent; move to root. It is now in the graph.\n    sceneGraph.roots.push(childNode);\n    sceneGraph.nodes[childNode].parent = 0;\n  }\n}\n\n/**\n * Detaches a child node from its parent in the scene graph. If parentNode is\n * null, then it will detach as a root node.\n *\n * @param {SceneNode} parentNode The parent node to attach to. Can be null.\n * @param {SceneNode} childNode The child node to attach from.\n * @param {SceneGraph} sceneGraph The scene graph to attach in.\n */\nfunction detach(parentNode, childNode, sceneGraph) {\n  if (parentNode) {\n    // Has parent; detach from parent. It is now a free node.\n    let children = sceneGraph.nodes[parentNode].children;\n    let childIndex = children.indexOf(childNode);\n    children.splice(childIndex, 1);\n    sceneGraph.nodes[childNode].parentNode = 0;\n  } else {\n    // No parent; remove from root. It is now a free node.\n    let roots = sceneGraph.roots;\n    let rootIndex = roots.indexOf(childNode);\n    roots.splice(rootIndex, 1);\n    sceneGraph.nodes[childNode].parentNode = 0;\n  }\n}\n\n/**\n * Walk down from the parent and through all its descendents.\n *\n * @param {SceneGraph} sceneGraph The scene graph containing the nodes to be visited.\n * @param {SceneNode} parentNode The parent node to start walking from.\n * @param {Number} level The current call depth level. This is used to limit the call stack.\n * @param {WalkCallback} nodeCallback The function called on each visited node.\n * @param {WalkChildrenCallback} [filterCallback] The function called before\n * walking through the children. This is usually used to determine the visiting order.\n */\nfunction walkImpl(\n  sceneGraph,\n  parentNode,\n  level,\n  nodeCallback,\n  filterCallback = undefined\n) {\n  if (level >= MAX_DEPTH_LEVEL) return;\n\n  let result = nodeCallback(parentNode, sceneGraph);\n  if (result === false) return;\n\n  let parentInfo = sceneGraph.nodes[parentNode];\n  let nextNodes = filterCallback\n    ? filterCallback(parentInfo.children, parentNode, sceneGraph)\n    : parentInfo.children;\n\n  for (let childNode of nextNodes) {\n    walkImpl(sceneGraph, childNode, level + 1, nodeCallback, filterCallback);\n  }\n\n  if (typeof result === 'function') {\n    result(parentNode, sceneGraph);\n  }\n}\n\nfunction walkDeleteCallback(sceneNode, sceneGraph) {\n  delete sceneGraph.nodes[sceneNode];\n}\n", "/**\n * @template T\n */\nexport class ComponentClass {\n    /**\n     * @param {string} name \n     * @param {() => T} newCallback\n     * @param {(component: T) => void} [deleteCallback] \n     */\n    constructor(name, newCallback = () => null, deleteCallback = () => {}) {\n        this.name = name;\n        this.new = newCallback;\n        this.delete = deleteCallback;\n    }\n}\n", "import { ComponentClass } from './ComponentClass';\nimport { EntityManager } from './EntityManager';\n\n/** @typedef {import('./EntityManager').EntityId} EntityId */\n\n/**\n * @template T\n * @typedef {import('./Query').Query<T>} Query<T>\n */\n\nexport class QueryManager {\n\n    constructor() {\n        /**\n         * @protected\n         * @type {Record<string, Array<EntityId>>}\n         */\n        this.queries = {};\n        /**\n         * @private\n         * @type {Record<string, Query<?>>}\n         */\n        this.keyQueryMapping = {};\n\n        this.onEntityComponentChanged = this.onEntityComponentChanged.bind(this);\n    }\n\n    /**\n     * @param {EntityManager} entityManager\n     * @param {EntityId} entityId\n     * @param {ComponentClass<?>} added\n     * @param {ComponentClass<?>} removed\n     * @param {boolean} dead\n     */\n    onEntityComponentChanged(entityManager, entityId, added, removed, dead) {\n        for(let query of Object.values(this.keyQueryMapping)) {\n            let entities = this.queries[query.key];\n            if (dead) {\n                let i = entities.indexOf(entityId);\n                if (i >= 0) {\n                    entities.splice(i, 1);\n                }\n            } else if (added) {\n                if (query.hasSelector(Not(added))) {\n                    let i = entities.indexOf(entityId);\n                    if (i >= 0) {\n                        entities.splice(i, 1);\n                    }\n                } else if (query.hasSelector(added) && query.test(entityManager, entityId)) {\n                    let i = entities.indexOf(entityId);\n                    if (i < 0) {\n                        entities.push(entityId);\n                    }\n                }\n            } else if (removed) {\n                if (query.hasSelector(Not(removed)) && query.test(entityManager, entityId)) {\n                    let i = entities.indexOf(entityId);\n                    if (i < 0) {\n                        entities.push(entityId);\n                    }\n                } else if (query.hasSelector(removed) && query.test(entityManager, entityId)) {\n                    let i = entities.indexOf(entityId);\n                    if (i >= 0) {\n                        entities.splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param {EntityManager} entityManager\n     * @param {Query<?>} query \n     * @returns {EntityId}\n     */\n    findAny(entityManager, query) {\n        let result = this.findAll(entityManager, query);\n        if (result.length <= 0) {\n            return null;\n        } else {\n            return result[Math.floor(Math.random() * result.length)];\n        }\n    }\n\n    /**\n     * @param {EntityManager} entityManager\n     * @param {Query<?>} query\n     * @returns {Array<EntityId>}\n     */\n    findAll(entityManager, query) {\n        const queryKey = query.key;\n        let result;\n        if (!(queryKey in this.keyQueryMapping)) {\n            result = [];\n            this.keyQueryMapping[queryKey] = query;\n            this.queries[queryKey] = result;\n            query.hydrate(entityManager, result);\n        } else {\n            result = this.queries[queryKey];\n        }\n        return result;\n    }\n\n    /**\n     * @param {EntityManager} entityManager\n     * @param {Query<?>} query \n     */\n    count(entityManager, query) {\n        let result = this.findAll(entityManager, query);\n        return result.length;\n    }\n\n    /**\n     * @param {Query<?>} query\n     */\n    clear(query) {\n        const queryKey = query.key;\n        if (!(queryKey in this.keyQueryMapping)) {\n            return;\n        }\n        delete this.keyQueryMapping[queryKey];\n        delete this.queries[queryKey];\n    }\n    \n    reset() {\n        this.keyQueryMapping = {};\n        this.queries = {};\n    }\n}\n\n/**\n * @template T\n * @typedef {SelectorNot<T>|ComponentClass<T>} Selector<T>\n */\n\n/**\n * @template T\n * @typedef SelectorNot<T>\n * @property {'not'} type\n * @property {string} name\n * @property {ComponentClass<T>} value\n */\n\n/**\n * @template T\n * @param {ComponentClass<T>} componentClass \n * @returns {ComponentClass<T>}\n */\nexport function Not(componentClass) {\n    return {\n        // @ts-ignore\n        type: 'not',\n        name: componentClass.name,\n        value: componentClass,\n    };\n}\n\nexport function isSelectorNot(selector) {\n    return 'type' in selector && selector.type === 'not';\n}\n", "import { ComponentClass } from './ComponentClass';\nimport { QueryManager } from './QueryManager';\n\n/**\n * @template T\n * @typedef {Record<number, T>} ComponentInstanceMap<T>\n */\n\n/**\n * @typedef {Record<string, ComponentInstanceMap<?>>} ComponentClassMap\n * @typedef {number} EntityId\n * @typedef {string} ComponentName\n */\n\nexport class EntityManager {\n\n    constructor() {\n        /**\n         * @protected\n         * @type {ComponentClassMap}\n         */\n        this.components = {};\n        /** @private */\n        this.nameClassMapping = {};\n        /**\n         * @private\n         * @type {EntityId}\n         */\n        this.nextAvailableEntityId = 1;\n        /**\n         * @protected\n         * @type {Array<[string, ...any]>}\n         */\n        this.queue = [];\n        this.queryManager = new QueryManager();\n    }\n\n    /**\n     * @protected\n     * @param {EntityId} entityId\n     * @param {ComponentClass<?>} added\n     * @param {ComponentClass<?>} removed\n     * @param {boolean} dead\n     */\n    entityComponentChangedCallback(entityId, added, removed, dead) {\n        this.queryManager.onEntityComponentChanged(this, entityId, added, removed, dead);\n    }\n\n    flush() {\n        while (this.queue.length > 0) {\n            let [type, ...args] = this.queue.shift();\n            switch (type) {\n                case 'attach': {\n                    let [entityId, componentClass, instance] = args;\n                    this.attachImmediately(entityId, componentClass, instance);\n                } break;\n                case 'detach': {\n                    let [entityId, componentClass] = args;\n                    this.detachImmediately(entityId, componentClass);\n                } break;\n                case 'clear': {\n                    let [componentClass] = args;\n                    this.clearImmediately(componentClass);\n                } break;\n            }\n        }\n    }\n\n    /**\n     * @returns {EntityId}\n     */\n    create() {\n        return this.nextAvailableEntityId++;\n    }\n\n    /**\n     * @param {EntityId} entityId \n     */\n    destroy(entityId) {\n        const components = this.components;\n        for (const componentName of Object.keys(components)) {\n            const instanceMap = components[componentName];\n            if (entityId in instanceMap) {\n                delete instanceMap[entityId];\n                this.entityComponentChangedCallback(entityId, null, this.nameClassMapping[componentName], false);\n            }\n        }\n        this.entityComponentChangedCallback(entityId, null, null, true);\n    }\n\n    /**\n     * Whether the entity exists with all provided component classes.\n     * \n     * @param {EntityId} entityId \n     * @param {...ComponentClass<?>} componentClasses\n     */\n    exists(entityId, ...componentClasses) {\n        if (componentClasses.length > 0) {\n            for(const componentClass of componentClasses) {\n                let instanceMap = this.mapOf(componentClass);\n                if (!(entityId in instanceMap)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            for (let instanceMap of Object.values(this.components)) {\n                if (entityId in instanceMap) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass\n     * @returns {T}\n     */\n    attach(entityId, componentClass) {\n        let instance = componentClass.new();\n        this.queue.push(['attach', entityId, componentClass, instance]);\n        return instance;\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     * @param {T} [instance]\n     * @returns {T}\n     */\n    attachImmediately(entityId, componentClass, instance = undefined) {\n        if (typeof instance === 'undefined') {\n            instance = componentClass.new();\n        }\n        let instanceMap = this.mapOf(componentClass);\n        instanceMap[entityId] = instance;\n        this.entityComponentChangedCallback(entityId, componentClass, null, false);\n        return instance;\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass\n     */\n    detach(entityId, componentClass) {\n        this.queue.push(['detach', entityId, componentClass]);\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     */\n    detachImmediately(entityId, componentClass) {\n        let instanceMap = this.mapOf(componentClass);\n        let instance = instanceMap[entityId];\n        delete instanceMap[entityId];\n        componentClass.delete(instance);\n        this.entityComponentChangedCallback(entityId, null, componentClass, false);\n    }\n\n    /**\n     * @param {ComponentClass<?>} componentClass \n     */\n    clear(componentClass) {\n        this.queue.push(['clear', componentClass]);\n    }\n\n    /**\n     * @param {ComponentClass<any>} componentClass \n     */\n    clearImmediately(componentClass) {\n        const componentName = componentClass.name;\n        const components = this.components;\n        const instanceMap = components[componentName];\n        let entities = Object.keys(instanceMap).map(Number);\n        let instances = Object.values(instanceMap);\n        components[componentName] = {};\n        this.nameClassMapping[componentName] = componentClass;\n        for(let instance of instances) {\n            componentClass.delete(instance);\n        }\n        for(let entityId of entities) {\n            this.entityComponentChangedCallback(entityId, null, componentClass, false);\n        }\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     * @returns {T}\n     */\n    get(entityId, componentClass) {\n        return this.mapOf(componentClass)[entityId] || null;\n    }\n\n    /**\n     * @param {ComponentClass<?>} componentClass \n     * @returns {number}\n     */\n    count(componentClass) {\n        return Object.keys(this.mapOf(componentClass)).length;\n    }\n\n    /**\n     * @param {ComponentClass<?>} componentClass\n     */\n    keysOf(componentClass) {\n        return Object.keys(this.mapOf(componentClass)).map(Number);\n    }\n\n    /**\n     * @template T\n     * @param {ComponentClass<T>} componentClass \n     * @returns {Array<T>}\n     */\n    valuesOf(componentClass) {\n        return Object.values(this.mapOf(componentClass));\n    }\n\n    /**\n     * @protected\n     * @template T\n     * @param {ComponentClass<T>} componentClass\n     * @returns {ComponentInstanceMap<T>} A map of entity ids to component instance data.\n     */\n    mapOf(componentClass) {\n        const componentName = componentClass.name;\n        const components = this.components;\n        if (!(componentName in components)) {\n            /** @type {ComponentInstanceMap<T>} */\n            let map = {};\n            components[componentName] = map;\n            this.nameClassMapping[componentName] = componentClass;\n            return map;\n        } else {\n            return components[componentName];\n        }\n    }\n\n    /** @returns {Set<EntityId>} */\n    entityIds() {\n        let result = new Set();\n        for (let instanceMap of Object.values(this.components)) {\n            for(let entityId of Object.keys(instanceMap)) {\n                result.add(entityId);\n            }\n        }\n        return result;\n    }\n\n    /** @returns {Array<ComponentClass<?>>} */\n    componentClasses() {\n        return Object.values(this.nameClassMapping);\n    }\n\n    reset() {\n        const components = this.components;\n        /** @type {Set<EntityId>} */\n        let entities = new Set();\n        for(const componentName of Object.keys(components)) {\n            const componentClass = this.nameClassMapping[componentName];\n            const instanceMap = components[componentName];\n            for(let entityId of Object.keys(instanceMap)) {\n                entities.add(Number(entityId));\n            }\n            this.clearImmediately(componentClass);\n        }\n        for(let entityId of entities) {\n            this.entityComponentChangedCallback(entityId, null, null, true);\n        }\n        entities.clear();\n        this.queryManager.reset();\n        this.components = {};\n        this.nextAvailableEntityId = 1;\n        this.queue.length = 0;\n    }\n}\n", "import { EntityManager } from './EntityManager';\nimport { ComponentClass } from './ComponentClass';\n\n/** @typedef {import('./EntityManager').EntityId} EntityId */\n\n/**\n * @template {ComponentClass<any>[]} T\n * @typedef {{[K in keyof T]: T[K] extends ComponentClass<infer V> ? V : never}} ComponentInstancesOf<T>\n */\n\n/**\n * @template {ComponentClass<any>[]} T\n */\nexport class EntityTemplate {\n    /**\n     * @param {T} componentClasses \n     */\n    constructor(...componentClasses) {\n        /** @private */\n        this.componentClasses = componentClasses;\n    }\n\n    /**\n     * @param {EntityManager} entityManager\n     * @returns {[EntityId, ...ComponentInstancesOf<T>]}\n     */\n    create(entityManager) {\n        let entityId = entityManager.create();\n        let result = /** @type {[EntityId, ...ComponentInstancesOf<T>]} */ (/** @type {unknown} */ ([entityId]));\n        for (let componentClass of this.componentClasses) {\n            let instance = entityManager.attach(entityId, componentClass);\n            result.push(instance);\n        }\n        return result;\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @param {EntityId} entityId \n     */\n    destroy(entityManager, entityId) {\n        for (let componentClass of this.componentClasses) {\n            entityManager.detach(entityId, componentClass);\n        }\n    }\n}\n", "import { ComponentClass } from './ComponentClass';\nimport { EntityManager } from './EntityManager';\nimport { isSelectorNot } from './QueryManager';\n\n/** @typedef {import('./EntityManager').EntityId} EntityId */\n\n/**\n * @template T\n * @typedef {import('./QueryManager').Selector<T>} Selector<T>\n */\n\n/**\n * @template T\n * @typedef {import('./QueryManager').SelectorNot<T>} SelectorNot<T>\n */\n\n/**\n * @template T\n * @typedef {import('./EntityTemplate').ComponentInstancesOf<T>} ComponentInstancesOf<T>\n */\n\n/**\n * @template {ComponentClass<any>[]} T\n */\nexport class Query {\n\n    /**\n     * @param {T} selectors \n     */\n    constructor(...selectors) {\n        this.selectors = selectors;\n        this.key = selectors.map(s => isSelectorNot(s) ? `!${s.name}` : s.name).sort().join('&');\n    }\n\n    /**\n     * @param {Selector<?>} selector\n     */\n    hasSelector(selector) {\n        if (isSelectorNot(selector)) {\n            return this.selectors.findIndex(v => isSelectorNot(v) && v.name === selector.name) >= 0;\n        } else {\n            return this.selectors.findIndex(v => v.name === selector.name) >= 0;\n        }\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @param {EntityId} entityId\n     */\n    test(entityManager, entityId) {\n        for(let selector of this.selectors) {\n            if (isSelectorNot(selector)) {\n                const componentClass = /** @type {SelectorNot<?>} */ (/** @type {unknown} */ (selector)).value;\n                if (entityManager.exists(entityId, componentClass)) {\n                    return false;\n                }\n            } else {\n                const componentClass = /** @type {ComponentClass<?>} */ (/** @type {unknown} */ (selector));\n                if (!entityManager.exists(entityId, componentClass)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @param {EntityManager} entityManager\n     * @param {Array<EntityId>} result \n     */\n    hydrate(entityManager, result) {\n        if (this.selectors.length <= 0) {\n            result.length = 0;\n            return result;\n        }\n        let entities = entityManager.entityIds();\n        for(let entityId of entities) {\n            if (this.test(entityManager, entityId)) {\n                result.push(entityId);\n            }\n        }\n        return result;\n    }\n    \n    /**\n     * @param {EntityManager} entityManager \n     * @returns {number}\n     */\n    count(entityManager) {\n        return entityManager.queryManager.count(entityManager, this);\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @returns {[EntityId, ...ComponentInstancesOf<T>]}\n     */\n    findAny(entityManager) {\n        const queryManager = entityManager.queryManager;\n        let result = /** @type {[EntityId, ...ComponentInstancesOf<T>]} */ (new Array(this.selectors.length + 1));\n        let entityId = queryManager.findAny(entityManager, this);\n        if (entityId === null) {\n            return result.fill(undefined);\n        }\n        computeResult(result, entityManager, entityId, this.selectors);\n        return result;\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @returns {Generator<[EntityId, ...ComponentInstancesOf<T>]>}\n     */\n    *findAll(entityManager) {\n        const queryManager = entityManager.queryManager;\n        let result = /** @type {[EntityId, ...ComponentInstancesOf<T>]} */ (new Array(this.selectors.length + 1));\n        let entities = queryManager.findAll(entityManager, this);\n        for(let entityId of entities) {\n            computeResult(result, entityManager, entityId, this.selectors);\n            yield result;\n        }\n    }\n}\n\n/**\n * @template {ComponentClass<any>[]} T\n * @param {[EntityId, ...ComponentInstancesOf<T>]} out\n * @param {EntityManager} entityManager  \n * @param {EntityId} entityId\n * @param {T} selectors\n * @returns {[EntityId, ...ComponentInstancesOf<T>]}\n */\nfunction computeResult(out, entityManager, entityId, selectors) {\n    out[0] = entityId;\n    let i = 1;\n    for(let selector of selectors) {\n        if (isSelectorNot(selector)) {\n            out[i] = null;\n        } else {\n            out[i] = entityManager.get(entityId, selector);\n        }\n        ++i;\n    }\n    return out;\n}\n", "/**\n * @template T\n */\nexport class Topic {\n\n    /**\n     * @abstract\n     * @param {T} [attachment] \n     */\n    dispatch(attachment = null) {}\n\n    /**\n     * @abstract\n     * @param {T} [attachment] \n     */\n    dispatchImmediately(attachment = null) {}\n\n    /**\n     * @abstract\n     * @param {number} max \n     */\n    flush(max = 1000) {}\n}\n", "import { Topic } from './Topic.js';\n\n/**\n * @template T\n */\nexport class CommandTopic extends Topic {\n    \n    constructor() {\n        super();\n\n        /**\n         * @private\n         * @type {Array<T>}\n         */\n        this.messages = [];\n        \n        /**\n         * @private\n         * @type {Array<T>}\n         */\n        this.queued = [];\n    }\n\n    /**\n     * @override\n     * @param {T} message \n     */\n    dispatch(message) {\n        this.queued.push(message);\n    }\n\n    /**\n     * @override\n     * @param {T} message \n     */\n    dispatchImmediately(message) {\n        this.messages.push(message);\n    }\n\n    /** @override */\n    flush(max = 1000) {\n        let result = this.queued.splice(0, Math.min(max, this.queued.length));\n        this.messages.push(...result);\n    }\n\n    /**\n     * @param {number} [max]\n     * @return {Iterable<T>}\n     */\n    *poll(max = 1000) {\n        let iterations = 0;\n        while(iterations < max && this.messages.length > 0) {\n            let message = this.messages.shift();\n            yield message;\n            ++iterations;\n        }\n    }\n}\n", "import { Topic } from './Topic.js';\n\n/**\n * @template T\n * @typedef {(t: T) => void|boolean} EventTopicCallback\n */\n\n/** @template T */\nexport class EventTopic extends Topic {\n\n    constructor() {\n        super();\n\n        /**\n         * @private\n         * @type {Array<EventTopicCallback<T>>}\n         */\n        this.listeners = [];\n\n        /**\n         * @private\n         * @type {Array<T>}\n         */\n        this.queued = [];\n    }\n\n    /**\n     * @param {EventTopicCallback<T>} callback \n     */\n    on(callback) {\n        this.listeners.push(callback);\n        return this;\n    }\n\n    /**\n     * @param {EventTopicCallback<T>} callback \n     */\n    off(callback) {\n        let i = this.listeners.indexOf(callback);\n        if (i >= 0) {\n            this.listeners.splice(i, 1);\n        }\n        return this;\n    }\n\n    /**\n     * @param {EventTopicCallback<T>} callback \n     */\n    once(callback) {\n        let wrapper = (attachment) => {\n            this.off(wrapper);\n            return callback(attachment);\n        };\n        this.on(wrapper);\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {T} [attachment]\n     */\n    dispatch(attachment = null) {\n        this.queued.push(attachment);\n    }\n\n    /**\n     * @override\n     * @param {T} [attachment] \n     */\n    dispatchImmediately(attachment = null) {\n        for(let listener of this.listeners) {\n            let result = listener(attachment);\n            // Consume the event if return true.\n            if (result === true) {\n                break;\n            }\n        }\n    }\n\n    /** @override */\n    flush(max = 1000) {\n        let i = 0;\n        while(this.queued.length > 0 && i++ < max) {\n            let attachment = this.queued.shift();\n            this.dispatchImmediately(attachment);\n        }\n    }\n\n    count() {\n        return this.listeners.length;\n    }\n}\n", "import { Topic } from './Topic.js';\n\n/**\n * @template T\n * @typedef {(t: T) => void|boolean} PriorityTopicCallback<T>\n */\n\n/**\n * @template T\n * @typedef PriorityTopicOptions\n * @property {number} priority\n * @property {PriorityTopicCallback<T>} callback\n */\n\n/**\n * @param {PriorityTopicOptions<?>} a \n * @param {PriorityTopicOptions<?>} b \n */\nfunction comparator(a, b) {\n    return a.priority - b.priority;\n}\n\n/**\n * @template T\n */\nexport class PriorityEventTopic extends Topic {\n\n    constructor() {\n        super();\n\n        /**\n         * @private\n         * @type {Array<PriorityTopicOptions<T>>}\n         */\n        this.listeners = [];\n\n        /**\n         * @private\n         * @type {Array<T>}\n         */\n        this.queued = [];\n    }\n\n    /**\n     * @param {number} priority \n     * @param {PriorityTopicCallback<T>} callback \n     */\n    on(priority, callback) {\n        this.listeners.push({ priority, callback });\n        this.listeners.sort(comparator);\n        return this;\n    }\n\n    /**\n     * @param {PriorityTopicCallback<T>} callback \n     */\n    off(callback) {\n        for(let i = 0; i < this.listeners.length; ++i) {\n            if (this.listeners.at(i).callback === callback) {\n                this.listeners.splice(i, 1);\n                break;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @param {number} priority \n     * @param {PriorityTopicCallback<T>} callback \n     */\n    once(priority, callback) {\n        let wrapper = (attachment) => {\n            this.off(wrapper);\n            return callback(attachment);\n        };\n        return this.on(priority, wrapper);\n    }\n\n    count() {\n        return this.listeners.length;\n    }\n\n    /**\n     * @override\n     * @param {T} [attachment]\n     */\n    dispatch(attachment = null) {\n        this.queued.push(attachment);\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {T} [attachment] \n     */\n    dispatchImmediately(attachment = null) {\n        for(let listener of this.listeners) {\n            let result = listener.callback(attachment);\n            // Consume the event if return true.\n            if (result === true) {\n                break;\n            }\n        }\n        return this;\n    }\n\n    /** @override */\n    flush(max = 1000) {\n        let i = 0;\n        while(this.queued.length > 0 && i++ < max) {\n            let attachment = this.queued.shift();\n            this.dispatchImmediately(attachment);\n        }\n        return this;\n    }\n}\n", "/** @typedef {(frameDetail: AnimationFrameLoop) => void} AnimationFrameLoopCallback */\n\nexport class AnimationFrameLoop {\n    \n    /**\n     * @param {AnimationFrameLoopCallback} callback \n     * @param {object} [opts]\n     * @param {Window} [opts.animationFrameHandler]\n     */\n    constructor(callback, opts = undefined) {\n        const { animationFrameHandler = window } = opts || {};\n\n        /** @type {ReturnType<requestAnimationFrame>} */\n        this.handle = 0;\n        this.detail = {\n            prevTime: -1,\n            currentTime: -1,\n            deltaTime: 0,\n        };\n\n        /** @protected */\n        this.animationFrameHandler = animationFrameHandler;\n\n        /** @protected */\n        this.callback = callback;\n\n        this.next = this.next.bind(this);\n        this.start = this.start.bind(this);\n        this.cancel = this.cancel.bind(this);\n    }\n    \n    next(now = performance.now()) {\n        this.handle = this.animationFrameHandler.requestAnimationFrame(this.next);\n        let d = this.detail;\n        d.prevTime = d.currentTime;\n        d.currentTime = now;\n        d.deltaTime = d.currentTime - d.prevTime;\n        this.callback(this);\n    }\n\n    start() {\n        this.handle = this.animationFrameHandler.requestAnimationFrame(this.next);\n        return this;\n    }\n\n    cancel() {\n        this.animationFrameHandler.cancelAnimationFrame(this.handle);\n        return this;\n    }\n}\n", "/**\n * Checks whether the context supports WebGL2 features.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @returns {boolean} Whether WebGL2 is supported.\n */\nexport function isWebGL2Supported(gl) {\n  return (\n    typeof WebGL2RenderingContext !== 'undefined' &&\n    gl instanceof WebGL2RenderingContext\n  );\n}\n", "import { isWebGL2Supported } from '../GLHelper.js';\n\nexport class BufferDataContext {\n  /**\n   * @param {WebGLRenderingContextBase} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   */\n  constructor(gl, target) {\n    this.gl = gl;\n    this.target = target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferDataContext}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    const gl = this.gl;\n    const target = this.target;\n    if (typeof srcDataOrSize === 'number') {\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferData(target, srcDataOrSize, usage || gl.STATIC_DRAW);\n    } else {\n      if (!ArrayBuffer.isView(srcDataOrSize))\n        throw new Error('Source data must be a typed array.');\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferData(target, srcDataOrSize, usage || gl.STATIC_DRAW);\n    }\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferDataContext}\n   */\n  subData(\n    srcData,\n    dstOffset = 0,\n    srcOffset = undefined,\n    srcLength = undefined\n  ) {\n    const gl = this.gl;\n    const target = this.target;\n    if (!ArrayBuffer.isView(srcData)) {\n      throw new Error('Source data must be a typed array.');\n    } else if (typeof srcOffset !== 'undefined') {\n      if (isWebGL2Supported(gl)) {\n        /** @type {WebGL2RenderingContext} */\n        (gl).bufferSubData(target, dstOffset, srcData, srcOffset, srcLength);\n      } else {\n        // HACK: `subarray()` is in ALL TypedArrays, but not in BufferSource\n        const srcSubData = srcLength\n          // @ts-ignore\n          ? srcData.subarray(srcOffset, srcOffset + srcLength)\n          // @ts-ignore\n          : srcData.subarray(srcOffset);\n        /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n        (gl).bufferSubData(target, dstOffset, srcSubData);\n      }\n    } else {\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferSubData(target, dstOffset, srcData);\n    }\n    return this;\n  }\n}\n\nexport class BufferBuilder {\n  /**\n   * @param {WebGLRenderingContext} gl The webgl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {WebGLBuffer} [buffer] The buffer handle. If undefined, a\n   * new buffer will be created.\n   */\n  constructor(gl, target, buffer = undefined) {\n    /** @private */\n    this.dataContext = new BufferDataContext(gl, target);\n    this.handle = buffer || gl.createBuffer();\n    gl.bindBuffer(target, this.handle);\n  }\n\n  get gl() {\n    return this.dataContext.gl;\n  }\n\n  get target() {\n    return this.dataContext.target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferBuilder}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    this.dataContext.data(srcDataOrSize, usage);\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferBuilder}\n   */\n  subData(\n    srcData,\n    dstOffset = 0,\n    srcOffset = undefined,\n    srcLength = undefined\n  ) {\n    this.dataContext.subData(srcData, dstOffset, srcOffset, srcLength);\n    return this;\n  }\n\n  /** @returns {WebGLBuffer} */\n  build() {\n    return this.handle;\n  }\n}\n", "import { BufferDataContext } from './BufferBuilder.js';\n\nexport class BufferInfo {\n  /**\n   * @param {WebGLRenderingContextBase} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {GLenum} bufferType The buffer data type. Usually, this is\n   * `gl.FLOAT` for array buffers or `gl.UNSIGNED_SHORT` for element\n   * array buffers. It must be either `gl.BYTE`, `gl.UNSIGNED_BYTE`,\n   * `gl.SHORT`, `gl.UNSIGNED_SHORT`, `gl.FLOAT`, or `gl.HALF_FLOAT`\n   * for WebGL2.\n   * @param {WebGLBuffer} buffer The buffer handle.\n   */\n  constructor(gl, target, bufferType, buffer) {\n    this.gl = gl;\n    this.target = target;\n    this.handle = buffer;\n    this.type = bufferType;\n\n    /** @private */\n    this.bindContext = new BufferDataContext(gl, this.target);\n  }\n\n  bind(gl) {\n    gl.bindBuffer(this.target, this.handle);\n    this.bindContext.gl = gl;\n    return this.bindContext;\n  }\n}\n", "// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\nexport const BufferEnums = {\n  // WebGL1\n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  INT: 0x1404,\n  UNSIGNED_INT: 0x1405,\n  FLOAT: 0x1406,\n  // WebGL2\n  HALF_FLOAT: 0x140b,\n};\n", "import { BufferEnums } from '../BufferEnums.js';\n\n/**\n * Creates a buffer source given the type and data.\n *\n * @param {WebGLRenderingContextBase} gl The gl context.\n * @param {GLenum} type The data type of the elements in the buffer. Usually,\n * this is `gl.FLOAT` for array buffers or `gl.UNSIGNED_SHORT` for element\n * array buffers. It must be either `gl.BYTE`, `gl.UNSIGNED_BYTE`, `gl.SHORT`,\n * `gl.UNSIGNED_SHORT`, `gl.FLOAT`, or `gl.HALF_FLOAT` for WebGL2.\n * @param {Array<number>} data The buffer source data array.\n * @returns {BufferSource} The typed array buffer containing the given data.\n */\nexport function createBufferSource(gl, type, data) {\n  const TypedArray = getTypedArrayForBufferType(gl, type);\n  return new TypedArray(data);\n}\n\n/**\n * Create a buffer with the given source.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The gl context.\n * @param {GLenum} target The buffer bind target. Usually, this is `gl.ARRAY_BUFFER` or\n * `gl.ELEMENT_ARRAY_BUFFER`.\n * @param {BufferSource} bufferSource The buffer source array.\n * @param {GLenum} [usage] The buffer usage hint. By default, this is `gl.STATIC_DRAW`.\n * @returns {WebGLBuffer} The created and bound data buffer.\n */\nexport function createBuffer(gl, target, bufferSource, usage = gl.STATIC_DRAW) {\n  if (!ArrayBuffer.isView(bufferSource))\n    throw new Error('Source data must be a typed array.');\n  let handle = gl.createBuffer();\n  gl.bindBuffer(target, handle);\n  gl.bufferData(target, bufferSource, usage);\n  return handle;\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {GLenum} bufferType\n */\nexport function getTypedArrayForBufferType(gl, bufferType) {\n  // NOTE: For WebGL2, gl.HALF_FLOAT (float16) does not have an associated TypedArray.\n  switch (bufferType) {\n    case gl.BYTE:\n      return Int8Array;\n    case gl.UNSIGNED_BYTE:\n      return Uint8Array;\n    case gl.SHORT:\n      return Int16Array;\n    case gl.UNSIGNED_SHORT:\n      return Uint16Array;\n    case gl.INT:\n      return Int32Array;\n    case gl.UNSIGNED_INT:\n      return Uint32Array;\n    case gl.FLOAT:\n      return Float32Array;\n    default:\n      throw new Error(`Cannot find valid typed array for buffer type '${bufferType}'.`);\n  }\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {BufferSource} bufferSource \n * @returns {GLenum}\n */\nexport function getBufferTypeForBufferSource(gl, bufferSource) {\n  if (bufferSource instanceof Int8Array) {\n    return gl.BYTE;\n  } else if (bufferSource instanceof Uint8Array) {\n    return gl.UNSIGNED_BYTE;\n  } else if (bufferSource instanceof Int16Array) {\n    return gl.SHORT;\n  } else if (bufferSource instanceof Uint16Array) {\n    return gl.UNSIGNED_SHORT;\n  } else if (bufferSource instanceof Int32Array) {\n    return gl.INT;\n  } else if (bufferSource instanceof Uint32Array) {\n    return gl.UNSIGNED_INT;\n  } else if (bufferSource instanceof Float32Array) {\n    return gl.FLOAT;\n  } else {\n    throw new Error('Cannot find valid data type for buffer source.');\n  }\n}\n\nconst BUFFER_TYPE_BYTE_COUNT = {\n  [BufferEnums.BYTE]: 1,\n  [BufferEnums.UNSIGNED_BYTE]: 1,\n  [BufferEnums.SHORT]: 2,\n  [BufferEnums.UNSIGNED_SHORT]: 2,\n  [BufferEnums.INT]: 4,\n  [BufferEnums.UNSIGNED_INT]: 4,\n  [BufferEnums.FLOAT]: 4,\n  [BufferEnums.HALF_FLOAT]: 2,\n};\nexport function getByteCountForBufferType(gl, bufferType) {\n  return BUFFER_TYPE_BYTE_COUNT[bufferType];\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {Int8ArrayConstructor\n * |Uint8ArrayConstructor\n * |Int16ArrayConstructor\n * |Uint16ArrayConstructor\n * |Int32ArrayConstructor\n * |Uint32ArrayConstructor\n * |Float32ArrayConstructor} typedArray \n * @returns {GLenum}\n */\nexport function getBufferTypeForTypedArray(gl, typedArray) {\n  // NOTE: For WebGL2, gl.HALF_FLOAT (float16) does not have an associated TypedArray.\n  switch (typedArray) {\n    case Int8Array:\n      return gl.BYTE;\n    case Uint8Array:\n      return gl.UNSIGNED_BYTE;\n    case Int16Array:\n      return gl.SHORT;\n    case Uint16Array:\n      return gl.UNSIGNED_SHORT;\n    case Int32Array:\n      return gl.INT;\n    case Uint32Array:\n      return gl.UNSIGNED_INT;\n    case Float32Array:\n      return gl.FLOAT;\n    default:\n      throw new Error('Cannot find valid buffer type for typed array.');\n  }\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {GLenum} target \n * @param {WebGLBuffer} buffer \n * @returns {GLenum}\n */\nexport function getBufferUsage(gl, target, buffer) {\n  gl.bindBuffer(target, buffer);\n  return gl.getBufferParameter(target, gl.BUFFER_USAGE);\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {GLenum} target \n * @param {WebGLBuffer} buffer \n * @returns {GLenum}\n */\nexport function getBufferByteCount(gl, target, buffer) {\n  gl.bindBuffer(target, buffer);\n  return gl.getBufferParameter(target, gl.BUFFER_SIZE);\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {GLenum} target \n * @param {WebGLBuffer} buffer \n * @returns {GLenum}\n */\nexport function getBufferLength(gl, target, buffer, type) {\n  return Math.trunc(getBufferByteCount(gl, target, buffer) / getByteCountForBufferType(gl, type));\n}\n", "import { BufferInfo } from './BufferInfo.js';\nimport { BufferBuilder } from './BufferBuilder.js';\nimport { getBufferTypeForBufferSource, getBufferTypeForTypedArray } from './helper/BufferHelper.js';\n\nexport class BufferInfoBuilder {\n  /**\n   * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {WebGLBuffer} [buffer] The buffer handle. If undefined, a\n   * new buffer will be created.\n   */\n  constructor(gl, target, buffer = undefined) {\n    /** @private */\n    this.bufferBuilder = new BufferBuilder(gl, target, buffer);\n    /** @private */\n    this.bufferType = gl.FLOAT;\n  }\n\n  get gl() {\n    return this.bufferBuilder.gl;\n  }\n\n  get handle() {\n    return this.bufferBuilder.handle;\n  }\n\n  get target() {\n    return this.bufferBuilder.target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferInfoBuilder}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    this.bufferBuilder.data(srcDataOrSize, usage);\n    if (typeof srcDataOrSize !== 'number') {\n      this.bufferType = getBufferTypeForBufferSource(this.gl, srcDataOrSize);\n    }\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferInfoBuilder}\n   */\n  subData(\n    srcData,\n    dstOffset = undefined,\n    srcOffset = undefined,\n    srcLength = undefined\n  ) {\n    this.bufferBuilder.subData(srcData, dstOffset, srcOffset, srcLength);\n    this.bufferType = getBufferTypeForBufferSource(this.gl, srcData);\n    return this;\n  }\n\n  /**\n   * @returns {BufferInfo}\n   */\n  build() {\n    const handle = this.bufferBuilder.build();\n    const gl = this.gl;\n    const target = this.target;\n    const type = this.bufferType;\n    return new BufferInfo(gl, target, type, handle);\n  }\n}\n", "/**\n * Get list of parameter infos for all active uniforms in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get the active uniforms from.\n * @returns {Array<WebGLActiveInfo>} An array of active uniforms.\n */\nexport function getActiveUniforms(gl, program) {\n  let result = [];\n  const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < uniformCount; ++i) {\n    let uniformInfo = gl.getActiveUniform(program, i);\n    if (!uniformInfo) break;\n    result.push(uniformInfo);\n  }\n  return result;\n}\n\n/**\n * Get list of parameter infos for all active attributes in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get the active attributes from.\n * @returns {Array<WebGLActiveInfo>} An array of active attributes.\n */\nexport function getActiveAttribs(gl, program) {\n  let result = [];\n  const attributeCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < attributeCount; ++i) {\n    let attributeInfo = gl.getActiveAttrib(program, i);\n    if (!attributeInfo) continue;\n    result.push(attributeInfo);\n  }\n  return result;\n}\n", "/**\n * Get the number of expected elements in the attribute vertex type.\n *\n * @param {WebGLRenderingContextBase} gl The gl context.\n * @param {GLenum} attribType The attribute gl type.\n * @returns {number} The number of expected elements in the attribute vertex type.\n */\nexport function getAttribVertexSize(gl, attribType) {\n  // https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveAttrib.xml\n  switch (attribType) {\n    case gl.FLOAT:\n    case gl.INT:\n    case gl.UNSIGNED_INT:\n    case gl.BOOL:\n      return 1;\n    case gl.FLOAT_VEC2:\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2:\n      return 2;\n    case gl.FLOAT_VEC3:\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3:\n      return 3;\n    case gl.FLOAT_VEC4:\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4:\n      return 4;\n    case gl.FLOAT_MAT2:\n      return 4;\n    case gl.FLOAT_MAT3:\n      return 9;\n    case gl.FLOAT_MAT4:\n      return 16;\n    default:\n      throw new Error('Invalid vertex attribute type.');\n  }\n}\n", "import { isWebGL2Supported } from '../GLHelper.js';\nimport { getAttribVertexSize } from './ProgramAttributeHelper.js';\n\n/**\n * @callback AttributeFunction\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n */\n\n/**\n * Gets the attribute modifier function by attribute type. For vectors\n * of size 1, it accepts a single number value. For vectors of greater\n * size, it takes an array of numbers.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} attributeType The attribute data type.\n * @returns {AttributeFunction} The attribute modifier function.\n */\nexport function getAttributeFunction(gl, attributeType) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n    switch (attributeType) {\n        // WebGL1\n        case gl.FLOAT:\n        case gl.FLOAT_VEC2:\n        case gl.FLOAT_VEC3:\n        case gl.FLOAT_VEC4:\n            return attributeFloatBuffer;\n    }\n\n    if (isWebGL2Supported(gl)) {\n        const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n        switch (attributeType) {\n            case gl.INT:\n            case gl.INT_VEC2:\n            case gl.INT_VEC3:\n            case gl.INT_VEC4:\n            case gl.BOOL:\n            case gl.BOOL_VEC2:\n            case gl.BOOL_VEC3:\n            case gl.BOOL_VEC4:\n                return attributeIntBuffer;\n            case gl.FLOAT_MAT2:\n                return attributeFloatMat2Buffer;\n            case gl.FLOAT_MAT3:\n                return attributeFloatMat3Buffer;\n            case gl.FLOAT_MAT4:\n                return attributeFloatMat4Buffer;\n            // WebGL2\n            case gl2.UNSIGNED_INT:\n            case gl2.UNSIGNED_INT_VEC2:\n            case gl2.UNSIGNED_INT_VEC3:\n            case gl2.UNSIGNED_INT_VEC4:\n                return attributeUintBuffer;\n        }\n    }\n\n    throw new Error('Cannot find attribute function for gl enum.');\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatBuffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    this.bindBuffer(this.ARRAY_BUFFER, buffer);\n    this.enableVertexAttribArray(index);\n    this.vertexAttribPointer(index, vertexSize, bufferType, normalize, stride, offset);\n    if (divisor !== undefined) {\n        if (!isWebGL2Supported(this)) {\n            throw new Error('Cannot use attribute divisor in WebGL 1.');\n        }\n        const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n        gl2.vertexAttribDivisor(index, divisor);\n    }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\n function attributeIntBuffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    if (!isWebGL2Supported(this)) {\n        throw new Error('Cannot use attribute divisor in WebGL 1.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n    gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n    gl2.enableVertexAttribArray(index);\n    gl2.vertexAttribIPointer(index, vertexSize, bufferType, stride, offset);\n    if (divisor !== undefined) {\n        gl2.vertexAttribDivisor(index, divisor);\n    }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeUintBuffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    if (!isWebGL2Supported(this)) {\n        throw new Error('Cannot use attribute divisor in WebGL 1.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n    gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n    gl2.enableVertexAttribArray(index);\n    gl2.vertexAttribIPointer(index, vertexSize, bufferType, stride, offset);\n    if (divisor !== undefined) {\n        gl2.vertexAttribDivisor(index, divisor);\n    }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat2Buffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    // NOTE: Size along 1 dimension\n    let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT2);\n    // NOTE: Assumes a square matrix.\n    let matrixLength = matrixSize * matrixSize;\n    attributeFloatMatrixBufferImpl(matrixLength, matrixSize, index, buffer, vertexSize, bufferType, normalize, stride, offset, divisor);\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat3Buffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    // NOTE: Size along 1 dimension\n    let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT3);\n    // NOTE: Assumes a square matrix.\n    let matrixLength = matrixSize * matrixSize;\n    attributeFloatMatrixBufferImpl(matrixLength, matrixSize, index, buffer, vertexSize, bufferType, normalize, stride, offset, divisor);\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat4Buffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    // NOTE: Size along 1 dimension\n    let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT4);\n    // NOTE: Assumes a square matrix.\n    let matrixLength = matrixSize * matrixSize;\n    attributeFloatMatrixBufferImpl(matrixLength, matrixSize, index, buffer, vertexSize, bufferType, normalize, stride, offset, divisor);\n}\n\n/**\n * @param {number} matrixLength\n * @param {number} matrixSize\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMatrixBufferImpl(matrixLength, matrixSize, index, buffer, vertexSize, bufferType, normalize, stride, offset, divisor) {\n    if (!isWebGL2Supported(this)) {\n        throw new Error('Cannot use attribute divisor in WebGL 1.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n    gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n    // Number of matrices in the buffer.\n    let matrixCount = vertexSize / matrixSize;\n    // The stride to each matrix\n    let matrixStride = matrixLength * vertexSize;\n    // The offset within each matrix data\n    let offsetPerMatrix = stride / matrixSize;\n    for(let i = 0; i < matrixSize; ++i) {\n        let ii = index + i;\n        gl2.enableVertexAttribArray(ii);\n        gl2.vertexAttribPointer(ii, matrixCount, bufferType, normalize, matrixStride, offset + offsetPerMatrix * i);\n        if (divisor !== undefined) {\n            gl2.vertexAttribDivisor(ii, divisor);\n        }\n    }\n}\n", "import { getActiveAttribs } from './helper/ProgramActives.js';\nimport { getAttributeFunction } from './ProgramAttributeFunctions.js';\nimport { getAttribVertexSize } from './ProgramAttributeHelper.js';\n\n/**\n * @typedef {import('./ProgramAttributeFunctions.js').AttributeFunction} AttributeFunction\n */\n\n/**\n * @typedef ActiveAttributeInfo\n * @property {GLenum} type\n * @property {number} length\n * @property {number} location\n * @property {number} size\n * @property {AttributeFunction} applier\n * @property {number|Float32List|Int32List|Uint32List} value\n */\n\n/**\n * Get map of all active attributes to their info in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get active attributes from.\n * @returns {Record<string, ActiveAttributeInfo>} An object mapping of attribute names to info.\n */\nexport function getActiveAttribsInfo(gl, program) {\n  /** @type {Record<string, ActiveAttributeInfo>} */\n  let result = {};\n  const activeAttributes = getActiveAttribs(gl, program);\n  for (let activeInfo of activeAttributes) {\n    const attributeName = activeInfo.name;\n    const attributeLength = activeInfo.size;\n    const attributeType = activeInfo.type;\n    const attributeLocation = gl.getAttribLocation(program, attributeName);\n    const attributeApplier = getAttributeFunction(gl, attributeType);\n    const attributeSize = getAttribVertexSize(gl, attributeType);\n    result[attributeName] = {\n      type: attributeType,\n      length: attributeLength,\n      location: attributeLocation,\n      size: attributeSize,\n      applier: attributeApplier,\n      set value([buffer, vertexSize, bufferType, normalize, stride, offset, divisor]) {\n        this.applier(this.location, buffer, vertexSize, bufferType, normalize, stride, offset, divisor);\n      }\n    };\n  }\n  return result;\n}\n", "/**\n * Create and compile shader from source text.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} shaderType The type of the shader. This is usually `gl.VERTEX_SHADER`\n * or `gl.FRAGMENT_SHADER`.\n * @param {string} shaderSource The shader source text.\n * @returns {WebGLShader} The compiled shader.\n */\nexport function createShader(gl, shaderType, shaderSource) {\n    let shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n\n    let status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!status) {\n        let log = gl.getShaderInfoLog(shader) +\n            `\\nFailed to compile shader:\\n${shaderSource}`;\n        gl.deleteShader(shader);\n        throw new Error(log);\n    }\n    return shader;\n}\n\n/**\n * Link the given shader program from list of compiled shaders.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The shader program handle.\n * @param {Array<WebGLShader>} shaders The list of compiled shaders\n * to link in the program.\n * @returns {Promise<WebGLProgram>} The linked shader program.\n */\nexport async function createShaderProgram(gl, program, shaders) {\n    // Attach to the program.\n    for (let shader of shaders) {\n        gl.attachShader(program, shader);\n    }\n\n    // Link'em!\n    gl.linkProgram(program);\n\n    // Might be async...\n    const ext = gl.getExtension('KHR_parallel_shader_compile');\n    if (ext) {\n        const statusInterval = 1000 / 60;\n        let result;\n        do {\n            await new Promise((resolve, _) => setTimeout(resolve, statusInterval));\n            result = gl.getProgramParameter(program, ext.COMPLETION_STATUS_KHR);\n        } while (!result);\n    }\n\n    // Don't forget to clean up the shaders! It's no longer needed.\n    for (let shader of shaders) {\n        gl.detachShader(program, shader);\n        gl.deleteShader(shader);\n    }\n\n    let status = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!status) {\n        let log = gl.getProgramInfoLog(program);\n        gl.deleteProgram(program);\n        throw new Error(log);\n    }\n    return program;\n}\n\n/**\n * Draw the currently bound render context.\n *\n * @param {WebGLRenderingContextBase} gl\n * @param {number} mode\n * @param {number} offset\n * @param {number} count\n * @param {WebGLBuffer} [elementBuffer]\n */\nexport function draw(gl, mode, offset, count, elementBuffer = undefined) {\n    if (elementBuffer) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n        gl.drawElements(mode, count, gl.UNSIGNED_SHORT, offset);\n    } else {\n        gl.drawArrays(mode, offset, count);\n    }\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl\n * @param {WebGLProgram} program\n */\nexport function getProgramStatus(gl, program) {\n    return {\n        /** @type {GLboolean} */\n        linkStatus: gl.getProgramParameter(program, gl.LINK_STATUS),\n        /** @type {GLboolean} */\n        deleteStatus: gl.getProgramParameter(program, gl.DELETE_STATUS),\n        /** @type {GLboolean} */\n        validateStatus: gl.getProgramParameter(program, gl.VALIDATE_STATUS),\n        /** @type {string} */\n        infoLog: gl.getProgramInfoLog(program),\n    };\n}\n", "import { isWebGL2Supported } from '../GLHelper.js';\n\n/**\n * @callback UniformArrayFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {Float32List|Int32List|Uint32List} value The vector array.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n *\n * @callback UniformComponentFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {...number} values The components of the vector.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n *\n * @typedef {UniformArrayFunction|UniformComponentFunction} UniformFunction\n */\n\n/**\n * Gets the uniform modifier function by uniform type. For uniform vectors\n * of size 1, it accepts a single number value. For vectors of greater\n * size, it takes an array of numbers.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformFunction} The uniform modifier function.\n */\nexport function getUniformFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1f;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2fv;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3fv;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4fv;\n    case gl1.INT:\n      return gl1.uniform1i;\n    case gl1.INT_VEC2:\n      return gl1.uniform2iv;\n    case gl1.INT_VEC3:\n      return gl1.uniform3iv;\n    case gl1.INT_VEC4:\n      return gl1.uniform4iv;\n    case gl1.BOOL:\n      return gl1.uniform1i;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2iv;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3iv;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4iv;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2fv;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3fv;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4fv;\n    // WeblGL1 Samplers\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1i;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1ui;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2uiv;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3uiv;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4uiv;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3fv;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4fv;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2fv;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4fv;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2fv;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3fv;\n      // WeblGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1i;\n    }\n  }\n\n  throw new Error('Cannot find uniform function for gl enum.');\n}\n\n/**\n * Get the per component uniform modifier function by uniform type.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformComponentFunction} The per component uniform modifier function.\n */\nexport function getUniformComponentFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1f;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2f;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3f;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4f;\n    case gl1.INT:\n      return gl1.uniform1i;\n    case gl1.INT_VEC2:\n      return gl1.uniform2i;\n    case gl1.INT_VEC3:\n      return gl1.uniform3i;\n    case gl1.INT_VEC4:\n      return gl1.uniform4i;\n    case gl1.BOOL:\n      return gl1.uniform1i;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2i;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3i;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4i;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2f;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3f;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4f;\n    // WeblGL1 Samplers\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1i;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1ui;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2ui;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3ui;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4ui;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3f;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4f;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2f;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4f;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2f;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3f;\n      // WeblGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1i;\n    }\n  }\n\n  throw new Error('Cannot find per component uniform function for gl enum.');\n}\n\n/**\n * Get the array uniform modifier function by uniform type.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformArrayFunction} The array uniform modifier function.\n */\nexport function getUniformArrayFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1fv;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2fv;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3fv;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4fv;\n    case gl1.INT:\n      return gl1.uniform1iv;\n    case gl1.INT_VEC2:\n      return gl1.uniform2iv;\n    case gl1.INT_VEC3:\n      return gl1.uniform3iv;\n    case gl1.INT_VEC4:\n      return gl1.uniform4iv;\n    case gl1.BOOL:\n      return gl1.uniform1iv;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2iv;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3iv;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4iv;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2fv;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3fv;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4fv;\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1iv;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1uiv;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2uiv;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3uiv;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4uiv;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3fv;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4fv;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2fv;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4fv;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2fv;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3fv;\n      // WebGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1iv;\n    }\n  }\n\n  throw new Error('Cannot find array uniform function for gl enum.');\n}\n\nfunction uniformMatrix2fv(location, value) {\n  this.uniformMatrix2fv(location, false, value);\n}\n\nfunction uniformMatrix2f(location, m00, m01, m10, m11) {\n  this.uniformMatrix2fv(location, false, [m00, m01, m10, m11]);\n}\n\nfunction uniformMatrix3fv(location, value) {\n  this.uniformMatrix3fv(location, false, value);\n}\n\nfunction uniformMatrix3f(\n  location,\n  m00,\n  m01,\n  m02,\n  m10,\n  m11,\n  m12,\n  m20,\n  m21,\n  m22\n) {\n  this.uniformMatrix3fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m10,\n    m11,\n    m12,\n    m20,\n    m21,\n    m22,\n  ]);\n}\n\nfunction uniformMatrix4fv(location, value) {\n  this.uniformMatrix4fv(location, false, value);\n}\n\nfunction uniformMatrix4f(\n  location,\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23,\n  m30,\n  m31,\n  m32,\n  m33\n) {\n  this.uniformMatrix4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n    m20,\n    m21,\n    m22,\n    m23,\n    m30,\n    m31,\n    m32,\n    m33,\n  ]);\n}\n\nfunction uniformMatrix2x3fv(location, value) {\n  this.uniformMatrix2x3fv(location, false, value);\n}\n\nfunction uniformMatrix2x3f(location, m00, m01, m02, m10, m11, m12) {\n  this.uniformMatrix2x3fv(location, false, [m00, m01, m02, m10, m11, m12]);\n}\n\nfunction uniformMatrix2x4fv(location, value) {\n  this.uniformMatrix2x4fv(location, false, value);\n}\n\nfunction uniformMatrix2x4f(location, m00, m01, m02, m03, m10, m11, m12, m13) {\n  this.uniformMatrix2x4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n  ]);\n}\n\nfunction uniformMatrix3x2fv(location, value) {\n  this.uniformMatrix3x2fv(location, false, value);\n}\n\nfunction uniformMatrix3x2f(location, m00, m01, m10, m11, m20, m21) {\n  this.uniformMatrix3x2fv(location, false, [m00, m01, m10, m11, m20, m21]);\n}\n\nfunction uniformMatrix3x4fv(location, value) {\n  this.uniformMatrix3x4fv(location, false, value);\n}\n\nfunction uniformMatrix3x4f(\n  location,\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23\n) {\n  this.uniformMatrix3x4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n    m20,\n    m21,\n    m22,\n    m23,\n  ]);\n}\n\nfunction uniformMatrix4x2fv(location, value) {\n  this.uniformMatrix4x2fv(location, false, value);\n}\n\nfunction uniformMatrix4x2f(location, m00, m01, m10, m11, m20, m21, m30, m31) {\n  this.uniformMatrix4x2fv(location, false, [\n    m00,\n    m01,\n    m10,\n    m11,\n    m20,\n    m21,\n    m30,\n    m31,\n  ]);\n}\n\nfunction uniformMatrix4x3fv(location, value) {\n  this.uniformMatrix4x3fv(location, false, value);\n}\n\nfunction uniformMatrix4x3f(\n  location,\n  m00,\n  m01,\n  m02,\n  m10,\n  m11,\n  m12,\n  m20,\n  m21,\n  m22,\n  m30,\n  m31,\n  m32\n) {\n  this.uniformMatrix4x3fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m10,\n    m11,\n    m12,\n    m20,\n    m21,\n    m22,\n    m30,\n    m31,\n    m32,\n  ]);\n}\n", "import { getUniformFunction } from './ProgramUniformFunctions.js';\nimport { getActiveUniforms } from './helper/ProgramActives.js';\n\n/**\n * @typedef {import('./ProgramUniformFunctions').UniformFunction} UniformFunction\n */\n\n/**\n * @typedef ActiveUniformInfo\n * @property {number} type\n * @property {number} length\n * @property {WebGLUniformLocation} location\n * @property {UniformFunction} applier\n * @property {number|Float32List|Int32List|Uint32List} value\n */\n\n/**\n * Get map of all active uniforms to their info in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get active uniforms from.\n * @returns {Record<string, ActiveUniformInfo>} An object mapping of uniform names to info.\n */\nexport function getActiveUniformsInfo(gl, program) {\n  /** @type {Record<string, ActiveUniformInfo>} */\n  let result = {};\n  const activeUniforms = getActiveUniforms(gl, program);\n  for (let activeInfo of activeUniforms) {\n    const uniformName = activeInfo.name;\n    const uniformSize = activeInfo.size;\n    const uniformType = activeInfo.type;\n    const uniformLocation = gl.getUniformLocation(program, uniformName);\n    const uniformApplier = getUniformFunction(gl, uniformType);\n    result[uniformName] = {\n      type: uniformType,\n      length: uniformSize,\n      location: uniformLocation,\n      applier: uniformApplier,\n      set value(value) {\n        this.applier.call(gl, this.location, value);\n      }\n    };\n  }\n  return result;\n}\n", "import { isWebGL2Supported } from '../../GLHelper.js';\nimport { getActiveAttribsInfo } from '../ProgramAttributeInfo.js';\nimport { createShader, createShaderProgram } from './ProgramHelper.js';\nimport { getActiveUniformsInfo } from '../ProgramUniformInfo.js';\n\n/**\n * @typedef {import('../../buffer/helper/BufferInfoHelper').BufferInfo} BufferInfo\n * @typedef {import('../../buffer/helper/BufferInfoHelper').VertexArrayObjectInfo} VertexArrayObjectInfo\n */\n\n/**\n * @typedef ProgramInfo\n * @property {WebGLProgram} handle\n * @property {Record<string, import('../ProgramUniformInfo.js').ActiveUniformInfo>} uniforms\n * @property {Record<string, import('../ProgramAttributeInfo.js').ActiveAttributeInfo>} attributes\n */\n\n/**\n * Assumes all shaders already compiled and linked successfully.\n * \n * @param {WebGLRenderingContextBase} gl \n * @param {WebGLProgram} program\n * @returns {ProgramInfo}\n */\nexport function createProgramInfo(gl, program) {\n    return {\n        handle: program,\n        attributes: getActiveAttribsInfo(gl, program),\n        uniforms: getActiveUniformsInfo(gl, program),\n    };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {WebGLProgram} program\n * @param {Array<string>} shaderSources\n * @param {Array<GLenum>} [shaderTypes]\n * @returns {Promise<WebGLProgram>}\n */\nexport async function linkProgramShaders(gl, program, shaderSources, shaderTypes = [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER]) {\n    let index = 0;\n    let shaders = [];\n    for(let shaderSource of shaderSources) {\n        if (index >= shaderTypes.length) {\n            throw new Error('Missing shader type for shader source.');\n        }\n        let shaderType = shaderTypes[index++];\n        let shader = createShader(gl, shaderType, shaderSource);\n        shaders.push(shader);\n    }\n    await createShaderProgram(gl, program, shaders);\n    return program;\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {ReturnType<createProgramInfo>} programInfo \n * @param {BufferInfo|VertexArrayObjectInfo} bufferOrVertexArrayObjectInfo \n */\nexport function bindProgramAttributes(gl, programInfo, bufferOrVertexArrayObjectInfo) {\n    if ('handle' in bufferOrVertexArrayObjectInfo && bufferOrVertexArrayObjectInfo.handle instanceof WebGLVertexArrayObject) {\n        if (!isWebGL2Supported(gl)) {\n            throw new Error('Vertex array objects are only supported in WebGL 2.');\n        }\n        const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n        let vaoInfo = /** @type {VertexArrayObjectInfo} */ (bufferOrVertexArrayObjectInfo);\n        gl2.bindVertexArray(vaoInfo.handle);\n    } else {\n        let bufferInfo = /** @type {BufferInfo} */ (bufferOrVertexArrayObjectInfo);\n        let attributeInfos = programInfo.attributes;\n        for(let name in attributeInfos) {\n            if (!(name in bufferInfo.attributes)) {\n                throw new Error(`Missing buffer for attribute '${name}'.`);\n            }\n            let attrib = bufferInfo.attributes[name];\n            let { location, applier } = attributeInfos[attrib.name];\n            applier.call(gl, location, attrib.buffer, attrib.size, attrib.type, attrib.normalize, attrib.stride, attrib.offset, attrib.divisor);\n        }\n        if (bufferInfo.element) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.element.buffer);\n        }\n    }\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {ReturnType<createProgramInfo>} programInfo \n * @param {Record<string, number|Float32List|Int32List|Uint32List>} uniforms\n */\nexport function bindProgramUniforms(gl, programInfo, uniforms) {\n    let uniformInfos = programInfo.uniforms;\n    for(let name in uniforms) {\n        let value = uniforms[name];\n        let { location, applier } = uniformInfos[name];\n        applier.call(gl, location, value);\n    }\n}\n", "import { isWebGL2Supported } from '../../GLHelper.js';\nimport { bindProgramAttributes } from '../../program/helper/ProgramInfoHelper.js';\nimport { getBufferTypeForBufferSource, getByteCountForBufferType, getTypedArrayForBufferType } from './BufferHelper.js';\n\n/**\n * @typedef {WebGLBuffer|BufferSource|Array<number>} AttribBufferLike\n * \n * @typedef ArrayAttribOption\n * @property {AttribBufferLike} buffer\n * @property {string} [name]\n * @property {number} [size]\n * @property {GLenum} [type]\n * @property {boolean} [normalize]\n * @property {number} [stride]\n * @property {number} [offset]\n * @property {number} [divisor]\n * @property {GLenum} [usage]\n * @property {number} [length]\n * \n * @typedef ElementAttribOption\n * @property {AttribBufferLike} buffer\n * @property {GLenum} [type]\n * @property {GLenum} [usage]\n * @property {number} [length]\n * \n * @typedef {ReturnType<createArrayAttrib>} ArrayAttrib\n * @typedef {ReturnType<createElementAttrib>} ElementAttrib\n * \n * @typedef BufferInfo\n * @property {Record<string, ArrayAttrib>} attributes\n * @property {number} vertexCount\n * @property {ElementAttrib} element\n * \n * @typedef VertexArrayObjectInfo\n * @property {WebGLVertexArrayObject} handle\n * @property {number} vertexCount\n * @property {ElementAttrib} element\n */\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {Record<string, ArrayAttribOption>} arrays \n * @param {ElementAttribOption} [elementArray]\n * @returns {BufferInfo}\n */\nexport function createBufferInfo(gl, arrays, elementArray = undefined) {\n    let attributes = createVertexAttributesInfo(/** @type {WebGLRenderingContext|WebGL2RenderingContext} */ (gl), arrays);\n    let element = createElementAttributeInfo(/** @type {WebGLRenderingContext|WebGL2RenderingContext} */ (gl), elementArray);\n    let vertexCount;\n    if (element) {\n        vertexCount = element.length;\n    } else {\n        let names = Object.keys(attributes);\n        if (names.length > 0) {\n            let a = attributes[names[0]];\n            vertexCount = Math.trunc(a.length / a.size);\n        } else {\n            vertexCount = 0;\n        }\n    }\n    return {\n        attributes,\n        element,\n        vertexCount,\n    };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {BufferInfo} bufferInfo \n * @param {Array<import('../../program/helper/ProgramInfoHelper.js').ProgramInfo>} programInfos\n * @returns {VertexArrayObjectInfo}\n */\nexport function createVertexArrayInfo(gl, bufferInfo, programInfos) {\n    if (!isWebGL2Supported(gl)) {\n        throw new Error('Vertex array objects is only supported on WebGL2.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    let vao = gl2.createVertexArray();\n    gl2.bindVertexArray(vao);\n    for(let programInfo of programInfos) {\n        bindProgramAttributes(gl2, programInfo, bufferInfo);\n    }\n    gl2.bindVertexArray(null);\n    return {\n        handle: vao,\n        element: bufferInfo.element,\n        vertexCount: bufferInfo.vertexCount,\n    };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {BufferInfo|VertexArrayObjectInfo} bufferOrVertexArrayObjectInfo \n */\nexport function drawBufferInfo(gl, bufferOrVertexArrayObjectInfo, mode = gl.TRIANGLES, offset = 0, vertexCount = bufferOrVertexArrayObjectInfo.vertexCount, instanceCount = undefined) {\n    let element = bufferOrVertexArrayObjectInfo.element;\n    if (element) {\n        let elementType = element.type;\n        if (instanceCount !== undefined) {\n            if (!isWebGL2Supported(gl)) {\n                throw new Error('Instanced element drawing is only supported on WebGL2.');\n            }\n            const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n            gl2.drawElementsInstanced(mode, vertexCount, elementType, offset, instanceCount);\n        } else {\n            gl.drawElements(mode, vertexCount, elementType, offset);\n        }\n    } else {\n        if (instanceCount !== undefined) {\n            if (!isWebGL2Supported(gl)) {\n                throw new Error('Instanced array drawing is only supported on WebGL2.');\n            }\n            const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n            gl2.drawArraysInstanced(mode, offset, vertexCount, instanceCount);\n        } else {\n            gl.drawArrays(mode, offset, vertexCount);\n        }\n    }\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl \n * @param {ElementAttribOption} elementArray \n * @returns {ElementAttrib}\n */\nfunction createElementAttributeInfo(gl, elementArray = undefined) {\n    if (!elementArray) {\n        return null;\n    }\n    if (typeof elementArray !== 'object') {\n        throw new Error('Element attribute options must be an object.');\n    }\n    let {\n        type = gl.UNSIGNED_SHORT,\n        buffer,\n        usage = gl.STATIC_DRAW,\n        length,\n    } = /** @type {ElementAttribOption} */ (elementArray);\n\n    // Resolve buffer.\n    if (buffer instanceof WebGLBuffer) {\n        // Do nothing :)\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    } else if (ArrayBuffer.isView(buffer)) {\n        /** @type {BufferSource} */\n        let srcData = buffer;\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, srcData, usage);\n        if (type === undefined) {\n            type = getBufferTypeForBufferSource(gl, srcData);\n        }\n        if (length === undefined) {\n            // @ts-ignore\n            length = srcData.length;\n        }\n    } else if (Array.isArray(buffer)) {\n        /** @type {Array<number>} */\n        let array = buffer;\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(array), usage);\n        if (length === undefined) {\n            length = array.length;\n        }\n    } else if (typeof buffer === 'number') {\n        let size = buffer;\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, size, usage);\n        if (length === undefined) {\n            length = size;\n        }\n    } else {\n        throw new Error('Invalid buffer for element attribute options.');\n    }\n\n    // Resolve type.\n    if (type === undefined) {\n        type = gl.UNSIGNED_SHORT;\n    }\n\n    // Resolve length.\n    if (length === undefined) {\n        let bytes = gl.getBufferParameter(gl.ELEMENT_ARRAY_BUFFER, gl.BUFFER_SIZE);\n        length = Math.trunc(bytes / getByteCountForBufferType(gl, type));\n    }\n\n    return createElementAttrib(buffer, type, length);\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl \n * @param {Record<string, ArrayAttribOption>} arrays\n * @returns {Record<string, ArrayAttrib>}\n */\nfunction createVertexAttributesInfo(gl, arrays) {\n    /** @type {Record<string, ArrayAttrib>} */\n    let result = {};\n    for(let key of Object.keys(arrays)) {\n        let array = arrays[key];\n        if (!array) {\n            continue;\n        }\n        if (typeof array !== 'object') {\n            throw new Error('Array attribute options must be an object.');\n        }\n        let {\n            name = key,\n            buffer,\n            size = 3,\n            type,\n            normalize = false,\n            stride = 0,\n            offset = 0,\n            divisor = undefined,\n            usage = gl.STATIC_DRAW,\n            length,\n        } = /** @type {ArrayAttribOption} */ (array);\n\n        // Resolve buffer.\n        if (buffer instanceof WebGLBuffer) {\n            // Do nothing :)\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        } else if (ArrayBuffer.isView(buffer)) {\n            /** @type {BufferSource} */\n            let srcData = buffer;\n            buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, srcData, usage);\n            if (type === undefined) {\n                type = getBufferTypeForBufferSource(gl, srcData);\n            }\n            if (length === undefined) {\n                // @ts-ignore\n                length = srcData.length;\n            }\n        } else if (Array.isArray(buffer)) {\n            /** @type {Array<number>} */\n            let array = buffer;\n            if (type === undefined) {\n                type = gl.FLOAT;\n            }\n            if (length === undefined) {\n                length = array.length;\n            }\n            buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            let TypedArray = getTypedArrayForBufferType(gl, type);\n            gl.bufferData(gl.ARRAY_BUFFER, new TypedArray(array), usage);\n        } else if (typeof buffer === 'number') {\n            let size = buffer;\n            buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, size, usage);\n            if (length === undefined) {\n                length = size;\n            }\n        } else {\n            throw new Error(`Invalid buffer '${buffer}' for array attribute options.`);\n        }\n\n        // Resolve type.\n        if (type === undefined) {\n            type = gl.FLOAT;\n        }\n\n        // Resolve length.\n        if (length === undefined) {\n            let bytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n            length = Math.trunc(bytes / getByteCountForBufferType(gl, type));\n        }\n\n        // Resolve size.\n        if (size === undefined) {\n            size = tryVertexSize(name, length);\n        }\n        \n        result[name] = createArrayAttrib(name, buffer, length, size, type, normalize, stride, offset, divisor);\n    }\n    return result;\n}\n\n/**\n * @param {string} attribName \n * @param {number} arrayLength \n */\nfunction tryVertexSize(attribName, arrayLength) {\n    let result;\n    if (attribName.includes('texcoord')) {\n        result = 2;\n    } else if (attribName.includes('color')) {\n        result = 4;\n    } else {\n        result = 3;\n    }\n    if (arrayLength % result !== 0) {\n        throw new Error(`Could not determine vertex size - guessed ${result} but array length ${arrayLength} is not evenly divisible.`);\n    }\n    return result;\n}\n\n/**\n * @param {WebGLBuffer} buffer \n * @param {GLenum} type \n * @param {number} length\n */\nfunction createElementAttrib(buffer, type, length) {\n    return {\n        buffer,\n        type,\n        length,\n    };\n}\n\n/**\n * @param {string} name \n * @param {WebGLBuffer} buffer \n * @param {number} length\n * @param {number} size \n * @param {GLenum} type \n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n */\nfunction createArrayAttrib(name, buffer, length, size, type, normalize, stride, offset, divisor) {\n    return {\n        name,\n        buffer,\n        length,\n        size,\n        type,\n        normalize,\n        stride,\n        offset,\n        divisor,\n    };\n}\n", "import { getActiveUniformsInfo } from './ProgramUniformInfo.js';\nimport { getActiveAttribsInfo } from './ProgramAttributeInfo.js';\nimport { draw } from './helper/ProgramHelper.js';\n\nexport class ProgramInfo {\n  /**\n   * @param {WebGLRenderingContextBase} gl\n   * @param {WebGLProgram} program\n   */\n  constructor(gl, program) {\n    this.handle = program;\n\n    this.activeUniforms = getActiveUniformsInfo(gl, program);\n    this.activeAttributes = getActiveAttribsInfo(gl, program);\n\n    this.drawContext = new ProgramInfoDrawContext(gl, this);\n  }\n\n  /**\n   * Bind the program and prepare to draw. This returns the bound context\n   * that can modify the draw state.\n   *\n   * @param {WebGLRenderingContextBase} gl\n   * @returns {ProgramInfoDrawContext} The bound context to draw with.\n   */\n  bind(gl) {\n    gl.useProgram(this.handle);\n\n    this.drawContext.gl = gl;\n    return this.drawContext;\n  }\n}\n\nexport class ProgramInfoDrawContext {\n  constructor(gl, programInfo) {\n    this.gl = gl;\n    /** @private */\n    this.parent = programInfo;\n  }\n\n  uniform(uniformName, value) {\n    const activeUniforms = this.parent.activeUniforms;\n    if (uniformName in activeUniforms) {\n      let uniform = activeUniforms[uniformName];\n      let location = uniform.location;\n      uniform.applier.call(this.gl, location, value);\n    }\n    return this;\n  }\n\n  /**\n   * @param {string} attributeName Name of the attribute.\n   * @param {GLenum} bufferType The buffer data type. This is usually `gl.FLOAT`\n   * but can also be one of `gl.BYTE`, `gl.UNSIGNED_BYTE`, `gl.SHORT`, `gl.UNSIGNED_SHORT`\n   * or `gl.HALF_FLOAT` for WebGL2.\n   * @param {WebGLBuffer} buffer The buffer handle.\n   * @param {boolean} [normalize=false] Whether to normalize the vectors in the buffer.\n   * @param {number} [stride=0] The stride for each vector in the buffer.\n   * @param {number} [offset=0] The initial offset in the buffer.\n   */\n  attribute(\n    attributeName,\n    bufferType,\n    buffer,\n    normalize = false,\n    stride = 0,\n    offset = 0\n  ) {\n    const gl = this.gl;\n    const activeAttributes = this.parent.activeAttributes;\n    if (attributeName in activeAttributes) {\n      let attribute = activeAttributes[attributeName];\n      let location = attribute.location;\n      let size = attribute.size;\n      if (buffer) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(\n          location,\n          size,\n          bufferType,\n          normalize,\n          stride,\n          offset\n        );\n        gl.enableVertexAttribArray(location);\n      } else {\n        gl.disableVertexAttribArray(location);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Draws using this program.\n   *\n   * @param {WebGLRenderingContext} gl\n   * @param {number} mode\n   * @param {number} offset\n   * @param {number} count\n   * @param {WebGLBuffer} elementBuffer\n   */\n  draw(gl, mode, offset, count, elementBuffer = null) {\n    draw(gl, mode, offset, count, elementBuffer);\n    return this.parent;\n  }\n}\n", "import { createShader, createShaderProgram } from './helper/ProgramHelper.js';\n\nexport class ProgramBuilder {\n  /**\n   * @param {WebGLRenderingContextBase} gl\n   * @param {WebGLProgram} [program]\n   */\n  constructor(gl, program = undefined) {\n    this.handle = program || gl.createProgram();\n    this.shaders = [];\n    /** @type {WebGLRenderingContextBase} */\n    this.gl = gl;\n  }\n\n  /**\n   * @param {GLenum} shaderType\n   * @param {string} shaderSource\n   * @returns {ProgramBuilder}\n   */\n  shader(shaderType, shaderSource) {\n    const gl = this.gl;\n    let shader = createShader(gl, shaderType, shaderSource);\n    this.shaders.push(shader);\n    return this;\n  }\n\n  /**\n   * @returns {WebGLProgram}\n   */\n  link() {\n    const gl = this.gl;\n    createShaderProgram(gl, this.handle, this.shaders);\n    this.shaders.length = 0;\n    return this.handle;\n  }\n}\n", "import { ProgramInfo } from './ProgramInfo.js';\nimport { ProgramBuilder } from './ProgramBuilder.js';\n\nexport class ProgramInfoBuilder {\n  /**\n   * @param {WebGLRenderingContextBase} gl\n   * @param {WebGLProgram} [program]\n   */\n  constructor(gl, program = undefined) {\n    /** @private */\n    this.programBuilder = new ProgramBuilder(gl, program);\n  }\n\n  get gl() {\n    return this.programBuilder.gl;\n  }\n\n  get handle() {\n    return this.programBuilder.handle;\n  }\n\n  get shaders() {\n    return this.programBuilder.shaders;\n  }\n\n  /**\n   * @param {GLenum} shaderType\n   * @param {string} shaderSource\n   * @returns {ProgramInfoBuilder}\n   */\n  shader(shaderType, shaderSource) {\n    this.programBuilder.shader(shaderType, shaderSource);\n    return this;\n  }\n\n  /**\n   * @returns {ProgramInfo}\n   */\n  link() {\n    const handle = this.programBuilder.link();\n    return new ProgramInfo(this.gl, handle);\n  }\n}\n", "// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\nexport const ProgramUniformEnums = {\n  // WebGL1\n  FLOAT: 0x1406,\n  FLOAT_VEC2: 0x8b50,\n  FLOAT_VEC3: 0x8b51,\n  FLOAT_VEC4: 0x8b52,\n  INT: 0x1404,\n  INT_VEC2: 0x8b53,\n  INT_VEC3: 0x8b54,\n  INT_VEC4: 0x8b55,\n  BOOL: 0x8b56,\n  BOOL_VEC2: 0x8b57,\n  BOOL_VEC3: 0x8b58,\n  BOOL_VEC4: 0x8b59,\n  FLOAT_MAT2: 0x8b5a,\n  FLOAT_MAT3: 0x8b5b,\n  FLOAT_MAT4: 0x8b5c,\n  SAMPLER_2D: 0x8b5e,\n  SAMPLER_CUBE: 0x8b60,\n  // WebGL2\n  UNSIGNED_INT: 0x1405,\n  UNSIGNED_INT_VEC2: 0x8dc6,\n  UNSIGNED_INT_VEC3: 0x8dc7,\n  UNSIGNED_INT_VEC4: 0x8dc8,\n  FLOAT_MAT2x3: 0x8b65,\n  FLOAT_MAT2x4: 0x8b66,\n  FLOAT_MAT3x2: 0x8b67,\n  FLOAT_MAT3x4: 0x8b68,\n  FLOAT_MAT4x2: 0x8b69,\n  FLOAT_MAT4x3: 0x8b6a,\n  SAMPLER_3D: 0x8b5f,\n  SAMPLER_2D_SHADOW: 0x8b62,\n  SAMPLER_2D_ARRAY: 0x8dc1,\n  SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n  SAMPLER_CUBE_SHADOW: 0x8dc5,\n  INT_SAMPLER_2D: 0x8dca,\n  INT_SAMPLER_3D: 0x8dcb,\n  INT_SAMPLER_CUBE: 0x8dcc,\n  INT_SAMPLER_2D_ARRAY: 0x8dcf,\n  UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n  UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n  UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n};\n", "// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\nexport const ProgramAttributeEnums = {\n  // WebGL1\n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  FLOAT: 0x1406,\n  // WebGL2\n  HALF_FLOAT: 0x140b,\n};\n", "export const VERTEX_SHADER_SOURCE = /* glsl */`#version 300 es\n\nin vec3 a_position;\nin vec2 a_texcoord;\nin vec3 a_normal;\n\nout vec2 v_texcoord;\n\nuniform mat4 u_model;\nuniform mat4 u_view;\nuniform mat4 u_projection;\n\nvoid main() {\n    gl_Position = u_projection * u_view * u_model * vec4(a_position, 1.0);\n    v_texcoord = a_texcoord;\n}\n`;\n\nexport const FRAGMENT_SHADER_SOURCE = /* glsl */`#version 300 es\n\nprecision highp float;\n\nin vec2 v_texcoord;\n\nout vec4 out_FragColor;\n\nuniform vec4 u_color;\n\nvoid main() {\n    out_FragColor = u_color;\n}\n`;", "import { vec3 } from 'gl-matrix';\n\n/** @typedef {import('./Geometry.js').Geometry} Geometry */\n\n/**\n * SOURCE: https://github.com/mrdoob/three.js/blob/master/src/geometries/CylinderGeometry.js\n * \n * @param {Geometry} out\n * @param {number} radiusTop \n * @param {number} radiusBottom \n * @param {number} height \n * @param {number} radialSegments \n * @param {number} heightSegments \n * @param {boolean} openEnded \n * @param {number} thetaStart \n * @param {number} thetaLength \n * @returns {Geometry}\n */\nexport function createGeometryCylinder(out, radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n    addGeometryCylinderBody(out, radiusTop, radiusBottom, height, radialSegments, heightSegments, thetaStart, thetaLength);\n    if (!openEnded) {\n        if (radiusTop > 0) {\n            addGeometryCylinderCap(out, true, radiusTop, radiusBottom, height, radialSegments, thetaStart, thetaLength);\n        }\n        if (radiusBottom > 0) {\n            addGeometryCylinderCap(out, false, radiusTop, radiusBottom, height, radialSegments, thetaStart, thetaLength);\n        }\n    }\n    return out;\n}\n\n/**\n * @param {Geometry} out \n * @param {number} radiusTop \n * @param {number} radiusBottom \n * @param {number} height \n * @param {number} radialSegments \n * @param {number} heightSegments \n * @param {number} thetaStart \n * @param {number} thetaLength\n */\nfunction addGeometryCylinderBody(out, radiusTop, radiusBottom, height, radialSegments, heightSegments, thetaStart, thetaLength) {\n    const halfHeight = height / 2;\n    const slope = (radiusBottom - radiusTop) / height;\n    let indexArray = [];\n    let vec = vec3.create();\n    for(let y = 0; y <= heightSegments; ++y) {\n        let indexRow = [];\n        let v = y / heightSegments;\n        let r = v * (radiusBottom - radiusTop) + radiusTop;\n        for(let x = 0; x <= radialSegments; ++x) {\n            let u = x / radialSegments;\n            let theta = u * thetaLength + thetaStart;\n\n            let sinTheta = Math.sin(theta);\n            let cosTheta = Math.cos(theta);\n\n            vec[0] = r * sinTheta;\n            vec[1] = -v * height + halfHeight;\n            vec[2] = r * cosTheta;\n            out.position.push(vec[0], vec[1], vec[2]);\n\n            vec[0] = sinTheta;\n            vec[1] = slope;\n            vec[2] = cosTheta;\n            vec3.normalize(vec, vec);\n            out.normal.push(vec[0], vec[1], vec[2]);\n\n            vec[0] = u;\n            vec[1] = 1 - v;\n            out.texcoord.push(v[0], v[1]);\n\n            let i = ++out.vertexCount;\n            indexRow.push(i);\n        }\n        indexArray.push(indexRow);\n    }\n    for(let x = 0; x < radialSegments; ++x) {\n        for(let y = 0; y < heightSegments; ++y) {\n            let a = indexArray[y][x];\n            let b = indexArray[y + 1][x];\n            let c = indexArray[y + 1][x + 1];\n            let d = indexArray[y][x + 1];\n\n            out.indices.push(a, b, d);\n            out.indices.push(b, c, d);\n        }\n    }\n    return out;\n}\n\n/**\n * @param {Geometry} out \n * @param {boolean} isTop\n * @param {number} radiusTop \n * @param {number} radiusBottom \n * @param {number} radialSegments \n * @param {number} thetaStart \n * @param {number} thetaLength\n */\nfunction addGeometryCylinderCap(out, isTop, radiusTop, radiusBottom, height, radialSegments, thetaStart, thetaLength) {\n    const halfHeight = height / 2;\n    const sign = isTop ? 1 : -1;\n    const radius = isTop ? radiusTop : radiusBottom;\n\n    let centerIndexStart = out.vertexCount;\n    for(let x = 1; x <= radialSegments; ++x) {\n        out.position.push(0, halfHeight * sign, 0);\n        out.normal.push(0, sign, 0);\n        out.texcoord.push(0.5, 0.5);\n        ++out.vertexCount;\n    }\n\n    let vec = vec3.create();\n    let centerIndexEnd = out.vertexCount;\n    for(let x = 0; x <= radialSegments; ++x) {\n        let u = x / radialSegments;\n        let theta = u * thetaLength + thetaStart;\n        let cosTheta = Math.cos(theta);\n        let sinTheta = Math.sin(theta);\n\n        vec[0] = radius * sinTheta;\n        vec[1] = halfHeight * sign;\n        vec[2] = radius * cosTheta;\n        out.position.push(vec[0], vec[1], vec[2]);\n\n        out.normal.push(0, sign, 0);\n\n        vec[0] = (cosTheta * 0.5) + 0.5;\n        vec[1] = (sinTheta * 0.5 * sign) + 0.5;\n        out.texcoord.push(vec[0], vec[1]);\n\n        ++out.vertexCount;\n    }\n\n    for(let x = 0; x < radialSegments; ++x) {\n        let ca = centerIndexStart + x;\n        let cb = centerIndexEnd + x;\n        if (isTop) {\n            out.indices.push(cb, cb + 1, ca);\n        } else {\n            out.indices.push(cb + 1, cb, ca);\n        }\n    }\n    return out;\n}\n", "export class SystemManager {\n    constructor(...systems) {\n        this.systems = systems;\n        this.callbacks = [];\n    }\n\n    async load(ctx) {\n        for(let system of this.systems) {\n            let callback = await system(ctx);\n            this.callbacks.push(callback);\n        }\n        return this;\n    }\n\n    update(ctx) {\n        for(let system of this.systems) {\n            system(ctx);\n        }\n        return this;\n    }\n}\n\n/**\n * @template T\n */\nexport class SystemTopic {\n    constructor() {\n        this.queued = [];\n        this.messages = [];\n    }\n\n    /**\n     * @param {T} message \n     */\n    push(message) {\n        this.queued.push(message);\n    }\n\n    /**\n     * @param {T} message \n     */\n    pushImmediately(message) {\n        this.messages.push(message);\n    }\n\n    flush() {\n        this.messages.push(...this.queued);\n        this.queued.length = 0;\n        return this;\n    }\n\n    /**\n     * @param {number} [max]\n     * @return {Iterable<T>}\n     */\n    *poll(max = 1000) {\n        let iterations = 0;\n        while(iterations < max && this.messages.length > 0) {\n            let message = this.messages.shift();\n            yield message;\n            ++iterations;\n        }\n    }\n}\n", "/**\n * @typedef {Record<number, object>} ComponentInstanceMap\n * @typedef {Record<string, ComponentInstanceMap>} ComponentClassMap\n * @typedef {number} EntityId\n * @typedef {string} ComponentName\n */\n\n/**\n * @param {EntityManager} entityManager \n * @param {ComponentName} componentName\n * @returns {ComponentInstanceMap} A map of entity ids to component instance data.\n */\nfunction resolveComponentInstanceMap(entityManager, componentName) {\n    // @ts-ignore\n    let components = entityManager.components;\n    if (!(componentName in components)) {\n        /** @type {ComponentInstanceMap} */\n        let map = {};\n        components[componentName] = map;\n        return map;\n    } else {\n        return components[componentName];\n    }\n}\n\n/**\n * @template T\n * @param {EntityManager} entityManager \n * @param {EntityId} entityId \n * @param {ComponentClass<T>} componentClass\n * @returns {T}\n */\nfunction attachComponent(entityManager, entityId, componentClass) {\n    let componentName = componentClass.name;\n    let instanceMap = resolveComponentInstanceMap(entityManager, componentName);\n    let instance = componentClass.new();\n    instanceMap[entityId] = instance;\n    return instance;\n}\n\n/**\n * @template T\n * @param {EntityManager} entityManager \n * @param {EntityId} entityId \n * @param {ComponentClass<T>} componentClass \n * @returns {T}\n */\nfunction detachComponent(entityManager, entityId, componentClass) {\n    let componentName = componentClass.name;\n    let instanceMap = resolveComponentInstanceMap(entityManager, componentName);\n    let instance = instanceMap[entityId];\n    delete instanceMap[entityId];\n    return instance;\n}\n\nconst NEXT_AVAILABLE_ENTITY_ID = Symbol('nextAvailableEntityId');\n\n/**\n * @param {EntityManager} entityManager \n * @returns {EntityId}\n */\nfunction nextAvailableEntityId(entityManager) {\n    return ++entityManager[NEXT_AVAILABLE_ENTITY_ID];\n}\n\nexport class EntityManager {\n    constructor() {\n        /**\n         * @protected\n         * @type {ComponentClassMap}\n         */\n        this.components = {};\n        /** @type {EntityId} */\n        this[NEXT_AVAILABLE_ENTITY_ID] = 1;\n        /**\n         * @protected\n         * @type {Array<[string, ...any]>}\n         */\n        this.queue = [];\n    }\n\n    flush() {\n        while (this.queue.length > 0) {\n            let [type, ...args] = this.queue.shift();\n            switch (type) {\n                case 'attach': {\n                    let [entityId, componentClass] = args;\n                    this.attachImmediately(entityId, componentClass);\n                } break;\n                case 'detach': {\n                    let [entityId, componentClass] = args;\n                    this.detachImmediately(entityId, componentClass);\n                } break;\n            }\n        }\n    }\n\n    /**\n     * @param  {...ComponentClass<?>} componentClasses \n     * @returns {EntityId}\n     */\n    create(...componentClasses) {\n        let entityId = nextAvailableEntityId(this);\n        for (let componentClass of componentClasses) {\n            this.attach(entityId, componentClass);\n        }\n        return entityId;\n    }\n\n    /**\n     * @param {EntityId} entityId \n     */\n    delete(entityId) {\n        for (let instanceMap of Object.values(this.components)) {\n            if (entityId in instanceMap) {\n                delete instanceMap[entityId];\n            }\n        }\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass\n     */\n    attach(entityId, componentClass) {\n        this.queue.push(['attach', entityId, componentClass]);\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     * @returns {T}\n     */\n    attachImmediately(entityId, componentClass) {\n        return attachComponent(this, entityId, componentClass);\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass\n     */\n    detach(entityId, componentClass) {\n        this.queue.push(['detach', entityId, componentClass]);\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     * @returns {T}\n     */\n    detachImmediately(entityId, componentClass) {\n        return detachComponent(this, entityId, componentClass);\n    }\n\n    /**\n     * @template T\n     * @param {EntityId} entityId \n     * @param {ComponentClass<T>} componentClass \n     * @returns {T}\n     */\n    get(entityId, componentClass) {\n        let componentName = componentClass.name;\n        let instanceMap = resolveComponentInstanceMap(this, componentName);\n        if (instanceMap) {\n            return null;\n        } else {\n            return instanceMap[entityId] || null;\n        }\n    }\n}\n\n/**\n * @template {ComponentClass<any>[]} T\n */\nexport class EntityTemplate {\n    /**\n     * @param {T} componentClasses \n     */\n    constructor(...componentClasses) {\n        /** @private */\n        this.componentClasses = componentClasses;\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @returns {EntityId}\n     */\n    instantiate(entityManager) {\n        let entityId = nextAvailableEntityId(entityManager);\n        for (let componentClass of this.componentClasses) {\n            entityManager.attach(entityId, componentClass);\n        }\n        return entityId;\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @param {EntityId} entityId \n     */\n    destroy(entityManager, entityId) {\n        for (let componentClass of this.componentClasses) {\n            entityManager.detach(entityId, componentClass);\n        }\n    }\n}\n\n/**\n * @template {ComponentClass<any>[]} T\n * @typedef {{[K in keyof T]: T[K] extends ComponentClass<infer V> ? V : never}} ComponentInstancesOf<T>\n */\n\n/**\n * @template {ComponentClass<any>[]} T\n */\nexport class EntityQuery {\n    /**\n     * @param {T} selectors \n     */\n    constructor(...selectors) {\n        /** @private */\n        this.selectors = selectors;\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @returns {[EntityId, ...ComponentInstancesOf<T>]}\n     */\n    find(entityManager) {\n        let entities = this.findAll(entityManager);\n        let result = entities[Symbol.iterator]().next();\n        return result.value;\n    }\n\n    /**\n     * @param {EntityManager} entityManager \n     * @returns {Iterable<[EntityId, ...ComponentInstancesOf<T>]>}\n     */\n    *findAll(entityManager) {\n        if (this.selectors.length <= 0) {\n            return;\n        }\n        let componentClass = this.selectors[0];\n        let componentName = componentClass.name;\n        let instanceMap = resolveComponentInstanceMap(entityManager, componentName);\n        let result = /** @type {[EntityId, ...ComponentInstancesOf<T>]} */ (new Array(this.selectors.length + 1));\n        for (let key of Object.keys(instanceMap)) {\n            let entityId = Number(key);\n            let flag = true;\n            result[0] = entityId;\n            let index = 1;\n            for (let otherClass of this.selectors) {\n                if (componentClass === otherClass) {\n                    continue;\n                }\n                let otherName = otherClass.name;\n                let otherMap = resolveComponentInstanceMap(entityManager, otherName);\n                if (!(entityId in otherMap)) {\n                    flag = false;\n                    break;\n                }\n                result[index++] = otherMap[entityId];\n            }\n            if (flag) {\n                yield result;\n            }\n        }\n    }\n}\n\n/**\n * @template T\n */\nexport class ComponentClass {\n    /**\n     * @param {string} name \n     * @param {() => T} newCallback\n     * @param {(component: T) => void} [deleteCallback] \n     */\n    constructor(name, newCallback = () => null, deleteCallback = () => { }) {\n        this.name = name;\n        this.new = newCallback;\n        this.delete = deleteCallback;\n    }\n}\n", "export class Geometry {\n    constructor(vertexCount = 0, indices = [], position = [], texcoord = [], normal = []) {\n        this.vertexCount = vertexCount;\n        this.indices = indices;\n        this.position = position;\n        this.texcoord = texcoord;\n        this.normal = normal;\n    }\n}\n\n/**\n * @param {Geometry} out \n * @param  {...Geometry} geometries \n * @returns {Geometry}\n */\nexport function joinGeometries(out, ...geometries) {\n    let position = [];\n    let texcoord = [];\n    let normal = [];\n    let indices = [];\n    let indexOffset = 0;\n    for (let geometry of geometries) {\n        position.push(...geometry.position);\n        texcoord.push(...geometry.texcoord);\n        normal.push(...geometry.normal);\n        indices.push(...geometry.indices.map(value => value + indexOffset));\n        indexOffset += geometry.vertexCount;\n    }\n    out.position.push(...position);\n    out.texcoord.push(...texcoord);\n    out.normal.push(...normal);\n    out.indices.push(...indices);\n    out.vertexCount += indexOffset;\n    return out;\n}\n", "import '@milque/display';\nimport '@milque/input';\nimport '@milque/asset';\nimport './error.js';\n\nimport { INPUTS } from './Inputs.js';\nimport { ASSETS } from './Assets.js';\n\nimport { Toaster } from './toaster/index.js';\nimport { FirstPersonCameraController, PerspectiveCamera } from '@milque/scene';\n\nimport { BufferInfo, ProgramInfo } from '@milque/mogli';\nimport { mat4, vec3 } from 'gl-matrix';\n\nimport { VERTEX_SHADER_SOURCE, FRAGMENT_SHADER_SOURCE } from './ShaderBasic.js';\nimport { createGeometryCylinder } from './geometry/GeometryCylinder.js';\nimport { SystemManager } from './ecs/SystemManager.js';\nimport { ComponentClass, EntityManager } from './ecs/EntityManager.js';\nimport { Geometry } from './geometry/Geometry.js';\n\nwindow.addEventListener('DOMContentLoaded', main);\n\nasync function main() {\n    await Toaster.connectInputs(INPUTS);\n    await Toaster.preloadAssetPack();\n    await Toaster.preloadAssets(ASSETS);\n\n    let m = {\n        deltaTime: 0,\n        now: 0,\n        systemManager: new SystemManager(),\n        entityManager: new EntityManager(),\n    };\n    await Game(m);\n}\n\nasync function Game(m) {\n    const display = Toaster.getDisplayPort();\n    const input = Toaster.getInputPort();\n\n    /** @type {EntityManager} */\n    const ent = m.entityManager;\n    /** @type {SystemManager} */\n    const sys = m.systemManager;\n\n    const ab = input.getContext('axisbutton');\n    const gl = display.canvas.getContext('webgl2');\n    const camera = new PerspectiveCamera();\n    const controller = new FirstPersonCameraController();\n\n    display.canvas.addEventListener('click', () => {\n        display.focus();\n        display.canvas.requestPointerLock();\n    });\n\n    const BasicCylinder = createMesh(\n        createGeometryCylinder(new Geometry(), 0.5, 1, 10),\n        createMaterial([VERTEX_SHADER_SOURCE, FRAGMENT_SHADER_SOURCE], {\n            u_color: [1, 0., 0.5, 1],\n            u_model: mat4.create(),\n            u_view: camera.viewMatrix,\n            u_projection: camera.projectionMatrix,\n        })\n    );\n\n    let ctx = {};\n    display.addEventListener('frame', (/** @type {CustomEvent} */ e) => {\n        const { deltaTime, now } = e.detail;\n        const dt = deltaTime / 60;\n\n        ab.poll(now);\n        camera.resize(display.width, display.height);\n        updatePlayerInputs(dt, controller);\n        controller.apply(camera.viewMatrix);\n\n        let transform = BasicCylinder.uniforms.u_model;\n        mat4.rotateX(transform, transform, 0.01);\n\n        drawGame(ctx, gl, display, [BasicCylinder]);\n    });\n}\n\nfunction updatePlayerInputs(dt, controller) {\n    let forward = INPUTS.MoveForward.value - INPUTS.MoveBackward.value;\n    let right = INPUTS.MoveRight.value - INPUTS.MoveLeft.value;\n    let up = INPUTS.MoveDown.value - INPUTS.MoveUp.value;\n    controller.move(forward, right, up, dt);\n    let dx = INPUTS.CursorX.delta;\n    let dy = -INPUTS.CursorY.delta;\n    controller.look(dx, dy, dt);\n}\n\n\nfunction createMaterial(shaders, uniforms) {\n    return {\n        shaders,\n        uniforms,\n    };\n}\n\nfunction createMesh(geometry, material) {\n    return {\n        geometry,\n        material,\n    };\n}\n\nasync function bakeMesh(gl, mesh) {\n    const { geometry, material } = mesh;\n    const program = gl.createProgram();\n    await ProgramInfo.linkProgramShaders(gl, program, material.shaders);\n    const programInfo = ProgramInfo.createProgramInfo(gl, program);\n    const uniforms = material.uniforms;\n    const bufferInfo = BufferInfo.createVertexArrayInfo(gl, BufferInfo.createBufferInfo(gl, {\n        a_position: { buffer: geometry.position },\n        a_texcoord: { buffer: geometry.texcoord, size: 2 },\n        a_normal: { buffer: geometry.normal },\n    }, { buffer: geometry.indices }), [programInfo]);\n    return {\n        bufferInfo,\n        programInfo,\n        uniforms,\n    };\n}\n\n/**\n * @template T\n * @param {object} target \n * @param {string} name \n * @param {() => T} initCallback \n * @returns {T}\n */\nfunction resolve(target, name, initCallback = () => null) {\n    if (name in target) {\n        return target[name];\n    } else {\n        let result = initCallback();\n        target[name] = result;\n        return result;\n    }\n}\n\n/**\n * @param {object} ctx \n * @param {WebGLRenderingContextBase} gl \n * @param {Geometry} geometry \n * @returns {BufferInfo.BufferInfo}\n */\nfunction resolveBufferInfo(ctx, gl, geometry) {\n    let bufferInfos = resolve(ctx, 'bufferInfos', () => new Map());\n    if (bufferInfos.has(geometry)) {\n        return bufferInfos.get(geometry);\n    } else {\n        const bufferInfo = BufferInfo.createBufferInfo(gl, {\n            a_position: { buffer: geometry.position },\n            a_texcoord: { buffer: geometry.texcoord, size: 2 },\n            a_normal: { buffer: geometry.normal },\n        }, { buffer: geometry.indices });\n        bufferInfos.set(geometry, bufferInfo);\n        return bufferInfo;\n    }\n}\n\n/**\n * @param {object} ctx \n * @param {WebGLRenderingContextBase} gl \n * @param {Material} material \n * @returns {ProgramInfo.ProgramInfo}\n */\nfunction resolveProgramInfo(ctx, gl, material) {\n    let programInfos = resolve(ctx, 'bufferInfos', () => new Map());\n    if (programInfos.has(material)) {\n        return programInfos.get(material);\n    } else {\n        const program = gl.createProgram();\n        ProgramInfo.linkProgramShaders(gl, program, material.shaders);\n        const programInfo = ProgramInfo.createProgramInfo(gl, program);\n        programInfos.set(material, programInfo);\n        return programInfo;\n    }\n}\n\nfunction resolveMeshDrawInfo(ctx, gl, geometry, material) {\n    let bufferInfo = resolveBufferInfo(ctx, gl, geometry);\n    let programInfo = resolveProgramInfo(ctx, gl, material);\n    return {\n        bufferInfo,\n        programInfo,\n        uniforms: {\n            ...material.uniforms,\n        },\n    };\n}\n\nfunction getDrawInfo(ctx, gl, target) {\n    if (!target) {\n        return null;\n    }\n    if (target.geometry && target.material) {\n        return resolveMeshDrawInfo(ctx, target.geometry, target.material);\n    }\n    return null;\n}\n\nfunction drawGame(ctx, gl, display, targets = []) {\n    gl.viewport(0, 0, display.width, display.height);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    for(let drawInfo of targets.map(target => getDrawInfo(ctx, gl, target))) {\n        if (!drawInfo) {\n            continue;\n        }\n        const { programInfo, bufferInfo, uniforms } = drawInfo;\n        gl.useProgram(programInfo.handle);\n        ProgramInfo.bindProgramAttributes(gl, programInfo, bufferInfo);\n        ProgramInfo.bindProgramUniforms(gl, programInfo, uniforms);\n        BufferInfo.drawBufferInfo(gl, bufferInfo);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
