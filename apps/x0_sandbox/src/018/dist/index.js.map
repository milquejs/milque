{"version":3,"file":"index.js","sources":["../../../packages/milque/dist/esm/DisplayPort-9958052f.js","../../../packages/milque/dist/esm/InputContext-37718782.js","../../../packages/milque/dist/esm/index-bc7d3815.js","../src/main.js"],"sourcesContent":["const MODE_NOSCALE = 'noscale';\nconst MODE_CENTER = 'center';\nconst MODE_FIT = 'fit';\nconst MODE_STRETCH = 'stretch';\n\nconst DEFAULT_MODE = MODE_NOSCALE;\nconst DEFAULT_WIDTH = 300;\nconst DEFAULT_HEIGHT = 150;\n\nconst INNER_HTML = `\n<div class=\"container\">\n    <label class=\"hidden\" id=\"title\">display-port</label>\n    <label class=\"hidden\" id=\"fps\">00</label>\n    <label class=\"hidden\" id=\"dimension\">0x0</label>\n    <canvas></canvas>\n    <slot></slot>\n</div>`;\nconst INNER_STYLE = `\n:host {\n    display: inline-block;\n    color: #555555;\n}\n.container {\n    display: flex;\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\ncanvas {\n    background: #000000;\n    margin: auto;\n    image-rendering: pixelated;\n}\nlabel {\n    font-family: monospace;\n    color: currentColor;\n    position: absolute;\n}\n#title {\n    left: 0.5rem;\n    top: 0.5rem;\n}\n#fps {\n    right: 0.5rem;\n    top: 0.5rem;\n}\n#dimension {\n    left: 0.5rem;\n    bottom: 0.5rem;\n}\n.hidden {\n    display: none;\n}\n:host([debug]) .container {\n    outline: 6px dashed rgba(0, 0, 0, 0.1);\n    outline-offset: -4px;\n    background-color: rgba(0, 0, 0, 0.1);\n}\n:host([mode=\"${MODE_NOSCALE}\"]) canvas {\n    margin: 0;\n    top: 0;\n    left: 0;\n}\n:host([mode=\"${MODE_FIT}\"]), :host([mode=\"${MODE_CENTER}\"]), :host([mode=\"${MODE_STRETCH}\"]) {\n    width: 100%;\n    height: 100%;\n}\n:host([full]) {\n    width: 100vw!important;\n    height: 100vh!important;\n}\n:host([disabled]) {\n    display: none;\n}\nslot {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n\n    pointer-events: none;\n}\n::slotted(*) {\n    pointer-events: auto;\n}`;\n\nconst TEMPLATE_KEY = Symbol('template');\nconst STYLE_KEY = Symbol('style');\n\n/**\n * @version 1.2.2\n * @description\n * # Changelog\n * ## 1.2.2\n * - Removed 'contexttype'\n * ## 1.2.1\n * - Added 'contexttype' for getContext()\n * ## 1.2.0\n * - Moved template creation to static time\n * - Removed default export\n * ## 1.1.2\n * - Added clear()\n * - Added delta time for frame events\n * ## 1.1.1\n * - Added onframe and onresize attribute callbacks\n * - Added \"stretch\" mode\n * ## 1.1.0\n * - Changed \"topleft\" to \"noscale\"\n * - Changed default size to 640 x 480\n * - Changed \"center\" and \"fit\" to fill container instead of viewport\n * - Added \"full\" property to override and fill viewport\n * ## 1.0.2\n * - Moved default values to the top\n * ## 1.0.1\n * - Fixed scaling issues when dimensions do not match\n * ## 1.0.0\n * - Created DisplayPort\n * \n * @fires frame Every time a new frame is rendered.\n * @fires resize When the display is resized.\n */\nclass DisplayPort extends HTMLElement\n{\n    static get [TEMPLATE_KEY]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML;\n        Object.defineProperty(this, TEMPLATE_KEY, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, STYLE_KEY, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'width',\n            'height',\n            'disabled',\n            // Event handlers...\n            'onframe',\n            /*\n            // NOTE: Already handled by GlobalEventHandlers...\n            'onresize',\n            */\n            // NOTE: For debuggin purposes...\n            'debug',\n            // ...listening for built-in attribs...\n            'id',\n            'class',\n        ];\n    }\n\n    constructor()\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY].cloneNode(true));\n\n        this._canvasElement = this.shadowRoot.querySelector('canvas');\n\n        this._titleElement = this.shadowRoot.querySelector('#title');\n        this._fpsElement = this.shadowRoot.querySelector('#fps');\n        this._dimensionElement = this.shadowRoot.querySelector('#dimension');\n\n        this._animationRequestHandle = 0;\n        this._prevAnimationFrameTime = 0;\n\n        this._width = DEFAULT_WIDTH;\n        this._height = DEFAULT_HEIGHT;\n\n        this._onframe = null;\n        /*\n        // NOTE: Already handled by GlobalEventHandlers...\n        this._onresize = null;\n        */\n\n        this.update = this.update.bind(this);\n    }\n\n    get canvas() { return this._canvasElement; }\n    \n    /** @override */\n    connectedCallback()\n    {\n        if (!this.hasAttribute('mode')) this.mode = DEFAULT_MODE;\n        \n        // Allows this element to be focusable\n        if (!this.hasAttribute('tabindex')) this.setAttribute('tabindex', 0);\n\n        this.updateCanvasSize();\n        this.resume();\n    }\n\n    /** @override */\n    disconnectedCallback()\n    {\n        this.pause();\n    } \n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'width':\n                this._width = value;\n                break;\n            case 'height':\n                this._height = value;\n                break;\n            case 'disabled':\n                if (value)\n                {\n                    this.update(0);\n                    this.pause();\n                }\n                else\n                {\n                    this.resume();\n                }\n                break;\n            // Event handlers...\n            case 'onframe':\n                this.onframe = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            /*\n            // NOTE: Already handled by GlobalEventHandlers...\n            case 'onresize':\n                this.onresize = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            */\n            // NOTE: For debugging purposes...\n            case 'id':\n            case 'class':\n                this._titleElement.innerHTML = `display-port${this.className ? '.' + this.className : ''}${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n                break;\n            case 'debug':\n                this._titleElement.classList.toggle('hidden', value);\n                this._fpsElement.classList.toggle('hidden', value);\n                this._dimensionElement.classList.toggle('hidden', value);\n                break;\n        }\n    }\n\n    update(now)\n    {\n        this._animationRequestHandle = requestAnimationFrame(this.update);\n\n        this.updateCanvasSize();\n        const deltaTime = now - this._prevAnimationFrameTime;\n        this._prevAnimationFrameTime = now;\n\n        // NOTE: For debugging purposes...\n        if (this.debug)\n        {\n            // Update FPS...\n            const frames = deltaTime <= 0 ? '--' : String(Math.round(1000 / deltaTime)).padStart(2, '0');\n            if (this._fpsElement.innerText !== frames)\n            {\n                this._fpsElement.innerText = frames;\n            }\n\n            // Update dimensions...\n            if (this.mode === MODE_NOSCALE)\n            {\n                let result = `${this._width}x${this._height}`;\n                if (this._dimensionElement.innerText !== result)\n                {\n                    this._dimensionElement.innerText = result;\n                }\n            }\n            else\n            {\n                let result = `${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;\n                if (this._dimensionElement.innerText !== result)\n                {\n                    this._dimensionElement.innerText = result;\n                }\n            }\n        }\n\n        this.dispatchEvent(new CustomEvent('frame', {\n            detail: {\n                now,\n                prevTime: this._prevAnimationFrameTime,\n                deltaTime: deltaTime,\n                canvas: this._canvasElement,\n                /** @deprecated */\n                get context() { let ctx = this.canvas.getContext('2d'); ctx.imageSmoothingEnabled = false; return ctx; },\n            },\n            bubbles: false,\n            composed: true\n        }));\n    }\n\n    pause()\n    {\n        cancelAnimationFrame(this._animationRequestHandle);\n    }\n\n    resume()\n    {\n        this._animationRequestHandle = requestAnimationFrame(this.update);\n    }\n    \n    updateCanvasSize()\n    {\n        let clientRect = this.shadowRoot.host.getBoundingClientRect();\n        const clientWidth = clientRect.width;\n        const clientHeight = clientRect.height;\n\n        let canvas = this._canvasElement;\n        let canvasWidth = this._width;\n        let canvasHeight = this._height;\n\n        const mode = this.mode;\n\n        if (mode === MODE_STRETCH)\n        {\n            canvasWidth = clientWidth;\n            canvasHeight = clientHeight;\n        }\n        else if (mode !== MODE_NOSCALE)\n        {\n            let flag = clientWidth < canvasWidth || clientHeight < canvasHeight || mode === MODE_FIT;\n            if (flag)\n            {\n                let ratioX = clientWidth / canvasWidth;\n                let ratioY = clientHeight / canvasHeight;\n\n                if (ratioX < ratioY)\n                {\n                    canvasWidth = clientWidth;\n                    canvasHeight = canvasHeight * ratioX;\n                }\n                else\n                {\n                    canvasWidth = canvasWidth * ratioY;\n                    canvasHeight = clientHeight;\n                }\n            }\n        }\n\n        canvasWidth = Math.floor(canvasWidth);\n        canvasHeight = Math.floor(canvasHeight);\n\n        if (canvas.clientWidth !== canvasWidth || canvas.clientHeight !== canvasHeight)\n        {\n            canvas.width = this._width;\n            canvas.height = this._height;\n            canvas.style = `width: ${canvasWidth}px; height: ${canvasHeight}px`;\n            this.dispatchEvent(new CustomEvent('resize', { detail: { width: canvasWidth, height: canvasHeight }, bubbles: false, composed: true }));\n        }\n    }\n\n    /*\n    // NOTE: Already handled by GlobalEventHandlers...\n    get onresize() { return this._onresize; }\n    set onresize(value)\n    {\n        if (this._onresize) this.removeEventListener('resize', this._onresize);\n        this._onresize = value;\n        if (this._onresize) this.addEventListener('resize', value);\n    }\n    */\n\n    get onframe() { return this._onframe; }\n    set onframe(value)\n    {\n        if (this._onframe) this.removeEventListener('frame', this._onframe);\n        this._onframe = value;\n        if (this._onframe) this.addEventListener('frame', value);\n    }\n\n    get width() { return this._width; }\n    set width(value) { this.setAttribute('width', value); }\n\n    get height() { return this._height; }\n    set height(value) { this.setAttribute('height', value); }\n\n    get mode() { return this.getAttribute('mode'); }\n    set mode(value) { this.setAttribute('mode', value); }\n\n    get disabled() { return this.hasAttribute('disabled'); }\n    set disabled(value) { if (value) this.setAttribute('disabled', ''); else this.removeAttribute('disabled'); }\n\n    // NOTE: For debugging purposes...\n    get debug() { return this.hasAttribute('debug'); }\n    set debug(value) { if (value) this.setAttribute('debug', ''); else this.removeAttribute('debug'); }\n}\nwindow.customElements.define('display-port', DisplayPort);\n\nexport { DisplayPort as D };\n","class InputDevice\n{\n    /** @abstract */\n    static addInputEventListener(elementTarget, listener) {}\n    \n    /** @abstract */\n    static removeInputEventListener(elementTarget, listener) {}\n\n    constructor(eventTarget)\n    {\n        this.eventTarget = eventTarget;\n    }\n}\n\nclass Button\n{\n    constructor()\n    {\n        this.down = 0;\n        this.up = 0;\n        this.value = 0;\n\n        this.next = {\n            up: 0,\n            down: 0,\n        };\n    }\n\n    update(event, value)\n    {\n        if (event === 'down')\n        {\n            this.next.down = value;\n        }\n        else\n        {\n            this.next.up = value;\n        }\n    }\n\n    poll()\n    {\n        if (this.value)\n        {\n            if (this.up && !this.next.up)\n            {\n                this.value = 0;\n            }\n        }\n        else if (this.next.down)\n        {\n            this.value = 1;\n        }\n\n        this.down = this.next.down;\n        this.up = this.next.up;\n\n        this.next.down = 0;\n        this.next.up = 0;\n    }\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\nclass Axis\n{\n    constructor()\n    {\n        this.value = 0;\n    }\n\n    update(event, value)\n    {\n        this.value = value;\n    }\n\n    poll() {}\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\nclass AggregatedAxis extends Axis\n{\n    constructor()\n    {\n        super();\n\n        this.next = 0;\n    }\n\n    /** @override */\n    update(event, value)\n    {\n        this.next += value;\n    }\n\n    /** @override */\n    poll()\n    {\n        this.value = this.next;\n        this.next = 0;\n    }\n}\n\nconst KEYBOARD_CONTEXT_KEY = Symbol('keyboardEventContext');\n\nclass Keyboard extends InputDevice\n{\n    /** @override */\n    static addInputEventListener(eventTarget, listener)\n    {\n        let ctx;\n        if (!(KEYBOARD_CONTEXT_KEY in listener))\n        {\n            ctx = {\n                handler: listener,\n                target: eventTarget,\n                down: null,\n                up: null,\n                _keyEvent: {\n                    type: 'key',\n                    target: eventTarget,\n                    device: 'keyboard',\n                    key: null,\n                    event: null,\n                    value: null,\n                    control: false,\n                    shift: false,\n                    alt: false,\n                },\n            };\n    \n            let down = onKeyDown.bind(ctx);\n            let up = onKeyUp.bind(ctx);\n        \n            ctx.down = down;\n            ctx.up = up;\n        \n            listener[KEYBOARD_CONTEXT_KEY] = ctx;\n        }\n        else\n        {\n            ctx = listener[KEYBOARD_CONTEXT_KEY];\n        }\n\n        eventTarget.addEventListener('keyup', ctx.up);\n        eventTarget.addEventListener('keydown', ctx.down);\n    \n        return eventTarget;\n    }\n\n    /** @override */\n    static removeInputEventListener(eventTarget, listener)\n    {\n        if (KEYBOARD_CONTEXT_KEY in listener)\n        {\n            let ctx = listener[KEYBOARD_CONTEXT_KEY];\n        \n            eventTarget.removeEventListener('keyup', ctx.up);\n            eventTarget.removeEventListener('keydown', ctx.down);\n        }\n    \n        return eventTarget;\n    }\n\n    constructor(eventTarget, keyList = undefined)\n    {\n        super(eventTarget);\n\n        this._buttons = [];\n        this._managed = Array.isArray(keyList);\n\n        this.onManagedKeyEvent = this.onManagedKeyEvent.bind(this);\n        this.onUnmanagedKeyEvent = this.onUnmanagedKeyEvent.bind(this);\n\n        if (this._managed)\n        {\n            for(let key of keyList)\n            {\n                let button = new Button();\n                this[key] = button;\n                this._buttons.push(button);\n            }\n\n            Keyboard.addInputEventListener(eventTarget, this.onManagedKeyEvent);\n        }\n        else\n        {\n            Keyboard.addInputEventListener(eventTarget, this.onUnmanagedKeyEvent);\n        }\n    }\n\n    get Up() { return Math.min((this.ArrowUp || 0) + (this.KeyW || 0), 1); }\n    get Down() { return Math.min((this.ArrowDown || 0) + (this.KeyS || 0), 1); }\n    get Left() { return Math.min((this.ArrowLeft || 0) + (this.KeyA || 0), 1); }\n    get Right() { return Math.min((this.ArrowRight || 0) + (this.KeyD || 0), 1); }\n\n    destroy()\n    {\n        if (this._managed)\n        {\n            Keyboard.removeInputEventListener(this.eventTarget, this.onManagedKeyEvent);\n        }\n        else\n        {\n            Keyboard.removeInputEventListener(this.eventTarget, this.onUnmanagedKeyEvent);\n        }\n        this.eventTarget = null;\n    }\n\n    poll()\n    {\n        for(let button of this._buttons)\n        {\n            button.poll();\n        }\n        return this;\n    }\n\n    onUnmanagedKeyEvent(e)\n    {\n        if (!(e.key in this))\n        {\n            let button = new Button();\n            this[e.key] = button;\n            this._buttons.push(button);\n        }\n        \n        this[e.key].update(e.event, e.value);\n        \n        return true;\n    }\n\n    onManagedKeyEvent(e)\n    {\n        if (e.key in this)\n        {\n            this[e.key].update(e.event, e.value);\n\n            return true;\n        }\n    }\n}\n\nfunction onKeyDown(e)\n{\n    // Ignore repeat events.\n    if (e.repeat)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    let event = this._keyEvent;\n    // NOTE: You could use `e.key`, but we care about location rather than printable character.\n    event.key = e.code;\n    event.event = 'down';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n}\n\nfunction onKeyUp(e)\n{\n    let event = this._keyEvent;\n    // NOTE: You could use `e.key`, but we care about location rather than printable character.\n    event.key = e.code;\n    event.event = 'up';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n}\n\nconst MOUSE_CONTEXT_KEY = Symbol('mouseEventContext');\n\nclass Mouse extends InputDevice\n{\n    /** @override */\n    static addInputEventListener(eventTarget, listener)\n    {\n        let ctx;\n        if (!(MOUSE_CONTEXT_KEY in listener))\n        {\n            ctx = {\n                handler: listener,\n                target: eventTarget,\n                down: null,\n                up: null,\n                move: null,\n                contextmenu: null,\n                _down: false,\n                _keyEvent: {\n                    type: 'key',\n                    target: eventTarget,\n                    device: 'mouse',\n                    key: null,\n                    event: null,\n                    value: null,\n                },\n                _posEvent: {\n                    type: 'pos',\n                    target: eventTarget,\n                    device: 'mouse',\n                    key: 'pos',\n                    event: 'move',\n                    x: 0, y: 0, dx: 0, dy: 0,\n                },\n            };\n    \n            let down = onMouseDown.bind(ctx);\n            let up = onMouseUp.bind(ctx);\n            let move = onMouseMove.bind(ctx);\n            let contextmenu = onContextMenu.bind(ctx);\n        \n            ctx.down = down;\n            ctx.up = up;\n            ctx.move = move;\n            ctx.contextmenu = contextmenu;\n        \n            listener[MOUSE_CONTEXT_KEY] = ctx;\n        }\n        else\n        {\n            ctx = listener[MOUSE_CONTEXT_KEY];\n        }\n    \n        eventTarget.addEventListener('mousedown', ctx.down);\n        document.addEventListener('mouseup', ctx.up);\n        eventTarget.addEventListener('contextmenu', ctx.contextmenu);\n        document.addEventListener('mousemove', ctx.move);\n    \n        return eventTarget;\n    }\n\n    /** @override */\n    static removeInputEventListener(eventTarget, listener)\n    {\n        if (MOUSE_CONTEXT_KEY in listener)\n        {\n            let ctx = listener[MOUSE_CONTEXT_KEY];\n        \n            eventTarget.removeEventListener('mousedown', ctx.down);\n            document.removeEventListener('mouseup', ctx.up);\n            eventTarget.removeEventListener('contextmenu', ctx.contextmenu);\n            document.removeEventListener('mousemove', ctx.move);\n        }\n    \n        return eventTarget;\n    }\n\n    constructor(eventTarget)\n    {\n        super(eventTarget);\n\n        this.x = new Axis();\n        this.y = new Axis();\n        this.dx = new AggregatedAxis();\n        this.dy = new AggregatedAxis();\n        this.Button0 = new Button();\n        this.Button1 = new Button();\n        this.Button2 = new Button();\n        this.Button3 = new Button();\n        this.Button4 = new Button();\n\n        this.onMouseEvent = this.onMouseEvent.bind(this);\n\n        Mouse.addInputEventListener(eventTarget, this.onMouseEvent);\n    }\n\n    get Left() { return this.Button0; }\n    get Middle() { return this.Button1; }\n    get Right() { return this.Button2; }\n\n    destroy()\n    {\n        Mouse.removeInputEventListener(this.eventTarget, this.onMouseEvent);\n        this.eventTarget = null;\n    }\n\n    poll()\n    {\n        this.x.poll();\n        this.y.poll();\n        this.dx.poll();\n        this.dy.poll();\n        this.Button0.poll();\n        this.Button1.poll();\n        this.Button2.poll();\n        this.Button3.poll();\n        this.Button4.poll();\n\n        return this;\n    }\n\n    onMouseEvent(e)\n    {\n        let { key, event } = e;\n        switch(key)\n        {\n            case 0:\n                this.Button0.update(event, e.value);\n                break;\n            case 1:\n                this.Button1.update(event, e.value);\n                break;\n            case 2:\n                this.Button2.update(event, e.value);\n                break;\n            case 3:\n                this.Button3.update(event, e.value);\n                break;\n            case 4:\n                this.Button4.update(event, e.value);\n                break;\n            case 'pos':\n                this.x.update(event, e.x);\n                this.y.update(event, e.y);\n                this.dx.update(event, e.dx);\n                this.dy.update(event, e.dy);\n                \n                // Cannot consume a position event.\n                return;\n        }\n\n        return true;\n    }\n}\n\nfunction onMouseDown(e)\n{\n    this._down = true;\n\n    let event = this._keyEvent;\n    event.key = e.button;\n    event.event = 'down';\n    event.value = 1;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        if (document.activeElement === this.target)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n}\n\nfunction onMouseUp(e)\n{\n    if (this._down)\n    {\n        this._down = false;\n\n        let event = this._keyEvent;\n        event.key = e.button;\n        event.event = 'up';\n        event.value = 1;\n        \n        let result = this.handler.call(undefined, event);\n    \n        if (result)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n}\n\nfunction onMouseMove(e)\n{\n    let element = this.target;\n    let { clientWidth, clientHeight } = element;\n\n    let rect = this.target.getBoundingClientRect();\n\n    let dx = e.movementX / clientWidth;\n    let dy = e.movementY / clientHeight;\n    let x = (e.clientX - rect.left) / clientWidth;\n    let y = (e.clientY - rect.top) / clientHeight;\n\n    let event = this._posEvent;\n    event.x = x;\n    event.y = y;\n    event.dx = dx;\n    event.dy = dy;\n\n    let result = this.handler.call(undefined, event);\n\n    if (typeof result !== 'undefined')\n    {\n        throw new Error(`Return value must be 'undefined'. Mouse position and movement events cannot be consumed.`);\n    }\n}\n\nfunction onContextMenu(e)\n{\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n}\n\nconst INNER_HTML = `\n<kbd></kbd>`;\nconst INNER_STYLE = `\n:host {\n    display: inline-block;\n}\nkbd {\n    background-color: #EEEEEE;\n    border-radius: 3px;\n    border: 1px solid #B4B4B4;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 2px 0 0 rgba(255, 255, 255, .7) inset;\n    color: #333333;\n    font-size: 0.85em;\n    font-weight: 700;\n    line-height: 1;\n    padding: 2px 4px;\n    white-space: nowrap;\n}\n`;\n\nconst TEMPLATE_KEY = Symbol('template');\nconst STYLE_KEY = Symbol('style');\n\nclass InputKey extends HTMLElement\n{\n    static toInputMap(nodes)\n    {\n        let inputMap = {};\n        \n        for(let node of nodes)\n        {\n            if (node instanceof InputKey)\n            {\n                let inputName = node.input;\n    \n                let keys;\n                if (inputName in inputMap)\n                {\n                    keys = inputMap[inputName];\n                }\n                else\n                {\n                    inputMap[inputName] = keys = [];\n                }\n    \n                let inputType = node.type;\n                switch(inputType)\n                {\n                    case 'action':\n                        keys.push({\n                            key: node.key,\n                            event: node.event,\n                        });\n                        break;\n                    case 'range':\n                        keys.push({\n                            key: node.key,\n                            scale: node.scale,\n                        });\n                        break;\n                    default:\n                        throw new Error('Unknown input type.');\n                }\n            }\n        }\n\n        return inputMap;\n    }\n\n    static get [TEMPLATE_KEY]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML;\n        Object.defineProperty(this, TEMPLATE_KEY, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, STYLE_KEY, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'input',\n            'key',\n            'scale',\n            'event'\n        ];\n    }\n\n    constructor()\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY].cloneNode(true));\n\n        this.keyElement = this.shadowRoot.querySelector('kbd');\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'key':\n                this.keyElement.textContent = value;\n                break;\n        }\n    }\n\n    get type() { return this.hasAttribute('event') ? 'action' : 'range'; }\n\n    get input() { return this.getAttribute('input'); }\n    set input(value) { this.setAttribute('input', value); }\n\n    get key() { return this.getAttribute('key'); }\n    set key(value) { this.setAttribute('key', value); }\n\n    get scale() { return Number(this.getAttribute('scale')); }\n    set scale(value) { this.setAttribute('scale', value); }\n\n    get event() { return this.getAttribute('event'); }\n    set event(value) { this.setAttribute('event', value); }\n}\nwindow.customElements.define('input-key', InputKey);\n\nclass Input\n{\n    constructor(inputName, inputType)\n    {\n        this.inputName = inputName;\n        this.inputType = inputType;\n        \n        this.value = 0;\n\n        this._onchange = null;\n        this._eventListeners = new Map();\n    }\n\n    update(value)\n    {\n        if (this.value !== value)\n        {\n            this.value = value;\n            \n            if (this._eventListeners.has('change'))\n            {\n                for(let listener of this._eventListeners.get('change'))\n                {\n                    listener.call(undefined, this);\n                }\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    get onchange()\n    {\n        return this._onchange;\n    }\n\n    set onchange(callback)\n    {\n        if (this._onchange)\n        {\n            this.removeEventListener('change', this._onchange);\n        }\n\n        this._onchange = callback;\n        this.addEventListener('change', callback);\n    }\n\n    addEventListener(event, listener)\n    {\n        if (this._eventListeners.has(event))\n        {\n            let listeners = this._eventListeners.get(event);\n            listeners.push(listener);\n        }\n        else\n        {\n            this._eventListeners.set(event, [ listener ]);\n        }\n    }\n\n    removeEventListener(event, listener)\n    {\n        if (this._eventListeners.has(event))\n        {\n            let listeners = this._eventListeners.get(event);\n            listeners.splice(listeners.indexOf(listener), 1);\n        }\n    }\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\n// TODO: Maybe this should be InputMap.getContext()?\n\nconst INNER_HTML$1 = `\n<table>\n    <thead>\n        <tr class=\"header\">\n            <th id=\"title\" colspan=3>input-context</th>\n            <th id=\"poll\">&nbsp;</th>\n        </tr>\n        <tr class=\"hint\">\n            <th>input</th>\n            <th>key</th>\n            <th>mod</th>\n            <th>value</th>\n        </tr>\n    </thead>\n    <tbody>\n    </tbody>\n</table>\n<slot></slot>`;\nconst INNER_STYLE$1 = `\n:host {\n    display: inline-block;\n}\nslot {\n    display: none;\n}\ntable {\n    border-collapse: collapse;\n}\ntable, th, td {\n    border: 1px solid gray;\n}\n#poll {\n    position: relative;\n    font-size: 0.9em;\n}\n#poll:after {\n    content: \"(poll)\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: -1;\n    opacity: 0.1;\n    font-family: monospace;\n    letter-spacing: 3px;\n    overflow: hidden;\n}\n.hint > th {\n    font-size: 0.5em;\n    font-family: monospace;\n    padding: 0 10px;\n    letter-spacing: 3px;\n    background-color: #AAA;\n    color: #666666;\n}\nth, td {\n    padding: 5px 10px;\n}\ntd {\n    text-align: center;\n}\nkbd {\n    display: inline-block;\n    background-color: #EEEEEE;\n    border-radius: 3px;\n    border: 1px solid #B4B4B4;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 2px 0 0 rgba(255, 255, 255, .7) inset;\n    color: #333333;\n    font-size: 0.85em;\n    font-weight: 700;\n    line-height: 1;\n    padding: 2px 4px;\n    white-space: nowrap;\n}\noutput {\n    font-family: monospace;\n    border-radius: 0.3em;\n    padding: 3px;\n}\n.flash {\n    animation: fadein 4s;\n}\n@keyframes fadein {\n    0%, 10% { background-color: rgba(0, 0, 255, 0.3); }\n    100% { background-color: rgba(0, 0, 255, 0); }\n}\n`;\n\nclass InputKeyPair\n{\n    constructor(keyName, keyEvent, scale)\n    {\n        this.keyName = keyName;\n        this.keyEvent = keyEvent;\n        this.scale = scale;\n\n        this.value = 0;\n    }\n\n    consumeKey()\n    {\n        this.value = 0;\n    }\n\n    updateKey(e, keyName)\n    {\n        // NOTE: This condition is only really used for parameterized key events.\n        if (keyName === this.keyName)\n        {\n            if (this.keyEvent)\n            {\n                if (this.keyEvent === e.event)\n                {\n                    this.value = e.value * this.scale;\n                    return true;\n                }\n            }\n            else\n            {\n                switch(e.event)\n                {\n                    case 'down':\n                        this.value = this.scale;\n                        return true;\n                    case 'up':\n                        this.value = 0;\n                        return true;\n                    default:\n                        this.value = e.value * this.scale;\n                        return;\n                }\n            }\n        }\n    }\n}\n\nconst NONE_POLL_TEXT = '✗';\nconst ACTIVE_POLL_TEXT = '✓';\n\nconst TEMPLATE_KEY$1 = Symbol('template');\nconst STYLE_KEY$1 = Symbol('style');\n\nconst POLL_WARNING_TIME = 3000;\n\nclass InputContext extends HTMLElement\n{\n    static get [TEMPLATE_KEY$1]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML$1;\n        Object.defineProperty(this, TEMPLATE_KEY$1, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY$1]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE$1;\n        Object.defineProperty(this, STYLE_KEY$1, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'for',\n            'strict',\n            'onattach',\n            'ondetach',\n            // ...listening for built-in attribs...\n            'id',\n            'class',\n        ];\n    }\n\n    constructor(inputMap = null)\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY$1].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY$1].cloneNode(true));\n\n        this._onattach = null;\n        this._ondetach = null;\n\n        this._titleElement = this.shadowRoot.querySelector('#title');\n        this._pollElement = this.shadowRoot.querySelector('#poll');\n\n        this._tableBody = this.shadowRoot.querySelector('tbody');\n        this._children = this.shadowRoot.querySelector('slot');\n        this._tableInputs = {};\n\n        this._lastPollTime = 0;\n        this._pollWarningTimeoutHandle = 0;\n        this._animationFrameHandle = 0;\n\n        this._inputTarget = null;\n        this._inputMap = inputMap;\n        this._inputs = {};\n        this._inputKeys = {};\n        this._keys = {};\n\n        this.onInputEvent = this.onInputEvent.bind(this);\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n\n        if (inputMap)\n        {\n            parseInputMapping(this, inputMap);\n        }\n    }\n\n    /** @override */\n    connectedCallback()\n    {\n        if (!this.hasAttribute('for')) this.setAttribute('for', '');\n\n        // Setup keys and inputs from the input mapping\n        if (!this._inputMap)\n        {\n            this._inputMap = {};\n\n            const childInputMap = InputKey.toInputMap(this._children.assignedNodes());\n            const inputMapSource = this.src;\n    \n            if (inputMapSource)\n            {\n                fetch(inputMapSource)\n                    .then(blob => blob.json())\n                    .then(data => {\n                        this._inputMap = { ...data, ...childInputMap };\n                        parseInputMapping(this, this._inputMap);\n                    });\n            }\n            else\n            {\n                this._inputMap = { ...childInputMap };\n                parseInputMapping(this, this._inputMap);\n            }\n        }\n\n        // Check to see if polling cause it is easy to forget it :P\n        this._lastPollTime = 0;\n        this._pollWarningTimeoutHandle = setTimeout(() => {\n            if (this._lastPollTime <= 0)\n            {\n                this._pollElement.textContent = NONE_POLL_TEXT;\n                console.warn('[INPUT] No input updated. Did you forget to poll() the input context?');\n            }\n            else\n            {\n                this._pollElement.textContent = ACTIVE_POLL_TEXT;\n            }\n        }, POLL_WARNING_TIME);\n\n        this._animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    /** @override */\n    disconnectedCallback()\n    {\n        cancelAnimationFrame(this._animationFrameHandle);\n        clearTimeout(this._pollWarningTimeoutHandle);\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'for':\n                let target;\n                if (value)\n                {\n                    target = document.getElementById(value);\n                }\n                else\n                {\n                    target = document.querySelector('display-port') || document.querySelector('canvas');\n                }\n\n                if (this._inputTarget)\n                {\n                    this.detach();\n                }\n\n                if (target)\n                {\n                    this.attach(target);\n                }\n                break;\n            // Event handlers...\n            case 'onattach':\n                this.onattach = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            case 'ondetach':\n                this.ondetach = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            // NOTE: For debugging purposes...\n            case 'id':\n            case 'class':\n                this._titleElement.innerHTML = `input-context${this.className ? '.' + this.className : ''}${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n                break;\n        }\n    }\n\n    get src() { return this.getAttribute('src'); }\n    set src(value) { this.setAttribute('src', value); }\n\n    get for() { return this.getAttribute('for'); }\n    set for(value) { this.setAttribute('for', value); }\n\n    get strict() { return this.hasAttribute('strict'); }\n    set strict(value) { if (value) this.setAttribute('strict', ''); else this.removeAttribute('strict'); }\n\n    get auto() { return this.hasAttribute('auto'); }\n    set auto(value) { if (value) this.setAttribute('auto', ''); else this.removeAttribute('auto'); }\n\n    get onattach() { return this._onattach; }\n    set onattach(value)\n    {\n        if (this._onattach) this.removeEventListener('attach', this._onattach);\n        this._onattach = value;\n        if (this._onattach) this.addEventListener('attach', value);\n    }\n\n    get ondetach() { return this._ondetach; }\n    set ondetach(value)\n    {\n        if (this._ondetach) this.removeEventListener('detach', this._ondetach);\n        this._ondetach = value;\n        if (this._ondetach) this.addEventListener('detach', value);\n    }\n\n    attach(targetElement)\n    {\n        if (!targetElement)\n        {\n            throw new Error('Cannot attach input context to null.');\n        }\n\n        if (this._inputTarget)\n        {\n            if (this._inputTarget !== targetElement)\n            {\n                throw new Error('Input context already attached to another element.');\n            }\n            else\n            {\n                // It's already attached.\n                return this;\n            }\n        }\n\n        let target = targetElement;\n        if (target)\n        {\n            if (target.canvas)\n            {\n                Keyboard.addInputEventListener(target, this.onInputEvent);\n                Mouse.addInputEventListener(target.canvas, this.onInputEvent);\n            }\n            else\n            {\n                Keyboard.addInputEventListener(target, this.onInputEvent);\n                Mouse.addInputEventListener(target, this.onInputEvent);\n            }\n\n            this.dispatchEvent(new CustomEvent('attach', {\n                composed: true, bubbles: false, detail: { eventTarget: target, inputCallback: this.onInputEvent }\n            }));\n        }\n\n        this._inputTarget = target;\n        return this;\n    }\n\n    detach()\n    {\n        if (!this._inputTarget) return this;\n\n        let target = this._inputTarget;\n        this._inputTarget = null;\n\n        if (target.canvas)\n        {\n            Keyboard.removeInputEventListener(target, this.onInputEvent);\n            Mouse.removeInputEventListener(target.canvas, this.onInputEvent);\n        }\n        else\n        {\n            Keyboard.removeInputEventListener(target, this.onInputEvent);\n            Mouse.removeInputEventListener(target, this.onInputEvent);\n        }\n\n        this.dispatchEvent(new CustomEvent('detach', {\n            composed: true, bubbles: false, detail: { eventTarget: target, inputCallback: this.onInputEvent }\n        }));\n\n        return this;\n    }\n\n    poll()\n    {\n        this._lastPollTime = performance.now();\n\n        // Update all inputs to the current key's values.\n        for(let inputName in this._inputs)\n        {\n            let input = this._inputs[inputName];\n            let inputType = input.inputType;\n            switch(inputType)\n            {\n                case 'action':\n                    // Action should be any key value.\n                    let consumed = false;\n                    for(let inputKey of this._inputKeys[inputName])\n                    {\n                        let value = inputKey.value;\n                        if (value)\n                        {\n                            input.update(value, inputKey);\n                            inputKey.consumeKey();\n                            consumed = true;\n                            break;\n                        }\n                    }\n                    if (!consumed)\n                    {\n                        input.update(0, null);\n                    }\n                    break;\n                case 'range':\n                    // Range should be sum of keys.\n                    let value = 0;\n                    for(let inputKey of this._inputKeys[inputName])\n                    {\n                        value += inputKey.value;\n                    }\n                    input.update(value, null);\n                    break;\n                default:\n                    throw new Error('Unknown input type.');\n            }\n        }\n    }\n\n    onInputEvent(e)\n    {\n        let eventType = e.type;\n        switch(eventType)\n        {\n            case 'key':\n                {\n                    const keyName = e.device + ':' + e.key;\n                    if (keyName in this._keys)\n                    {\n                        let flag = false;\n                        for(let key of this._keys[keyName])\n                        {\n                            if (key.updateKey(e, keyName))\n                            {\n                                flag = true;\n                            }\n                        }\n                        if (flag)\n                        {\n                            return true;\n                        }\n                    }\n                }\n                break;\n            case 'pos':\n                {\n                    const params = [\n                        'x',\n                        'y',\n                        'dx',\n                        'dy'\n                    ];\n                    for(let param of params)\n                    {\n                        e.value = e[param];\n                        const keyName = e.device + ':' + e.key + '.' + param;\n                        if (keyName in this._keys)\n                        {\n                            let flag = false;\n                            for(let key of this._keys[keyName])\n                            {\n                                if (key.updateKey(e, keyName))\n                                {\n                                    flag = true;\n                                }\n                            }\n                            if (flag)\n                            {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                break;\n            default:\n                throw new Error(`Unknown input event type '${eventType}'.`);\n        }\n    }\n\n    onAnimationFrame(now)\n    {\n        this._animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n\n        // If enabled, do auto-polling\n        if (this.auto) this.poll();\n\n        // Update all inputs to the current key's values.\n        for(let inputName in this._inputs)\n        {\n            let input = this._inputs[inputName];\n            let result;\n            if (input.value)\n            {\n                result = Number(input.value).toFixed(2);\n            }\n            else\n            {\n                result = 0;\n            }\n            let element = this._tableInputs[inputName];\n            if (element.textContent != result)\n            {\n                element.textContent = result;\n                let parent = element.parentNode;\n                element.parentNode.removeChild(element);\n                parent.appendChild(element);\n            }\n        }\n    }\n\n    getInput(inputName)\n    {\n        if (inputName in this._inputs)\n        {\n            return this._inputs[inputName];\n        }\n        else if (!this.strict)\n        {\n            let result = new Input(inputName, 'range');\n            this._inputs[inputName] = result;\n            return result;\n        }\n        else\n        {\n            throw new Error(`Cannot find input with name '${inputName}'.`);\n        }\n    }\n\n    getInputValue(inputName)\n    {\n        if (inputName in this._inputs)\n        {\n            return this._inputs[inputName].value;\n        }\n        else if (!this.strict)\n        {\n            return 0;\n        }\n        else\n        {\n            throw new Error(`Cannot find input with name '${inputName}'.`);\n        }\n    }\n}\nwindow.customElements.define('input-context', InputContext);\n\nfunction parseInputMapping(inputContext, inputMapping)\n{\n    for(let inputName in inputMapping)\n    {\n        let inputOptions = inputMapping[inputName];\n        if (Array.isArray(inputOptions))\n        {\n            for(let inputOption of inputOptions)\n            {\n                parseInputOption(inputContext, inputName, inputOption);\n                if (typeof inputOption === 'string')\n                {\n                    inputOption = { key: inputOption, event: 'down' };\n                }\n                appendInputOption(inputContext, inputName, inputOption);\n            }\n        }\n        else\n        {\n            parseInputOption(inputContext, inputName, inputOptions);\n            if (typeof inputOptions === 'string')\n            {\n                inputOptions = { key: inputOptions, event: 'down' };\n            }\n            appendInputOption(inputContext, inputName, inputOptions);\n        }\n    }\n}\n\nfunction evaluateInputOptionType(inputOption)\n{\n    if (typeof inputOption === 'object')\n    {\n        if ('type' in inputOption)\n        {\n            return inputOption.type;\n        }\n        else if ('scale' in inputOption)\n        {\n            return 'range';\n        }\n        else if ('event' in inputOption)\n        {\n            return 'action';\n        }\n        else\n        {\n            throw new Error(`Missing 'scale' or 'event' for input option '${inputName}'.`);\n        }\n    }\n    else if (typeof inputOption === 'string')\n    {\n        return 'action';\n    }\n    else\n    {\n        throw new Error('Invalid type for input mapping option.');\n    }\n}\n\nfunction appendInputOption(inputContext, inputName, inputOption)\n{\n    let row = document.createElement('tr');\n    \n    // Name\n    {\n        let inputCell = document.createElement('td');\n        inputCell.textContent = inputName;\n        inputCell.classList.add('name');\n        row.appendChild(inputCell);\n    }\n\n    // Key\n    {\n        let keyCell = document.createElement('td');\n        keyCell.classList.add('key');\n        let keyLabel = document.createElement('kbd');\n        keyLabel.textContent = inputOption.key;\n        keyCell.appendChild(keyLabel);\n        row.appendChild(keyCell);\n    }\n\n    // Mods\n    {\n        let modCell = document.createElement('td');\n        let modSample = document.createElement('samp');\n        let inputType = evaluateInputOptionType(inputOption);\n        switch(inputType)\n        {\n            case 'action':\n                modSample.textContent = inputOption.event;\n                break;\n            case 'range':\n                modSample.textContent = Number(inputOption.scale).toFixed(2);\n                break;\n            default:\n                modSample.textContent = '<?>';\n        }\n        modCell.classList.add('mod');\n        modCell.appendChild(modSample);\n        row.appendChild(modCell);\n    }\n\n    // Value\n    if (!(inputName in inputContext._tableInputs))\n    {\n        let outputCell = document.createElement('td');\n        let outputValue = document.createElement('output');\n        outputValue.textContent = 0;\n        outputValue.classList.add('flash');\n        outputCell.classList.add('value');\n        outputCell.appendChild(outputValue);\n        row.appendChild(outputCell);\n        inputContext._tableInputs[inputName] = outputValue;\n    }\n    else\n    {\n        let outputCell = document.createElement('td');\n        outputCell.classList.add('value');\n        row.appendChild(outputCell);\n    }\n\n    inputContext._tableBody.appendChild(row);\n}\n\nfunction parseInputOption(inputContext, inputName, inputOption)\n{\n    let inputType = evaluateInputOptionType(inputOption);\n    switch(inputType)\n    {\n        case 'action':\n            if (typeof inputOption === 'string')\n            {\n                parseActionOption(inputContext, inputName, { key: inputOption, event: 'down' });\n            }\n            else\n            {\n                parseActionOption(inputContext, inputName, inputOption);\n            }\n            break;\n        case 'range':\n            parseRangeOption(inputContext, inputName, inputOption);\n            break;\n        default:\n            throw new Error(`Unknown input type '${inputType}'.`);\n    }\n}\n\nfunction parseRangeOption(inputContext, inputName, inputOption)\n{\n    const { key, scale } = inputOption;\n\n    // Update _inputs, _inputKeys, _keys\n    let input;\n    let inputKeys;\n    if (inputName in inputContext._inputs)\n    {\n        input = inputContext._inputs[inputName];\n        inputKeys = inputContext._inputKeys[inputName];\n\n        if (input.inputType !== 'range')\n        {\n            throw new Error(`Cannot register mismatched 'range' type input for '${input.inputType}' type input '${inputName}'.`);\n        }\n    }\n    else\n    {\n        input = new Input(inputName, 'range');\n        inputKeys = [];\n\n        inputContext._inputs[inputName] = input;\n        inputContext._inputKeys[inputName] = inputKeys;\n    }\n\n    let keys;\n    if (key in inputContext._keys)\n    {\n        keys = inputContext._keys[key];\n    }\n    else\n    {\n        keys = [];\n        inputContext._keys[key] = keys;\n    }\n    \n    let inputKey = new InputKeyPair(key, null, scale);\n    keys.push(inputKey);\n    inputKeys.push(inputKey);\n}\n\nfunction parseActionOption(inputContext, inputName, inputOption)\n{\n    const { key, event } = inputOption;\n\n    // Update _inputs, _inputKeys, _keys\n    let input;\n    let inputKeys;\n    if (inputName in inputContext._inputs)\n    {\n        input = inputContext._inputs[inputName];\n        inputKeys = inputContext._inputKeys[inputName];\n\n        if (input.inputType !== 'action')\n        {\n            throw new Error(`Cannot register mismatched 'action' type input for '${input.inputType}' type input '${inputName}'.`);\n        }\n    }\n    else\n    {\n        input = new Input(inputName, 'action');\n        inputKeys = [];\n\n        inputContext._inputs[inputName] = input;\n        inputContext._inputKeys[inputName] = inputKeys;\n    }\n\n    let keys;\n    if (key in inputContext._keys)\n    {\n        keys = inputContext._keys[key];\n    }\n    else\n    {\n        keys = [];\n        inputContext._keys[key] = keys;\n    }\n    \n    let inputKey = new InputKeyPair(key, event, 1);\n    keys.push(inputKey);\n    inputKeys.push(inputKey);\n}\n\nexport { InputContext as I, Keyboard as K, Mouse as M, InputKey as a };\n","async function loadImage(filepath, opts)\n{\n    return new Promise((resolve, reject) => {\n        let img = new Image();\n        img.addEventListener('load', () => {\n            resolve(img);\n        });\n        img.addEventListener('error', ev => {\n            reject(ev);\n        });\n        img.src = filepath;\n    });\n}\n\nvar ImageLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadImage: loadImage\n});\n\nasync function loadText(filepath, opts)\n{\n    let result = await fetch(filepath);\n    return result.text();\n}\n\nvar TextLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadText: loadText\n});\n\nasync function loadBytes(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let buffer = await result.arrayBuffer();\n    return buffer;\n}\n\nvar ByteLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadBytes: loadBytes\n});\n\nasync function loadJSON(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let json = await result.json();\n    return json;\n}\n\nvar JSONLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadJSON: loadJSON\n});\n\nasync function loadOBJ(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let string = await result.text();\n    {\n        // console.log('ORIGINAL');\n        const attempts = 10;\n        for(let i = 0; i < attempts; ++i)\n        {\n            let then = performance.now();\n            parse(string);\n            let now = performance.now();\n        }\n        // console.log(sum / attempts);\n    }\n    {\n        // console.log('UPDATE');\n        const attempts = 10;\n        for(let i = 0; i < attempts; ++i)\n        {\n            let then = performance.now();\n            parse2(string);\n            let now = performance.now();\n        }\n        // console.log(sum / attempts);\n    }\n    return parse2(string);\n}\n\nfunction parse2(string)\n{\n    const vertexList = [];\n    const texcoordList = [];\n    const normalList = [];\n\n    const vertexIndices = [];\n    const texcoordIndices = [];\n    const normalIndices = [];\n\n    // # comments\n    const commentPattern = /^#.*/g;\n    // v float float float\n    const vertexPattern = /v\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n    // vn float float float\n    const normalPattern = /vn\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n    // vt float float float\n    const texcoordPattern = /vt\\s+(\\S+)\\s+(\\S+)/g;\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n    const facePattern = /f\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))(\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*)))?/g;\n    // f float float float\n    const faceVertexPattern = /f\\s+([^\\/\\s]+)\\s+([^\\/\\s]+)\\s+([^\\/\\s]+)/g;\n\n    let quad = false;\n    let result = null;\n    let x, y, z, w;\n\n    // Remove all comments\n    string = string.replace(commentPattern, '');\n\n    // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = vertexPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        vertexList.push(x);\n        vertexList.push(y);\n        vertexList.push(z);\n    }\n\n    // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = normalPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        normalList.push(x);\n        normalList.push(y);\n        normalList.push(z);\n    }\n\n    // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n    while ((result = texcoordPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        texcoordList.push(x);\n        texcoordList.push(y);\n    }\n\n    // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n    while ((result = facePattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[6]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[10]);\n        if (Number.isNaN(z)) z = 1;\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // Normal indices\n        x = Number.parseInt(result[4]);\n        if (Number.isNaN(x))\n        {\n            // No UVs.\n            x = Number.parseInt(result[3]);\n            y = Number.parseInt(result[7]);\n            z = Number.parseInt(result[11]);\n            normalIndices.push(x);\n            normalIndices.push(y);\n            normalIndices.push(z);\n\n            texcoordIndices.push(1);\n            texcoordIndices.push(1);\n            texcoordIndices.push(1);\n        }\n        else\n        {\n            // Maybe UVs.\n            y = Number.parseInt(result[8]);\n            if (Number.isNaN(y)) y = 1;\n            z = Number.parseInt(result[12]);\n            if (Number.isNaN(z)) z = 1;\n            normalIndices.push(x);\n            normalIndices.push(y);\n            normalIndices.push(z);\n\n            // UV indices\n            x = Number.parseInt(result[3]);\n            if (Number.isNaN(x)) x = 1;\n            y = Number.parseInt(result[7]);\n            if (Number.isNaN(y)) y = 1;\n            z = Number.parseInt(result[11]);\n            if (Number.isNaN(z)) z = 1;\n            texcoordIndices.push(x);\n            texcoordIndices.push(y);\n            texcoordIndices.push(z);\n        }\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n            \n            // Vertex indices\n            w = Number.parseInt(result[15]);\n            if (Number.isNaN(w)) w = 1;\n            vertexIndices.push(w);\n\n            // Normal indices\n            w = Number.parseInt(result[17]);\n            if (Number.isNaN(w))\n            {\n                // No UVs.\n                w = Number.parseInt(result[16]);\n                normalIndices.push(w);\n                texcoordIndices.push(1);\n            }\n            else\n            {\n                // Maybe UVs.\n                normalIndices.push(w);\n\n                w = Number.parseInt(result[16]);\n                texcoordIndices.push(w);\n            }\n\n            quad = true;\n        }\n    }\n\n    // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n    while ((result = faceVertexPattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        y = Number.parseInt(result[6]);\n        z = Number.parseInt(result[10]);\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n\n        // Normal indices\n        normalIndices.push(1);\n        normalIndices.push(1);\n        normalIndices.push(1);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n\n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            vertexIndices.push(w);\n\n            // UV indices\n            texcoordIndices.push(1);\n            // Normal indices\n            normalIndices.push(1);\n\n            quad = true;\n        }\n    }\n\n    let index, size;\n\n    size = vertexIndices.length;\n    const positions = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = vertexIndices[i] - 1;\n        positions[i * 3 + 0] = vertexList[index * 3 + 0];\n        positions[i * 3 + 1] = vertexList[index * 3 + 1];\n        positions[i * 3 + 2] = vertexList[index * 3 + 2];\n    }\n\n    size = texcoordIndices.length;\n    const texcoords = new Float32Array(size * 2);\n    for (let i = 0; i < size; ++i) {\n        index = texcoordIndices[i] - 1;\n        texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n        texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n    }\n\n    size = normalIndices.length;\n    const normals = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = normalIndices[i] - 1;\n        normals[i * 3 + 0] = normalList[index * 3 + 0];\n        normals[i * 3 + 1] = normalList[index * 3 + 1];\n        normals[i * 3 + 2] = normalList[index * 3 + 2];\n    }\n\n    // Must be either unsigned short or unsigned byte.\n    size = vertexIndices.length;\n    const indices = new Uint16Array(size);\n    for (let i = 0; i < size; ++i) {\n        indices[i] = i;\n    }\n\n    if (quad) {\n        console.warn('WebGL does not support quad faces, only triangles.');\n    }\n\n    return {\n        positions,\n        texcoords,\n        normals,\n        indices,\n    };\n}\n\nfunction parse(string)\n{\n    const vertexList = [];\n    const texcoordList = [];\n    const normalList = [];\n\n    const vertexIndices = [];\n    const texcoordIndices = [];\n    const normalIndices = [];\n\n    // # comments\n    const commentPattern = /^#.*/g;\n    // v float float float\n    const vertexPattern = /v( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // vn float float float\n    const normalPattern = /vn( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // vt float float float\n    const texcoordPattern = /vt( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n    const facePattern = /f( +([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))?/g;\n    // f float float float\n    const faceVertexPattern = /f( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n\n    let quad = false;\n    let result = null;\n    let x, y, z, w;\n\n    // Remove all comments\n    string = string.replace(commentPattern, '');\n\n    // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = vertexPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        vertexList.push(x);\n        vertexList.push(y);\n        vertexList.push(z);\n    }\n\n    // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = normalPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        normalList.push(x);\n        normalList.push(y);\n        normalList.push(z);\n    }\n\n    // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n    while ((result = texcoordPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        texcoordList.push(x);\n        texcoordList.push(y);\n    }\n\n    // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n    while ((result = facePattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[6]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[10]);\n        if (Number.isNaN(z)) z = 1;\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        x = Number.parseInt(result[3]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[7]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[11]);\n        if (Number.isNaN(z)) z = 1;\n        texcoordIndices.push(x);\n        texcoordIndices.push(y);\n        texcoordIndices.push(z);\n\n        // Normal indices\n        x = Number.parseInt(result[4]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[8]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[12]);\n        if (Number.isNaN(z)) z = 1;\n        normalIndices.push(x);\n        normalIndices.push(y);\n        normalIndices.push(z);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n            \n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            if (Number.isNaN(w)) w = 1;\n            vertexIndices.push(w);\n\n            // UV indices\n            w = Number.parseInt(result[15]);\n            if (Number.isNaN(w)) w = 1;\n            texcoordIndices.push(w);\n\n            // Normal indices\n            w = Number.parseInt(result[16]);\n            if (Number.isNaN(w)) w = 1;\n            normalIndices.push(w);\n\n            quad = true;\n        }\n    }\n\n    // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n    while ((result = faceVertexPattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        y = Number.parseInt(result[6]);\n        z = Number.parseInt(result[10]);\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n\n        // Normal indices\n        normalIndices.push(1);\n        normalIndices.push(1);\n        normalIndices.push(1);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n\n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            vertexIndices.push(w);\n\n            // UV indices\n            texcoordIndices.push(1);\n            // Normal indices\n            normalIndices.push(1);\n\n            quad = true;\n        }\n    }\n\n    let index, size;\n\n    size = vertexIndices.length;\n    const positions = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = vertexIndices[i] - 1;\n        positions[i * 3 + 0] = vertexList[index * 3 + 0];\n        positions[i * 3 + 1] = vertexList[index * 3 + 1];\n        positions[i * 3 + 2] = vertexList[index * 3 + 2];\n    }\n\n    size = texcoordIndices.length;\n    const texcoords = new Float32Array(size * 2);\n    for (let i = 0; i < size; ++i) {\n        index = texcoordIndices[i] - 1;\n        texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n        texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n    }\n\n    size = normalIndices.length;\n    const normals = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = normalIndices[i] - 1;\n        normals[i * 3 + 0] = normalList[index * 3 + 0];\n        normals[i * 3 + 1] = normalList[index * 3 + 1];\n        normals[i * 3 + 2] = normalList[index * 3 + 2];\n    }\n\n    // Must be either unsigned short or unsigned byte.\n    size = vertexIndices.length;\n    const indices = new Uint16Array(size);\n    for (let i = 0; i < size; ++i) {\n        indices[i] = i;\n    }\n\n    if (quad) {\n        console.warn('WebGL does not support quad faces, only triangles.');\n    }\n\n    return {\n        positions,\n        texcoords,\n        normals,\n        indices,\n    };\n}\n\nvar OBJLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadOBJ: loadOBJ\n});\n\nlet ASSET_LOADERS = {};\n\ndefineAssetLoader('image', loadImage);\ndefineAssetLoader('text', loadText);\ndefineAssetLoader('json', loadJSON);\ndefineAssetLoader('bytes', loadBytes);\ndefineAssetLoader('obj', loadOBJ);\n\nfunction defineAssetLoader(assetType, assetLoader)\n{\n    ASSET_LOADERS[assetType] = assetLoader;\n}\n\nfunction getAssetLoader(assetType)\n{\n    if (assetType in ASSET_LOADERS)\n    {\n        return ASSET_LOADERS[assetType];\n    }\n    else\n    {\n        throw new Error(`Unknown asset type '${assetType}'.`);\n    }\n}\n\nasync function loadAssetMap(assetMap, assetParentPath = '.')\n{\n    let result = {};\n    for(let assetName of Object.keys(assetMap))\n    {\n        let entry = assetMap[assetName];\n        if (typeof entry === 'string')\n        {\n            result[assetName] = await loadAsset(entry, undefined, assetParentPath);\n        }\n        else if (typeof entry === 'object')\n        {\n            if (!('src' in entry))\n            {\n                throw new Error(`Missing required field 'src' for entry in asset map.`);\n            }\n\n            if ('name' in entry && entry.name !== assetName)\n            {\n                throw new Error(`Cannot redefine name for asset '${assetName}' for entry in asset map.`);\n            }\n\n            result[assetName] = await loadAsset(entry.src, entry, assetParentPath);\n        }\n        else\n        {\n            throw new Error('Unknown entry type in asset map.');\n        }\n    }\n    return result;\n}\n\nasync function loadAssetList(assetList, assetParentPath = '.')\n{\n    let result = {};\n    for(let entry of assetList)\n    {\n        if (typeof entry === 'string')\n        {\n            result[entry] = await loadAsset(entry, undefined, assetParentPath);\n        }\n        else if (typeof entry === 'object')\n        {\n            if (!('src' in entry))\n            {\n                throw new Error(`Missing required field 'src' for entry in asset list.`);\n            }\n\n            result['name' in entry ? entry.name : entry.src] = await loadAsset(entry.src, entry, assetParentPath);\n        }\n        else\n        {\n            throw new Error('Unknown entry type in asset list.');\n        }\n    }\n    return result;\n}\n\nasync function loadAsset(assetSrc, assetOpts = {}, assetParentPath = '.')\n{\n    if (assetSrc.indexOf(':') < 0)\n    {\n        throw new Error('Missing type for asset source.');\n    }\n\n    let [assetType, assetPath] = assetSrc.split(':');\n    let assetLoader = getAssetLoader(assetType);\n    return await assetLoader(assetParentPath + '/' + assetPath, assetOpts);\n}\n\nvar AssetLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defineAssetLoader: defineAssetLoader,\n    getAssetLoader: getAssetLoader,\n    loadAssetMap: loadAssetMap,\n    loadAssetList: loadAssetList,\n    loadAsset: loadAsset\n});\n\n// SOURCE: https://noonat.github.io/intersect/#aabb-vs-aabb\n\n/* Surface contacts are considered intersections, including sweeps. */\n\nconst EPSILON = 1e-8;\n\nfunction clamp(value, min, max)\n{\n    return Math.min(Math.max(value, min), max);\n}\n\nfunction createAABB(x, y, rx, ry)\n{\n    return {\n        x, y,\n        rx, ry,\n    };\n}\n\nfunction createRect(left, top, right, bottom)\n{\n    let rx = Math.abs(right - left) / 2;\n    let ry = Math.abs(bottom - top) / 2;\n    return createAABB(Math.min(left, right) + rx, Math.min(top, bottom) + ry, rx, ry);\n}\n\nfunction testAABB(a, b)\n{\n    if (Math.abs(a.x - b.x) > (a.rx + b.rx)) return false;\n    if (Math.abs(a.y - b.y) > (a.ry + b.ry)) return false;\n    return true;\n}\n\nfunction intersectAABB(out, a, b)\n{\n    let dx = b.x - a.x;\n    let px = (b.rx + a.rx) - Math.abs(dx);\n    if (px < 0) return null;\n\n    let dy = b.y - a.y;\n    let py = (b.ry + a.ry) - Math.abs(dy);\n    if (py < 0) return null;\n\n    if (px < py)\n    {\n        let sx = Math.sign(dx);\n        out.dx = px * sx;\n        out.dy = 0;\n        out.nx = sx;\n        out.ny = 0;\n        out.x = a.x + (a.rx * sx);\n        out.y = b.y;\n    }\n    else\n    {\n        let sy = Math.sign(dy);\n        out.dx = 0;\n        out.dy = py * sy;\n        out.nx = 0;\n        out.ny = sy;\n        out.x = b.x;\n        out.y = a.y + (a.ry * sy);\n    }\n\n    return out;\n}\n\nfunction intersectPoint(out, a, x, y)\n{\n    let dx = x - a.x;\n    let px = a.rx - Math.abs(dx);\n    if (px < 0) return null;\n\n    let dy = y - a.y;\n    let py = a.ry - Math.abs(dy);\n    if (py < 0) return null;\n\n    if (px < py)\n    {\n        let sx = Math.sign(dx);\n        out.dx = px * sx;\n        out.dy = 0;\n        out.nx = sx;\n        out.ny = 0;\n        out.x = a.x + (a.rx * sx);\n        out.y = y;\n    }\n    else\n    {\n        let sy = Math.sign(dy);\n        out.dx = 0;\n        out.dy = py * sy;\n        out.nx = 0;\n        out.ny = sy;\n        out.x = x;\n        out.y = a.y + (a.ry * sy);\n    }\n\n    return out;\n}\n\nfunction intersectSegment(out, a, x, y, dx, dy, px = 0, py = 0)\n{\n    if (Math.abs(dx) < EPSILON\n        && Math.abs(dy) < EPSILON\n        && px === 0\n        && py === 0)\n    {\n        return intersectPoint(out, a, x, y);\n    }\n    \n    let arx = a.rx;\n    let ary = a.ry;\n    let bpx = px;\n    let bpy = py;\n    let scaleX = 1.0 / (dx || EPSILON);\n    let scaleY = 1.0 / (dy || EPSILON);\n    let signX = Math.sign(scaleX);\n    let signY = Math.sign(scaleY);\n    let nearTimeX = (a.x - signX * (arx + bpx) - x) * scaleX;\n    let nearTimeY = (a.y - signY * (ary + bpy) - y) * scaleY;\n    let farTimeX = (a.x + signX * (arx + bpx) - x) * scaleX;\n    let farTimeY = (a.y + signY * (ary + bpy) - y) * scaleY;\n    if (nearTimeX > farTimeY || nearTimeY > farTimeX) return null;\n\n    let nearTime = Math.max(nearTimeX, nearTimeY);\n    let farTime = Math.min(farTimeX, farTimeY);\n    if (nearTime > 1 || farTime < 0) return null;\n\n    let time = clamp(nearTime, 0, 1);\n    let hitdx = (1.0 - time) * -dx;\n    let hitdy = (1.0 - time) * -dy;\n    let hitx = x + dx * time;\n    let hity = y + dy * time;\n\n    if (nearTimeX > nearTimeY)\n    {\n        out.time = time;\n        out.nx = -signX;\n        out.ny = 0;\n        out.dx = hitdx;\n        out.dy = hitdy;\n        out.x = hitx;\n        out.y = hity;\n    }\n    else\n    {\n        out.time = time;\n        out.nx = 0;\n        out.ny = -signY;\n        out.dx = hitdx;\n        out.dy = hitdy;\n        out.x = hitx;\n        out.y = hity;\n    }\n\n    return out;\n}\n\nfunction intersectSweepAABB(out, a, b, dx, dy)\n{\n    return intersectSegment(out, a, b.x, b.y, dx, dy, b.rx, b.ry);\n}\n\nfunction sweepIntoAABB(out, a, b, dx, dy)\n{\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n    {\n        let hit = intersectAABB({}, b, a);\n        if (hit) hit.time = 0;\n\n        out.x = a.x;\n        out.y = a.y;\n        out.time = hit ? 0 : 1;\n        out.hit = hit;\n        return out;\n    }\n\n    let hit = intersectSweepAABB({}, b, a, dx, dy);\n    if (hit)\n    {\n        let time = clamp(hit.time, 0, 1);\n        let length = Math.sqrt(dx * dx + dy * dy);\n\n        let normaldx;\n        let normaldy;\n        if (length)\n        {\n            normaldx = dx / length;\n            normaldy = dy / length;\n        }\n        else\n        {\n            normaldx = 0;\n            normaldy = 0;\n        }\n        hit.x = clamp(hit.x + normaldx * a.rx, b.x - b.rx, b.x + b.rx);\n        hit.y = clamp(hit.y + normaldy * a.ry, b.y - b.ry, b.y + b.ry);\n\n        out.time = time;\n        out.x = a.x + dx * time;\n        out.y = a.y + dy * time;\n        out.hit = hit;\n    }\n    else\n    {\n        out.time = 1;\n        out.x = a.x + dx;\n        out.y = a.y + dy;\n        out.hit = hit;\n    }\n\n    return out;\n}\n\nfunction sweepInto(out, a, staticColliders, dx, dy)\n{\n    let tmp = {};\n\n    out.time = 1;\n    out.x = a.x + dx;\n    out.y = a.y + dy;\n    out.hit = null;\n\n    for(let i = 0, l = staticColliders.length; i < l; ++i)\n    {\n        let result = sweepIntoAABB(tmp, a, staticColliders[i], dx, dy);\n        if (result.time <= out.time)\n        {\n            out.time = result.time;\n            out.x = result.x;\n            out.y = result.y;\n            out.hit = result.hit;\n        }\n    }\n    return out;\n}\n\nvar IntersectionHelper = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    EPSILON: EPSILON,\n    clamp: clamp,\n    createAABB: createAABB,\n    createRect: createRect,\n    testAABB: testAABB,\n    intersectAABB: intersectAABB,\n    intersectPoint: intersectPoint,\n    intersectSegment: intersectSegment,\n    sweepInto: sweepInto\n});\n\nconst MAX_SWEEP_RESOLUTION_ITERATIONS = 100;\n\nfunction computeIntersections(masks, statics = [])\n{\n    // Compute physics.\n    for(let mask of masks)\n    {\n        switch(mask.type)\n        {\n            case 'point':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectPoint({}, other, mask.x, mask.y);\n                    if (mask.hit) break;\n                }\n                break;\n            case 'segment':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectSegment({}, other, mask.x, mask.y, mask.dx, mask.dy, mask.px, mask.py);\n                    if (mask.hit) break;\n                }\n                break;\n            case 'aabb':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectAABB({}, other, mask);\n                    if (mask.hit) break;\n                }\n                break;\n        }\n    }\n}\n\nfunction resolveIntersections(dynamics, statics = [], dt = 1)\n{\n    // Do physics.\n    for(let dynamic of dynamics)\n    {\n        let dx = dynamic.dx * dt;\n        let dy = dynamic.dy * dt;\n        \n        let time = 0;\n        let tmp = {};\n        let sweep;\n\n        let hit = null;\n        let iterations = MAX_SWEEP_RESOLUTION_ITERATIONS;\n        do\n        {\n            // Do detection.\n            sweep = sweepInto(tmp, dynamic, statics, dx, dy);\n    \n            // Do resolution.\n            dynamic.x = sweep.x - (Math.sign(dx) * EPSILON);\n            dynamic.y = sweep.y - (Math.sign(dy) * EPSILON);\n            time += sweep.time;\n            if (sweep.hit)\n            {\n                dx += sweep.hit.nx * Math.abs(dx);\n                dy += sweep.hit.ny * Math.abs(dy);\n                hit = sweep.hit;\n\n                // Make sure that spent motion is consumed.\n                let remainingTime = Math.max(1 - time, 0);\n                dx *= remainingTime;\n                dy *= remainingTime;\n    \n                if (Math.abs(dx) < EPSILON) dx = 0;\n                if (Math.abs(dy) < EPSILON) dy = 0;\n            }\n        }\n        while(time < 1 && --iterations >= 0);\n        \n        dynamic.dx = dx;\n        dynamic.dy = dy;\n        dynamic.hit = hit;\n    }\n}\n\nvar IntersectionResolver = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    computeIntersections: computeIntersections,\n    resolveIntersections: resolveIntersections\n});\n\nfunction createIntersectionWorld()\n{\n    return {\n        dynamics: [],\n        masks: [],\n        statics: [],\n        update(dt)\n        {\n            resolveIntersections(this.dynamics, this.statics, dt);\n            computeIntersections(this.masks, this.statics);\n        },\n        render(ctx)\n        {\n            ctx.save();\n            {\n                // Draw static colliders.\n                ctx.strokeStyle = 'green';\n                for(let collider of this.statics)\n                {\n                    ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                }\n\n                // Draw dynamic colliders.\n                ctx.strokeStyle = 'lime';\n                for(let collider of this.dynamics)\n                {\n                    ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                }\n\n                // Draw mask colliders.\n                ctx.strokeStyle = 'blue';\n                for(let collider of this.masks)\n                {\n                    switch(collider.type)\n                    {\n                        case 'point':\n                            ctx.save();\n                            {\n                                ctx.fillStyle = 'red';\n                                ctx.fillRect(collider.x - 1, collider.y - 1, 2, 2);\n                            }\n                            ctx.restore();\n                            break;\n                        case 'segment':\n                            ctx.beginPath();\n                            ctx.moveTo(collider.x, collider.y);\n                            ctx.lineTo(collider.x + collider.dx, collider.y + collider.dy);\n                            ctx.stroke();\n                            break;\n                        case 'aabb':\n                            ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                            break;\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n}\n\nvar IntersectionWorld = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createIntersectionWorld: createIntersectionWorld\n});\n\nconst AUDIO_CONTEXT = new AudioContext();\nautoUnlock(AUDIO_CONTEXT);\n\nconst AUDIO_ASSET_TAG = 'audio';\nasync function loadAudio(filepath, opts = {})\n{\n    const ctx = AUDIO_CONTEXT;\n\n    let result = await fetch(filepath);\n    let buffer = await result.arrayBuffer();\n    let data = await ctx.decodeAudioData(buffer);\n    return new Sound(ctx, data, Boolean(opts.loop));\n}\n\nconst DEFAULT_SOURCE_PARAMS = {\n    gain: 0,\n    pitch: 0,\n    pan: 0,\n    loop: false,\n};\nclass Sound\n{\n    constructor(ctx, audioBuffer, loop = false)\n    {\n        this.context = ctx;\n        this.buffer = audioBuffer;\n\n        this._source = null;\n\n        this.playing = false;\n        this.loop = loop;\n\n        this.onAudioSourceEnded = this.onAudioSourceEnded.bind(this);\n    }\n\n    onAudioSourceEnded()\n    {\n        this._playing = false;\n    }\n\n    play(opts = DEFAULT_SOURCE_PARAMS)\n    {\n        if (!this.buffer) return;\n        if (this._source) this.destroy();\n\n        const ctx = this.context;\n        let source = ctx.createBufferSource();\n        source.addEventListener('ended', this.onAudioSourceEnded);\n        source.buffer = this.buffer;\n        source.loop = opts.loop;\n\n        let prevNode = source;\n\n        // https://www.oreilly.com/library/view/web-audio-api/9781449332679/ch04.html\n        // Add pitch\n        if (opts.pitch)\n        {\n            source.detune.value = opts.pitch * 100;\n        }\n\n        // Add gain\n        if (opts.gain)\n        {\n            const gainNode = ctx.createGain();\n            gainNode.gain.value = opts.gain;\n            prevNode = prevNode.connect(gainNode);\n        }\n\n        // Add stereo pan\n        if (opts.pan)\n        {\n            const pannerNode = ctx.createStereoPanner();\n            pannerNode.pan.value = opts.pan;\n            prevNode = prevNode.connect(pannerNode);\n        }\n\n        prevNode.connect(ctx.destination);\n        source.start();\n\n        this._source = source;\n        this._playing = true;\n    }\n\n    pause()\n    {\n        this._source.stop();\n        this._playing = false;\n    }\n\n    destroy()\n    {\n        if (this._source) this._source.disconnect();\n        this._source = null;\n    }\n}\n\nasync function autoUnlock(ctx)\n{\n    const callback = () => {\n        if (ctx.state === 'suspended') {\n            ctx.resume();\n        }\n    };\n    document.addEventListener('click', callback);\n}\n\nvar Audio = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    AUDIO_CONTEXT: AUDIO_CONTEXT,\n    AUDIO_ASSET_TAG: AUDIO_ASSET_TAG,\n    loadAudio: loadAudio\n});\n\nconst MAX_FIXED_UPDATES = 250;\n\n/**\n * @typedef Application\n * @property {Function} [start]\n * @property {Function} [stop]\n * @property {Function} [preUpdate]\n * @property {Function} [update]\n * @property {Function} [fixedUpdate]\n * @property {Function} [postUpdate]\n * @property {Function} [pause]\n * @property {Function} [resume]\n */\n\nclass ApplicationLoop\n{\n    static currentTime() { return performance.now(); }\n\n    static start(app)\n    {\n        let result = new ApplicationLoop(app, false);\n        result.start();\n        return result;\n    }\n\n    /**\n     * @param {Application} app The application object that holds all the executable logic.\n     * @param {Boolean} [controlled = false] Whether the loop should NOT execute and manage itself.\n     */\n    constructor(app, controlled = false)\n    {\n        this.app = app;\n\n        this._controlled = controlled;\n        this._animationFrameHandle = null;\n\n        this.prevFrameTime = 0;\n        this.started = false;\n        this.paused = false;\n        this.fixedTimeStep = 1 / 60;\n        this.prevAccumulatedTime = 0;\n\n        this._onstart = null;\n        this._onstop = null;\n        this._onpreupdate = null;\n        this._onupdate = null;\n        this._onfixedupdate = null;\n        this._onpostupdate = null;\n        this._onpause = null;\n        this._onresume = null;\n\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        this.onWindowFocus = this.onWindowFocus.bind(this);\n        this.onWindowBlur = this.onWindowBlur.bind(this);\n    }\n\n    setFixedUpdatesPerSecond(count)\n    {\n        this.fixedTimeStep = 1 / count;\n        return this;\n    }\n\n    onWindowFocus()\n    {\n        if (!this.started) return;\n        this.resume();\n    }\n\n    onWindowBlur()\n    {\n        if (!this.started) return;\n        this.pause();\n    }\n\n    /**\n     * Runs the game loop. If this is a controlled game loop, it will call itself\n     * continuously until stop() or pause().\n     */\n    onAnimationFrame(now)\n    {\n        if (this._controlled) throw new Error('Cannot run controlled game loop; call step() instead.');\n        if (!this.started) throw new Error('Must be called after start().');\n\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n        this.step(now);\n    }\n\n    /** Runs one update step for the game loop. This is usually called 60 times a second. */\n    step(now = ApplicationLoop.currentTime())\n    {\n        if (!this.started) return false;\n\n        const deltaTime = now - this.prevFrameTime;\n        this.prevFrameTime = now;\n        \n        if (this.paused) return false;\n\n        if (this.app.preUpdate) this.app.preUpdate(deltaTime);\n        if (this.app.update) this.app.update(deltaTime);\n\n        this.prevAccumulatedTime += deltaTime / 1000;\n        if (this.prevAccumulatedTime > MAX_FIXED_UPDATES * this.fixedTimeStep)\n        {\n            let max = MAX_FIXED_UPDATES * this.fixedTimeStep;\n            let count = Math.floor((this.prevAccumulatedTime - max) / this.fixedTimeStep);\n            this.prevAccumulatedTime = max;\n            console.error(`[ApplicationLoop] Too many updates! Skipped ${count} fixed updates.`);\n        }\n\n        while(this.prevAccumulatedTime >= this.fixedTimeStep)\n        {\n            this.prevAccumulatedTime -= this.fixedTimeStep;\n            if (this.app.fixedUpdate) this.app.fixedUpdate();\n        }\n\n        if (this.app.postUpdate) this.app.postUpdate(deltaTime);\n    }\n\n    /** Starts the game loop. Calls run(), unless recursive is set to false. */\n    start()\n    {\n        if (this.started) throw new Error('Loop already started.');\n\n        // If the window is out of focus, just ignore the time.\n        window.addEventListener('focus', this.onWindowFocus);\n        window.addEventListener('blur', this.onWindowBlur);\n\n        this.started = true;\n        this.prevFrameTime = ApplicationLoop.currentTime();\n\n        if (this.app.start) this.app.start();\n        \n        if (!this.controlled)\n        {\n            this.onAnimationFrame(this.prevFrameTime);\n        }\n\n        return this;\n    }\n\n    /** Stops the game loop. */\n    stop()\n    {\n        if (!this.started) throw new Error('Loop not yet started.');\n        \n        // If the window is out of focus, just ignore the time.\n        window.removeEventListener('focus', this.onWindowFocus);\n        window.removeEventListener('blur', this.onWindowBlur);\n\n        this.started = false;\n\n        if (this.app.stop) this.app.stop();\n\n        if (!this._controlled)\n        {\n            if (this.animationFrameHandle)\n            {\n                cancelAnimationFrame(this.animationFrameHandle);\n                this.animationFrameHandle = null;\n            }\n        }\n\n        return this;\n    }\n\n    /** Pauses the game loop. */\n    pause()\n    {\n        if (this.paused) return this;\n\n        this.paused = true;\n        \n        if (this.app.pause) this.app.pause();\n        return this;\n    }\n\n    /** Resumes the game loop. */\n    resume()\n    {\n        if (!this.pause) return this;\n\n        // This is an intentional frame skip (due to pause).\n        this.prevFrameTime = ApplicationLoop.currentTime();\n\n        this.paused = false;\n\n        if (this.app.resume) this.app.resume();\n        return this;\n    }\n}\n\nclass Game\n{\n    constructor(context)\n    {\n        this.context = context;\n\n        this.display = null;\n        this.renderContext = null;\n    }\n\n    setDisplay(display)\n    {\n        this.display = display;\n        this.renderContext = display.canvas.getContext('2d');\n        return this;\n    }\n\n    /** @override */\n    start()\n    {\n        this.context.start();\n    }\n\n    /** @override */\n    update(dt)\n    {\n        this.context.update(dt);\n        this.context.render(this.renderContext);\n    }\n}\n\nconst GAME_PROPERTY = Symbol('game');\nconst LOOP_PROPERTY = Symbol('loop');\n\nfunction start(context)\n{\n    let gameContext = { ...context };\n\n    let game = new Game(gameContext);\n    let loop = new ApplicationLoop(game);\n\n    gameContext[GAME_PROPERTY] = game;\n    gameContext[LOOP_PROPERTY] = loop;\n    gameContext.display = null;\n\n    window.addEventListener('DOMContentLoaded', () => {\n        let display = document.querySelector('display-port');\n        if (!display) throw new Error('Cannot find display-port in document.');\n        game.setDisplay(display);\n        gameContext.display = display;\n        gameContext.load().then(() => loop.start());\n    });\n\n    return gameContext;\n}\n\nfunction stop(gameContext)\n{\n    gameContext[LOOP_PROPERTY].stop();\n\n    delete gameContext[GAME_PROPERTY];\n    delete gameContext[LOOP_PROPERTY];\n}\n\nvar Game$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    start: start,\n    stop: stop\n});\n\nconst DEFAULT_INFO = {\n    x: 0, y: 0,\n    width: 1,\n    height: 1,\n    color: 'dodgerblue',\n    solid: true,\n};\nconst INFO_KEY = Symbol('BoxRendererInfo');\n\nclass BoxRenderer\n{\n    static get Info() { return INFO_KEY; }\n\n    static draw(ctx, targets, defaultInfo = undefined)\n    {\n        const defaults = defaultInfo ? { ...DEFAULT_INFO, ...defaultInfo } : DEFAULT_INFO;\n        for(let target of targets)\n        {\n            const info = target[INFO_KEY];\n            \n            const x = resolveInfo('x', info, target, defaults);\n            const y = resolveInfo('y', info, target, defaults);\n            const width = resolveInfo('width', info, target, defaults);\n            const height = resolveInfo('height', info, target, defaults);\n            const color = resolveInfo('color', info, target, defaults);\n            const solid = resolveInfo('solid', info, target, defaults);\n\n            ctx.translate(x, y);\n            {\n                const halfWidth = width / 2;\n                const halfHeight = height / 2;\n\n                if (solid)\n                {\n                    ctx.fillStyle = color;\n                    ctx.fillRect(-halfWidth, -halfHeight, width, height);\n                }\n                else\n                {\n                    ctx.strokeStyle = color;\n                    ctx.strokeRect(-halfWidth, -halfHeight, width, height);\n                }\n            }\n            ctx.translate(-x, -y);\n        }\n    }\n}\n\nfunction resolveInfo(param, info, target, defaults)\n{\n    if (info)\n    {\n        if (param in info)\n        {\n            return info[param];\n        }\n        else if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else if (target)\n    {\n        if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else\n    {\n        return defaults[param];\n    }\n}\n\nconst DEFAULT_INFO$1 = {\n    x: 0, y: 0,\n    width: 1,\n    height: 1,\n    spriteImage: null,\n};\nconst INFO_KEY$1 = Symbol('SpriteRendererInfo');\n\nclass SpriteRenderer\n{\n    static get Info() { return INFO_KEY$1; }\n\n    static draw(ctx, targets, defaultInfo = undefined)\n    {\n        const defaults = defaultInfo ? { ...DEFAULT_INFO$1, ...defaultInfo } : DEFAULT_INFO$1;\n        for(let target of targets)\n        {\n            const info = target[INFO_KEY$1];\n            const x = resolveInfo$1('x', info, target, defaults);\n            const y = resolveInfo$1('y', info, target, defaults);\n\n            const spriteImage = resolveInfo$1('spriteImage', info, target, defaults);\n            if (spriteImage)\n            {\n                const width = spriteImage.width;\n                const height = spriteImage.height;\n\n                ctx.translate(x, y);\n                {\n                    const halfWidth = width / 2;\n                    const halfHeight = height / 2;\n    \n                    ctx.drawImage(spriteImage, -halfWidth, -halfHeight);\n                }\n                ctx.translate(-x, -y);\n            }\n            else\n            {\n                const width = 10;\n                const height = 10;\n\n                ctx.translate(x, y);\n                {\n                    const halfWidth = width / 2;\n                    const halfHeight = height / 2;\n\n                    ctx.strokeStyle = 'black';\n                    ctx.strokeRect(-halfWidth, -halfHeight, width, height);\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    ctx.strokeText('?', 0, 0, width);\n                }\n                ctx.translate(-x, -y);\n            }\n        }\n    }\n}\n\nfunction resolveInfo$1(param, info, target, defaults)\n{\n    if (info)\n    {\n        if (param in info)\n        {\n            return info[param];\n        }\n        else if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else if (target)\n    {\n        if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else\n    {\n        return defaults[param];\n    }\n}\n\n// https://gamedevelopment.tutsplus.com/tutorials/quick-tip-use-quadtrees-to-detect-likely-collisions-in-2d-space--gamedev-374\n\n/**\n * @typedef Bounds\n * @property {Number} x The center x position.\n * @property {Number} y The center y position.\n * @property {Number} rx The half width of the bounds.\n * @property {Number} ry The half height of the bounds.\n */\n\nconst MAX_OBJECTS = 10;\nconst MAX_LEVELS = 5;\n\n/**\n * A quadtree to help your sort boxes by proximity (in quadrants). Usually, this is used\n * like this:\n * 1. Clear the tree to be empty.\n * 2. Add all the boxes. They should be in the shape of {@link Bounds}.\n * 3. For each target box you want to check for, call {@link retrieve()}.\n * 4. The previous function should return a list of potentially colliding boxes. This is\n * where you should use a more precise intersection test to accurately determine if the\n * result is correct.\n * \n * ```js\n * // Here is an example\n * quadTree.clear();\n * quadTree.insertAll(boxes);\n * let out = [];\n * for(let box of boxes)\n * {\n *   quadTree.retrieve(box, out);\n *   for(let other of out)\n *   {\n *     // Found a potential collision between box and other.\n *     // Run your collision detection algorithm for them here.\n *   }\n *   out.length = 0;\n * }\n * ```\n */\nclass QuadTree\n{\n    /**\n     * Creates bounds for the given dimensions.\n     * \n     * @param {Number} x The center x position.\n     * @param {Number} y The center y position.\n     * @param {Number} rx The half width of the bounds.\n     * @param {Number} ry The half height of the bounds.\n     * @returns {Bounds} The newly created bounds.\n     */\n    static createBounds(x, y, rx, ry)\n    {\n        return { x, y, rx, ry };\n    }\n\n    /**\n     * Constructs an empty quadtree.\n     * \n     * @param {Number} [level] The root level for this tree.\n     * @param {Bounds} [bounds] The bounds of this tree.\n     */\n    constructor(\n        level = 0,\n        bounds = QuadTree.createBounds(0, 0, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER))\n    {\n        this.level = level;\n        this.bounds = bounds;\n\n        this.boxes = [];\n        this.nodes = new Array(4);\n    }\n\n    /**\n     * Inserts all the boxes into the tree.\n     * \n     * @param {Array<Buonds>} boxes A list of boxes.\n     */\n    insertAll(boxes)\n    {\n        for(let box of boxes)\n        {\n            this.insert(box);\n        }\n    }\n\n    /**\n     * Inserts the box into the tree.\n     * \n     * @param {Bounds} box A box.\n     */\n    insert(box)\n    {\n        let hasNode = this.nodes[0];\n\n        if (hasNode)\n        {\n            let quadIndex = this.findQuadIndex(box);\n            if (quadIndex >= 0)\n            {\n                this.nodes[quadIndex].insert(box);\n                return;\n            }\n        }\n\n        this.boxes.push(box);\n\n        if (this.boxes.length > MAX_OBJECTS && this.level < MAX_LEVELS)\n        {\n            if (!hasNode) this.split();\n\n            for(let i = this.boxes.length - 1; i >= 0; --i)\n            {\n                let otherBox = this.boxes[i];\n                let quadIndex = this.findQuadIndex(otherBox);\n                if (quadIndex >= 0)\n                {\n                    this.boxes.splice(i, 1);\n                    this.nodes[quadIndex].insert(otherBox);\n                }\n            }\n        }\n    }\n\n    /**\n     * Retrieves all the near boxes for the target.\n     * \n     * @param {Bounds} box The target box to get all near boxes for.\n     * @param {Array<Bounds>} [out=[]] The list to append results to.\n     * @param {Object} [opts] Any additional options.\n     * @param {Boolean} [opts.includeSelf=false] Whether to include the\n     * target in the result list.\n     * @returns {Array<Bounds>} The appended list of results.\n     */\n    retrieve(box, out = [], opts = {})\n    {\n        const { includeSelf = false } = opts;\n\n        if (this.nodes[0])\n        {\n            let quadIndex = this.findQuadIndex(box);\n            if (quadIndex >= 0)\n            {\n                this.nodes[quadIndex].retrieve(box, out);\n            }\n        }\n\n        let boxes = this.boxes;\n        if (!includeSelf)\n        {\n            // Append all elements before the index (or none, if not found)...\n            let targetIndex = boxes.indexOf(box);\n            for(let i = 0; i < targetIndex; ++i)\n            {\n                out.push(boxes[i]);\n            }\n            // Append all elements after the index (or from 0, if not found)...\n            let length = boxes.length;\n            for(let i = targetIndex + 1; i < length; ++i)\n            {\n                out.push(boxes[i]);\n            }\n        }\n        else\n        {\n            out.push(...boxes);\n        }\n        return out;\n    }\n\n    /**\n     * Removes all boxes form the tree.\n     */\n    clear()\n    {\n        this.boxes.length = 0;\n\n        for(let i = 0; i < this.nodes.length; ++i)\n        {\n            let node = this.nodes[i];\n            if (node)\n            {\n                node.clear();\n                this.nodes[i] = null;\n            }\n        }\n    }\n\n    /** @private */\n    split()\n    {\n        let { x, y, rx, ry } = this.bounds;\n        let nextLevel = this.level + 1;\n\n        let ChildConstructor = this.constructor;\n\n        this.nodes[0] = new ChildConstructor(nextLevel, QuadTree.createBounds(x + rx, y, rx, ry));\n        this.nodes[1] = new ChildConstructor(nextLevel, QuadTree.createBounds(x, y, rx, ry));\n        this.nodes[2] = new ChildConstructor(nextLevel, QuadTree.createBounds(x, y + ry, rx, ry));\n        this.nodes[3] = new ChildConstructor(nextLevel, QuadTree.createBounds(x + rx, y + ry, rx, ry));\n    }\n\n    /** @private */\n    findQuadIndex(box)\n    {\n        const { x: bx, y: by, rx: brx, ry: bry } = this.bounds;\n        const midpointX = bx + brx;\n        const midpointY = by + bry;\n\n        const { x, y, rx, ry } = box;\n        const isTop = y < midpointY && y + ry * 2 < midpointY;\n        const isBottom = y > midpointY;\n        const isLeft = x < midpointX && x + rx * 2 < midpointX;\n        const isRight= x > midpointX;\n\n        let index = -1;\n        if (isLeft)\n        {\n            if (isTop)\n            {\n                index = 1;\n            }\n            else if (isBottom)\n            {\n                index = 2;\n            }\n        }\n        else if (isRight)\n        {\n            if (isTop)\n            {\n                index = 0;\n            }\n            else if (isBottom)\n            {\n                index = 3;\n            }\n        }\n\n        return index;\n    }\n}\n\n// TODO: Add custom solvers.\n\n/**\n * @typedef {Function} TestFunction\n * @param {AxisAlignedBoundingBox} a\n * @param {AxisAlignedBoundingBox} b\n * @returns {Boolean} Whether or not the passed-in boxes\n * should be considered as possibly colliding.\n */\n\n/**\n * @typedef CollisionResult\n * @property {AxisAlignedBoundingBox} box\n * @property {AxisAlignedBoundingBox} other\n */\n\n/**\n * @typedef Mask\n * @property {Object} owner\n * @property {AxisAlignedBoundingBox} box\n * @property {Function} get\n */\n\n/**\n * The property key for masks to keep count of how many are\n * still available.\n */\nconst MASK_COUNT = Symbol('maskCount');\n\n/** An axis-aligned graph for effeciently solving box collisions. */\nclass AxisAlignedBoundingBoxGraph\n{\n    /**\n     * Constructs an empty graph.\n     * \n     * @param {Object} [opts={}] Any additional options.\n     * @param {typeof AxisAlignedBoundingBox} [opts.boxConstructor=AxisAlignedBoundingBox]\n     * The axis-aligned bounding box constructor that make up the graph.\n     */\n    constructor(opts = {})\n    {\n        this.boxConstructor = opts.boxConstructor || AxisAlignedBoundingBox;\n\n        this.masks = new Map();\n        this.boxes = new Set();\n        \n        // Used for constant lookup when updating dynamic masks.\n        this.dynamics = new Set();\n        // Used for efficiently pruning objects when solving.\n        this.quadtree = new QuadTree();\n    }\n\n    add(owner, maskName, maskValues = {})\n    {\n        let mask = {\n            owner,\n            box: null,\n            get: null,\n        };\n\n        if (!this.masks.has(owner))\n        {\n            this.masks.set(owner, {\n                [MASK_COUNT]: 1,\n                [maskName]: mask,\n            });\n        }\n        else if (!(maskName in this.masks.get(owner)))\n        {\n            let ownedMasks = this.masks.get(owner);\n            ownedMasks[maskName] = mask;\n            ownedMasks[MASK_COUNT]++;\n        }\n        else\n        {\n            throw new Error(`Mask ${maskName} already exists for owner.`);\n        }\n\n        if (Array.isArray(maskValues))\n        {\n            const x = maskValues[0] || 0;\n            const y = maskValues[1] || 0;\n            const rx = (maskValues[2] / 2) || 0;\n            const ry = (maskValues[3] / 2) || 0;\n\n            let box = new (this.boxConstructor)(this, owner, x, y, rx, ry);\n            this.boxes.add(box);\n\n            mask.box = box;\n        }\n        else if (typeof maskValues === 'object')\n        {\n            let x = maskValues.x || 0;\n            let y = maskValues.y || 0;\n            let rx = maskValues.rx || (maskValues.width / 2) || 0;\n            let ry = maskValues.ry || (maskValues.height / 2) || 0;\n\n            if (typeof owner === 'object')\n            {\n                if (!x) x = owner.x || 0;\n                if (!y) y = owner.y || 0;\n                if (!rx) rx = (owner.width / 2) || 0;\n                if (!ry) ry = (owner.height / 2) || 0;\n            }\n            \n            let box = new (this.boxConstructor)(this, owner, x, y, rx, ry);\n            this.boxes.add(box);\n\n            mask.box = box;\n            if ('get' in maskValues)\n            {\n                mask.get = maskValues.get;\n                mask.get(box, owner);\n                this.dynamics.add(mask);\n            }\n        }\n        else if (typeof maskValues === 'function')\n        {\n            let box = new (this.boxConstructor)(this, owner, 0, 0, 0, 0);\n            this.boxes.add(box);\n            \n            mask.box = box;\n            mask.get = maskValues;\n            maskValues.call(mask, box, owner);\n            this.dynamics.add(mask);\n        }\n        else\n        {\n            throw new Error('Invalid mask option type.');\n        }\n    }\n\n    /**\n     * @returns {Boolean} Whether the mask for the given name exists and was\n     * removed from the owner.\n     */\n    remove(owner, maskName)\n    {\n        if (this.masks.has(owner))\n        {\n            let ownedMasks = this.masks.get(owner);\n            let mask = ownedMasks[maskName];\n            if (mask)\n            {\n                if (mask.get) this.dynamics.delete(mask);\n                this.boxes.delete(mask.box);\n                ownedMasks[maskName] = null;\n\n                let count = --ownedMasks[MASK_COUNT];\n                if (count <= 0)\n                {\n                    this.masks.delete(owner);\n                }\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    /** @returns {Mask} The owned mask for the given name. */\n    get(owner, maskName)\n    {\n        if (this.masks.has(owner))\n        {\n            return this.masks.get(owner)[maskName];\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    /** @returns {Number} The number of masks that belong to the owner. */\n    count(owner)\n    {\n        if (this.masks.has(owner))\n        {\n            return this.masks.get(owner)[MASK_COUNT];\n        }\n        else\n        {\n            return 0;\n        }\n    }\n\n    clear()\n    {\n        this.boxes.clear();\n        this.masks.clear();\n        this.dynamics.clear();\n        this.quadtree.clear();\n    }\n\n    /**\n     * Forcibly updates the current graph to match the system for\n     * the given initial options.\n     * \n     * This is usually called automatically by {@link solve()} to\n     * update the graph to get the current results, but could also\n     * be called manually for more control.\n     */\n    update()\n    {\n        // Update boxes\n        for(let mask of this.dynamics.values())\n        {\n            mask.get(mask.box, mask.owner);\n        }\n    }\n    \n    /**\n     * Solves the current graph for collisions. Usually, you want\n     * to call {@link update()} before this function to ensure the\n     * boxes accurately reflect the current state.\n     * \n     * @param {Array<Object>} [targets=undefined] A list of active target to solve\n     * for. If undefined or null, it will solve collisions using all boxes as\n     * active targets. This can be used to prune box collisions that are not\n     * relevant, or \"active\".\n     * @param {Array<CollisionResult>} [out=[]] List to append collision results to.\n     * @param {Object} [opts={}] Any additional options.\n     * @param {TestFunction} [opts.test] The custom tester function\n     * to initially check if 2 objects can be colliding.\n     * @param {Boolean} [opts.forceUpdate=true] Whether to update the\n     * graph before solving it. If false, you must call {@link update()}\n     * yourself to update the graph to the current state.\n     * @returns {Array<CollisionResult>} The collisions found in the current graph.\n     */\n    solve(targets = undefined, out = [], opts = {})\n    {\n        const { forceUpdate = true, test = testAxisAlignedBoundingBox } = opts;\n\n        if (forceUpdate)\n        {\n            this.update();\n        }\n\n        if (typeof targets === 'undefined' || targets === null)\n        {\n            targets = this.masks.keys();\n        }\n\n        let result = out;\n        let quadtree = this.quadtree;\n        quadtree.clear();\n        quadtree.insertAll(this.boxes);\n\n        let others = [];\n        for(let owner of targets)\n        {\n            let ownedMasks = Object.values(this.masks.get(owner));\n            for(let mask of ownedMasks)\n            {\n                const { box } = mask;\n                quadtree.retrieve(box, others);\n                for(let other of others)\n                {\n                    if (test(box, other))\n                    {\n                        const collision = createCollisionResult(mask, box, other);\n                        result.push(collision);\n                    }\n                }\n                others.length = 0;\n            }\n        }\n        return result;\n    }\n}\n\n/**\n * Creates a collision result for the given boxes.\n * \n * @param {Mask} mask The target mask that collided.\n * @param {AxisAlignedBoundingBox} a The mask's box that is in the collision.\n * @param {AxisAlignedBoundingBox} b The other box that is in the collision.\n * @returns {CollisionResult} The new collision result.\n */\nfunction createCollisionResult(mask, a, b)\n{\n    return {\n        mask,\n        box: a,\n        other: b,\n    };\n}\n\n/**\n * A representative bounding box to keep positional and\n * dimensional metadata for any object in the\n * {@link AxisAlignedBoundingBoxGraph}.\n */\nclass AxisAlignedBoundingBox\n{\n    constructor(aabbGraph, owner, x, y, rx, ry)\n    {\n        this.aabbGraph = aabbGraph;\n        this.owner = owner;\n        this.x = x;\n        this.y = y;\n        this.rx = rx;\n        this.ry = ry;\n    }\n\n    setPosition(x, y)\n    {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    setSize(width, height)\n    {\n        this.rx = width / 2;\n        this.ry = height / 2;\n        return this;\n    }\n\n    setHalfSize(rx, ry)\n    {\n        this.rx = rx;\n        this.ry = ry;\n        return this;\n    }\n}\n\n/**\n * Tests whether either {@link AxisAlignedBoundingBox} intersect one another.\n * \n * @param {AxisAlignedBoundingBox} a A box.\n * @param {AxisAlignedBoundingBox} b Another box in the same graph.\n * @returns {Boolean} If either box intersects the other.\n */\nfunction testAxisAlignedBoundingBox(a, b)\n{\n    return !(Math.abs(a.x - b.x) > (a.rx + b.rx))\n        && !(Math.abs(a.y - b.y) > (a.ry + b.ry));\n}\n\n/**\n * @typedef {String} EntityId\n */\n\nconst DEFAULT_PROPS = {};\n\n/**\n * Handles all entity and component mappings.\n */\nclass EntityManager\n{\n    /**\n     * Constructs an empty entity manager with the given factories.\n     * \n     * @param {Object} [opts={}] Any additional options.\n     * @param {Object} [opts.componentFactoryMap={}] An object map of each component to its factory.\n     * @param {Boolean} [opts.strictMode=false] Whether to enable error checking (and throwing).\n     */\n    constructor(opts = {})\n    {\n        const { componentFactoryMap = {}, strictMode = false } = opts;\n        let factoryMap = {};\n        let instances = {};\n        for(let componentName in componentFactoryMap)\n        {\n            let factoryOption = componentFactoryMap[componentName];\n            let create, destroy;\n            try\n            {\n                create = 'create' in factoryOption\n                    ? factoryOption.create\n                    : (typeof factoryOption === 'function'\n                        ? factoryOption\n                        : null);\n                destroy = 'destroy' in factoryOption\n                    ? factoryOption.destroy\n                    : null;\n            }\n            catch(e)\n            {\n                throw new Error('Unsupported component factory options.');\n            }\n            factoryMap[componentName] = { owner: factoryOption, create, destroy };\n            instances[componentName] = {};\n        }\n        this.factoryMap = factoryMap;\n        this.instances = instances;\n        this.entities = new Set();\n        this.nextAvailableEntityId = 1;\n        this.strictMode = strictMode;\n    }\n\n    create(entityId = undefined)\n    {\n        if (typeof entityId !== 'undefined')\n        {\n            if (typeof entityId !== 'string')\n            {\n                throw new Error('Invalid type for entity id - must be a string.');\n            }\n        }\n        else\n        {\n            entityId = String(this.nextAvailableEntityId++);\n        }\n        \n        if (!this.entities.has(entityId))\n        {\n            this.entities.add(entityId);\n            return entityId;\n        }\n        else\n        {\n            throw new Error(`Invalid duplicate entity id '${entityId}' allocated for new entity.`)\n        }\n    }\n\n    destroy(entityId)\n    {\n        for(let componentName in this.instances)\n        {\n            this.remove(componentName, entityId);\n        }\n        this.entities.delete(entityId);\n    }\n\n    add(componentName, entityId, props = undefined)\n    {\n        if (!(componentName in this.factoryMap))\n        {\n            if (this.strictMode)\n            {\n                throw new Error(`Missing component factory for '${componentName}'.`);\n            }\n            else\n            {\n                this.factoryMap[componentName] = {\n                    owner: {},\n                    create: null,\n                    destroy: null,\n                };\n                this.instances[componentName] = {};\n            }\n        }\n\n        if (!(componentName in this.instances))\n        {\n            throw new Error(`Missing component instance mapping for '${componentName}'.`);\n        }\n\n        if (!this.entities.has(entityId))\n        {\n            throw new Error(`Entity '${entityId}' does not exist.`);\n        }\n\n        if (this.instances[componentName][entityId])\n        {\n            throw new Error(`Entity already has component '${componentName}'.`);\n        }\n\n        const { create } = this.factoryMap[componentName];\n        let result = create\n            ? create(typeof props !== 'undefined' ? props : DEFAULT_PROPS, entityId, this)\n            : (props\n                ? {...props}\n                : {});\n        if (result)\n        {\n            this.instances[componentName][entityId] = result;\n        }\n    }\n\n    remove(componentName, entityId)\n    {\n        if (!(componentName in this.factoryMap))\n        {\n            if (this.strictMode)\n            {\n                throw new Error(`Missing component factory for '${componentName}'.`);\n            }\n            else\n            {\n                return;\n            }\n        }\n\n        if (!(componentName in this.instances))\n        {\n            throw new Error(`Missing component instance mapping for '${componentName}'.`);\n        }\n        \n        let entityComponents = this.instances[componentName];\n        let componentValues = entityComponents[entityId];\n        if (componentValues)\n        {\n            entityComponents[entityId] = null;\n    \n            const { destroy } = this.factoryMap[componentName];\n            if (destroy) destroy(componentValues, entityId, this);\n        }\n    }\n\n    /**\n     * Finds the component for the given entity.\n     * \n     * @param {String} componentName The name of the target component.\n     * @param {EntityId} entityId The id of the entity to look in.\n     * @returns {Object} The component found. If it does not exist, null\n     * is returned instead.\n     */\n    get(componentName, entityId)\n    {\n        if (!(componentName in this.instances))\n        {\n            throw new Error(`Missing component instance mapping for '${componentName}'.`);\n        }\n        \n        const entityComponents = this.instances[componentName];\n        return entityComponents[entityId] || null;\n    }\n    \n    /**\n     * Checks whether the entity has the component.\n     * \n     * @param {String} componentName The name of the target component.\n     * @param {EntityId} entityId The id of the entity to look in.\n     * @returns {Boolean} Whether the component exists for the entity.\n     */\n    has(componentName, entityId)\n    {\n        return componentName in this.instances && Boolean(this.instances[componentName][entityId]);\n    }\n\n    clear(componentName)\n    {\n        if (!(componentName in this.factoryMap))\n        {\n            if (this.strictMode)\n            {\n                throw new Error(`Missing component factory for '${componentName}'.`);\n            }\n            else\n            {\n                return;\n            }\n        }\n\n        if (!(componentName in this.instances))\n        {\n            throw new Error(`Missing component instance mapping for '${componentName}'.`);\n        }\n\n        let entityComponents = this.instances[componentName];\n        const { destroy } = this.factoryMap[componentName];\n        if (destroy)\n        {\n            for(let entityId in entityComponents)\n            {\n                let componentValues = entityComponents[entityId];\n                entityComponents[entityId] = null;\n\n                destroy(componentValues, componentName, entityId, this);\n            }\n        }\n        this.instances[componentName] = {};\n    }\n\n    /**\n     * Gets all the entity ids.\n     * \n     * @returns {Set<EntityId>} The set of entity ids.\n     */\n    getEntityIds()\n    {\n        return this.entities;\n    }\n\n    getComponentFactory(componentName)\n    {\n        if (componentName in this.factoryMap)\n        {\n            return this.factoryMap[componentName].owner;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getComponentNames()\n    {\n        return Object.keys(this.factoryMap);\n    }\n\n    getComponentEntityIds(componentName)\n    {\n        if (componentName in this.instances)\n        {\n            return Object.keys(this.instances[componentName]);\n        }\n        else\n        {\n            return [];\n        }\n    }\n    \n    getComponentInstances(componentName)\n    {\n        if (componentName in this.instances)\n        {\n            return Object.values(this.instances[componentName]);\n        }\n        else\n        {\n            return [];\n        }\n    }\n}\n\nconst MAX_DEPTH_LEVEL = 100;\n\n/**\n * @callback WalkCallback Called for each node, before traversing its children.\n * @param {Object} child The current object.\n * @param {SceneNode} childNode The representative node for the current object.\n * @returns {WalkBackCallback|Boolean} If false, the walk will skip\n * the current node's children. If a function, it will be called after\n * traversing down all of its children.\n * \n * @callback WalkBackCallback Called if returned by {@link WalkCallback}, after\n * traversing the current node's children.\n * @param {Object} child The current object.\n * @param {SceneNode} childNode The representative node for the current object.\n * \n * @callback WalkChildrenCallback Called for each level of children, before\n * traversing its children. This is usually used to determine visit order.\n * @param {Array<SceneNode>} childNodes A mutable list of child nodes to be\n * visited.\n * @param {SceneNode} childNode The representative node for the current object.\n * This is also the parent of these children.\n */\n\n/**\n * A tree-like graph of nodes with n-children.\n */\nclass SceneGraph\n{\n    /**\n     * Constructs an empty scene graph with nodes to be created from the given constructor.\n     * \n     * @param {Object} [opts] Any additional options.\n     * @param {typeof SceneNode} [opts.nodeConstructor] The scene node constructor that make up the graph.\n     */\n    constructor(opts = {})\n    {\n        this.nodeConstructor = opts.nodeConstructor || SceneNode;\n        this.nodes = new Map();\n\n        this.rootNodes = [];\n    }\n\n    /**\n     * Adds an object to the scene graph.\n     * \n     * @param {Object} child The child object to add.\n     * @param {Object} [parent=null] The parent object to add the child under. If null,\n     * the child will be inserted under the root node.\n     * @returns {SceneNode} The scene node that represents the added child object.\n     */\n    add(child, parent = null)\n    {\n        if (child === null) throw new Error(`Cannot add null as child to scene graph.`);\n        if (parent === null || this.nodes.has(parent))\n        {\n            let parentNode = parent === null ? null : this.nodes.get(parent);\n            if (this.nodes.has(child))\n            {\n                let childNode = this.nodes.get(child);\n                detach(childNode.parentNode, childNode, this);\n                attach(parentNode, childNode, this);\n                return childNode;\n            }\n            else\n            {\n                let childNode = new (this.nodeConstructor)(this, child, null, []);\n                this.nodes.set(child, childNode);\n                attach(parentNode, childNode, this);\n                return childNode;\n            }\n        }\n        else\n        {\n            throw new Error(`No node in scene graph exists for parent.`);\n        }\n    }\n\n    /**\n     * Removes an object from the scene graph, along with all\n     * of its descendents.\n     * \n     * @param {Object} child The child object to remove. If null, will clear\n     * the entire graph.\n     * @returns {Boolean} Whether any objects were removed from the scene.\n     */\n    remove(child)\n    {\n        if (child === null)\n        {\n            this.clear();\n            return true;\n        }\n        else if (this.nodes.has(child))\n        {\n            let childNode = this.nodes.get(child);\n            let parentNode = childNode.parentNode;\n            detach(parentNode, childNode, this);\n            walkImpl(this, childNode, 0, descendent => {\n                this.nodes.delete(descendent);\n            });\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    /**\n     * Replaces the target object with the new child object in the graph,\n     * inheriting its parent and children.\n     * \n     * @param {Object} target The target object to replace. Cannot be null.\n     * @param {Object} child The object to replace with. If null,\n     * it will remove the target and the target's parent will adopt\n     * its grandchildren.\n     */\n    replace(target, child)\n    {\n        if (target === null) throw new Error('Cannot replace null for child in scene graph.');\n        if (this.nodes.has(target))\n        {\n            let targetNode = this.nodes.get(target);\n            let targetParent = targetNode.parentNode;\n            let targetChildren = [...targetNode.childNodes];\n\n            // Remove target node from the graph\n            detach(targetParent, targetNode, this);\n\n            // Begin grafting the grandchildren by first removing...\n            targetNode.childNodes.length = 0;\n\n            if (child === null)\n            {\n                // Reattach all grandchildren to target parent.\n                if (targetParent === null)\n                {\n                    // As root children.\n                    this.rootNodes.push(...targetChildren);\n                }\n                else\n                {\n                    // As regular children.\n                    targetParent.childNodes.push(...targetChildren);\n                }\n            }\n            else\n            {\n                // Reattach all grandchildren to new child.\n                let childNode;\n                if (this.nodes.has(child))\n                {\n                    childNode = this.nodes.get(child);\n\n                    // Remove child node from prev parent\n                    detach(childNode.parentNode, childNode, this);\n\n                    // ...and graft them back.\n                    childNode.childNodes.push(...targetChildren);\n                }\n                else\n                {\n                    childNode = new (this.nodeConstructor)(this, child, null, targetChildren);\n                    this.nodes.set(child, childNode);\n                }\n\n                // And reattach target parent to new child.\n                attach(targetParent, childNode, this);\n            }\n            \n            // ...and graft them back.\n            for(let targetChild of targetChildren)\n            {\n                targetChild.parentNode = targetParent;\n            }\n\n            return child;\n        }\n        else if (target === null)\n        {\n            return this.replace(this.root.owner, child);\n        }\n        else\n        {\n            throw new Error('Cannot find target object to replace in scene graph.');\n        }\n    }\n\n    /** Removes all nodes from the graph. */\n    clear()\n    {\n        this.nodes.clear();\n        this.rootNodes.length = 0;\n    }\n\n    /**\n     * Gets the scene node for the given object.\n     * \n     * @param {Object} child The object to retrieve the node for.\n     * @returns {SceneNode} The scene node that represents the object.\n     */\n    get(child)\n    {\n        return this.nodes.get(child);\n    }\n\n    /**\n     * Walks through every child node in the graph for the given\n     * object's associated node.\n     * \n     * @param {WalkCallback} callback The function called for each node\n     * in the graph, in ordered traversal from parent to child.\n     * @param {Object} [opts={}] Any additional options.\n     * @param {Boolean} [opts.childrenOnly=true] Whether to skip traversing\n     * the first node, usually the root, and start from its children instead.\n     * @param {Function} [opts.childrenCallback] The function called before\n     * walking through the children. This is usually used to determine the\n     * visiting order.\n     */\n    walk(from, callback, opts = {})\n    {\n        const { childrenOnly = true, childrenCallback } = opts;\n        if (from === null)\n        {\n            sortChildrenForWalk(this.nodes, this.rootNodes, null, childrenCallback);\n            for(let childNode of this.rootNodes)\n            {\n                walkImpl(this, childNode, 0, callback, childrenCallback);\n            }\n        }\n        else\n        {\n            const fromNode = this.get(from);\n            if (!fromNode)\n            {\n                if (childrenOnly)\n                {\n                    sortChildrenForWalk(this.nodes, fromNode.childNodes, fromNode, childrenCallback);\n                    for(let childNode of fromNode.childNodes)\n                    {\n                        walkImpl(this, childNode, 0, callback, childrenCallback);\n                    }\n                }\n                else\n                {\n                    walkImpl(this, fromNode, 0, callback, childrenCallback);\n                }\n            }\n            else\n            {\n                throw new Error(`No node in scene graph exists for walk start.`);\n            }\n        }\n    }\n}\n\nfunction attach(parentNode, childNode, sceneGraph)\n{\n    if (parentNode === null)\n    {\n        sceneGraph.rootNodes.push(childNode);\n        childNode.parentNode = null;\n    }\n    else\n    {\n        parentNode.childNodes.push(childNode);\n        childNode.parentNode = parentNode;\n    }\n}\n\nfunction detach(parentNode, childNode, sceneGraph)\n{\n    if (parentNode === null)\n    {\n        let index = sceneGraph.rootNodes.indexOf(childNode);\n        sceneGraph.rootNodes.splice(index, 1);\n        childNode.parentNode = undefined;\n    }\n    else\n    {\n        let index = parentNode.childNodes.indexOf(childNode);\n        parentNode.childNodes.splice(index, 1);\n        childNode.parentNode = undefined;\n    }\n}\n\n/**\n * Walk down from the parent and through all its descendents.\n * \n * @param {SceneNode} parentNode The parent node to start walking from.\n * @param {Number} level The current call depth level. This is used to limit the call stack.\n * @param {WalkCallback} nodeCallback The function called on each visited node.\n * @param {WalkChildrenCallback} [childrenCallback] The function called before\n * walking through the children. This is usually used to determine the visiting order.\n */\nfunction walkImpl(sceneGraph, parentNode, level, nodeCallback, childrenCallback = undefined)\n{\n    if (level >= MAX_DEPTH_LEVEL) return;\n\n    let result = nodeCallback(parentNode.owner, parentNode);\n    if (result === false) return;\n\n    let nextNodes = parentNode.childNodes;\n    if (childrenCallback)\n    {\n        sortChildrenForWalk(sceneGraph.nodes, nextNodes, parentNode, childrenCallback);\n    }\n\n    for(let childNode of nextNodes)\n    {\n        walkImpl(childNode, level + 1, nodeCallback);\n    }\n\n    if (typeof result === 'function')\n    {\n        result(parentNode.owner, parentNode);\n    }\n}\n\nfunction sortChildrenForWalk(nodeMapping, childNodes, parentNode, childrenCallback)\n{\n    let nextChildren = childNodes.map(node => node.owner);\n    childrenCallback(nextChildren, parentNode);\n    for(let i = 0; i < nextChildren.length; ++i)\n    {\n        childNodes[i] = nodeMapping.get(nextChildren[i]);\n    }\n    childNodes.length = nextChildren.length;\n}\n\n/**\n * A representative node to keep relational metadata for any object in\n * the {@link SceneGraph}.\n */\nclass SceneNode\n{\n    /**\n     * Constructs a scene node with the given parent and children. This assumes\n     * the given parent and children satisfy the correctness constraints of the\n     * graph. In other words, This does not validate nor modify other nodes,\n     * such as its parent or children, to maintain correctness. That must be\n     * handled externally.\n     * \n     * @param {SceneGraph} sceneGraph The scene graph this node belongs to.\n     * @param {Object} owner The owner object.\n     * @param {SceneNode} parentNode The parent node.\n     * @param {Array<SceneNode>} childNodes The list of child nodes.\n     */\n    constructor(sceneGraph, owner, parentNode, childNodes)\n    {\n        this.sceneGraph = sceneGraph;\n        this.owner = owner;\n\n        this.parentNode = parentNode;\n        this.childNodes = childNodes;\n    }\n}\n\nexport { ApplicationLoop as A, BoxRenderer as B, EntityManager as E, Game$1 as G, ImageLoader as I, JSONLoader as J, OBJLoader as O, QuadTree as Q, SceneGraph as S, TextLoader as T, AssetLoader as a, Audio as b, AxisAlignedBoundingBox as c, AxisAlignedBoundingBoxGraph as d, ByteLoader as e, IntersectionHelper as f, IntersectionResolver as g, IntersectionWorld as h, SceneNode as i, SpriteRenderer as j, testAxisAlignedBoundingBox as t };\n","// https://webglfundamentals.org/webgl/lessons/webgl-fundamentals.html\n\nimport { AssetLoader } from './lib.js';\n\ndocument.addEventListener('DOMContentLoaded', main);\n\nasync function main()\n{\n    const display = document.querySelector('display-port');\n    const input = document.querySelector('input-context');\n\n    const CursorX = input.getInput('cursorX');\n    const CursorY = input.getInput('cursorY');\n\n    const gl = display.canvas.getContext('webgl');\n    if (!gl)\n    {\n        throw new Error('Your browser does not support webgl.');\n    }\n\n    const vertexShaderSource = await AssetLoader.loadAsset('text:main.vert');\n    const fragmentShaderSource = await AssetLoader.loadAsset('text:main.frag');\n    const shaderProgram = Program(gl)\n        .shader(gl.VERTEX_SHADER, vertexShaderSource)\n        .shader(gl.FRAGMENT_SHADER, fragmentShaderSource)\n        .link();\n    const positionAttributeLocation = gl.getAttribLocation(shaderProgram, 'a_position');\n    const colorUniformLocation = gl.getUniformLocation(shaderProgram, 'u_color');\n    \n    const positions = [\n        0, 0,\n        0, 0.5,\n        0.5, 0,\n    ];\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n    display.addEventListener('frame', e => {\n        const dt = (e.detail.deltaTime / 1000) * 60;\n\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.useProgram(shaderProgram);\n        {\n            gl.uniform4f(colorUniformLocation, 1 * CursorX.value, 1 * CursorY.value, 0.5, 1);\n            gl.enableVertexAttribArray(positionAttributeLocation);\n            gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n            {\n                const size = 2;\n                const type = gl.FLOAT;\n                const normalize = false;\n                const stride = 0;\n                const offset = 0;\n                gl.vertexAttribPointer(positionAttributeLocation, size, type, normalize, stride, offset);\n            }\n            gl.drawArrays(gl.TRIANGLES, 0, 3);\n        }\n    });\n}\n\nfunction createShader(gl, type, shaderSource)\n{\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n\n    let status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (status)\n    {\n        return shader;\n    }\n\n    console.error(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n}\n\nfunction createShaderProgram(gl, program, shaders)\n{\n    // Attach to the program.\n    for(let shader of shaders)\n    {\n        gl.attachShader(program, shader);\n    }\n\n    // Link'em!\n    gl.linkProgram(program);\n\n    // Don't forget to clean up the shaders! It's no longer needed.\n    for(let shader of shaders)\n    {\n        gl.detachShader(program, shader);\n        gl.deleteShader(shader);\n    }\n\n    let status = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (status)\n    {\n        return program;\n    }\n    \n    console.error(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n}\n\nfunction Program(gl)\n{\n    let program = gl.createProgram();\n    let shaders = [];\n    \n    return {\n        shader(type, shaderSource)\n        {\n            let shader = createShader(gl, type, shaderSource);\n            shaders.push(shader);\n            return this;\n        },\n        link()\n        {\n            createShaderProgram(gl, program, shaders);\n            shaders.length = 0;\n            return program;\n        }\n    };\n}\n"],"names":["INNER_HTML","INNER_STYLE","TEMPLATE_KEY","STYLE_KEY","INNER_HTML$1","INNER_STYLE$1","TEMPLATE_KEY$1","STYLE_KEY$1"],"mappings":";;;IAAA,MAAM,YAAY,GAAG,SAAS,CAAC;IAC/B,MAAM,WAAW,GAAG,QAAQ,CAAC;IAC7B,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,MAAM,YAAY,GAAG,SAAS,CAAC;AAC/B;IACA,MAAM,YAAY,GAAG,YAAY,CAAC;IAClC,MAAM,aAAa,GAAG,GAAG,CAAC;IAC1B,MAAM,cAAc,GAAG,GAAG,CAAC;AAC3B;IACA,MAAM,UAAU,GAAG,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,CAAC;IACR,MAAM,WAAW,GAAG,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,YAAY,CAAC;AAC5B;AACA;AACA;AACA;AACA,aAAa,EAAE,QAAQ,CAAC,kBAAkB,EAAE,WAAW,CAAC,kBAAkB,EAAE,YAAY,CAAC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,CAAC;AACH;IACA,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACxC,MAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,WAAW,SAAS,WAAW;IACrC;IACA,IAAI,YAAY,YAAY,CAAC;IAC7B,IAAI;IACJ,QAAQ,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAC1D,QAAQ,QA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"}