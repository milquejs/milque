{"version":3,"file":"milque-mogli.cjs.js","sources":["../src/GLHelper.js","../src/buffer/BufferBuilder.js","../src/buffer/BufferInfo.js","../src/buffer/BufferEnums.js","../src/program/ProgramActives.js","../src/program/ProgramAttributeHelper.js","../src/program/ProgramAttributeFunctions.js","../src/program/ProgramAttributeInfo.js","../src/program/ProgramHelper.js","../src/program/ProgramInfoHelper.js","../src/program/ProgramUniformFunctions.js","../src/program/ProgramUniformInfo.js","../src/buffer/BufferInfoHelper.js","../src/buffer/BufferHelper.js","../src/program/ProgramInfo.js","../src/program/ProgramBuilder.js","../src/buffer/BufferInfoBuilder.js","../src/program/ProgramAttributeEnums.js","../src/program/ProgramInfoBuilder.js","../src/program/ProgramUniformEnums.js"],"sourcesContent":["/**\n * Checks whether the context supports WebGL2 features.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @returns {boolean} Whether WebGL2 is supported.\n */\nexport function isWebGL2Supported(gl) {\n  return (\n    typeof WebGL2RenderingContext !== 'undefined' &&\n    gl instanceof WebGL2RenderingContext\n  );\n}\n","import { isWebGL2Supported } from '../GLHelper.js';\n\nexport class BufferDataContext {\n  /**\n   * @param {WebGLRenderingContextBase} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   */\n  constructor(gl, target) {\n    this.gl = gl;\n    this.target = target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferDataContext}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    const gl = this.gl;\n    const target = this.target;\n    if (typeof srcDataOrSize === 'number') {\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferData(target, srcDataOrSize, usage || gl.STATIC_DRAW);\n    } else {\n      if (!ArrayBuffer.isView(srcDataOrSize))\n        throw new Error('Source data must be a typed array.');\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferData(target, srcDataOrSize, usage || gl.STATIC_DRAW);\n    }\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferDataContext}\n   */\n  subData(\n    srcData,\n    dstOffset = 0,\n    srcOffset = undefined,\n    srcLength = undefined\n  ) {\n    const gl = this.gl;\n    const target = this.target;\n    if (!ArrayBuffer.isView(srcData)) {\n      throw new Error('Source data must be a typed array.');\n    } else if (typeof srcOffset !== 'undefined') {\n      if (isWebGL2Supported(gl)) {\n        /** @type {WebGL2RenderingContext} */\n        (gl).bufferSubData(target, dstOffset, srcData, srcOffset, srcLength);\n      } else {\n        // HACK: `subarray()` is in ALL TypedArrays, but not in BufferSource\n        const srcSubData = srcLength\n          // @ts-ignore\n          ? srcData.subarray(srcOffset, srcOffset + srcLength)\n          // @ts-ignore\n          : srcData.subarray(srcOffset);\n        /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n        (gl).bufferSubData(target, dstOffset, srcSubData);\n      }\n    } else {\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferSubData(target, dstOffset, srcData);\n    }\n    return this;\n  }\n}\n\nexport class BufferBuilder {\n  /**\n   * @param {WebGLRenderingContext} gl The webgl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {WebGLBuffer} [buffer] The buffer handle. If undefined, a\n   * new buffer will be created.\n   */\n  constructor(gl, target, buffer = undefined) {\n    /** @private */\n    this.dataContext = new BufferDataContext(gl, target);\n    this.handle = buffer || gl.createBuffer();\n    gl.bindBuffer(target, this.handle);\n  }\n\n  get gl() {\n    return this.dataContext.gl;\n  }\n\n  get target() {\n    return this.dataContext.target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferBuilder}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    this.dataContext.data(srcDataOrSize, usage);\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferBuilder}\n   */\n  subData(\n    srcData,\n    dstOffset = 0,\n    srcOffset = undefined,\n    srcLength = undefined\n  ) {\n    this.dataContext.subData(srcData, dstOffset, srcOffset, srcLength);\n    return this;\n  }\n\n  /** @returns {WebGLBuffer} */\n  build() {\n    return this.handle;\n  }\n}\n","import { BufferDataContext } from './BufferBuilder.js';\n\nexport class BufferInfo {\n  /**\n   * @param {WebGLRenderingContextBase} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {GLenum} bufferType The buffer data type. Usually, this is\n   * `gl.FLOAT` for array buffers or `gl.UNSIGNED_SHORT` for element\n   * array buffers. It must be either `gl.BYTE`, `gl.UNSIGNED_BYTE`,\n   * `gl.SHORT`, `gl.UNSIGNED_SHORT`, `gl.FLOAT`, or `gl.HALF_FLOAT`\n   * for WebGL2.\n   * @param {WebGLBuffer} buffer The buffer handle.\n   */\n  constructor(gl, target, bufferType, buffer) {\n    this.gl = gl;\n    this.target = target;\n    this.handle = buffer;\n    this.type = bufferType;\n\n    /** @private */\n    this.bindContext = new BufferDataContext(gl, this.target);\n  }\n\n  bind(gl) {\n    gl.bindBuffer(this.target, this.handle);\n    this.bindContext.gl = gl;\n    return this.bindContext;\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\nexport const BufferEnums = {\n  // WebGL1\n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  INT: 0x1404,\n  UNSIGNED_INT: 0x1405,\n  FLOAT: 0x1406,\n  // WebGL2\n  HALF_FLOAT: 0x140b,\n};\n","/**\n * Get list of parameter infos for all active uniforms in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get the active uniforms from.\n * @returns {Array<WebGLActiveInfo>} An array of active uniforms.\n */\nexport function getActiveUniforms(gl, program) {\n  let result = [];\n  const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < uniformCount; ++i) {\n    let uniformInfo = gl.getActiveUniform(program, i);\n    if (!uniformInfo) break;\n    result.push(uniformInfo);\n  }\n  return result;\n}\n\n/**\n * Get list of parameter infos for all active attributes in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get the active attributes from.\n * @returns {Array<WebGLActiveInfo>} An array of active attributes.\n */\nexport function getActiveAttribs(gl, program) {\n  let result = [];\n  const attributeCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < attributeCount; ++i) {\n    let attributeInfo = gl.getActiveAttrib(program, i);\n    if (!attributeInfo) continue;\n    result.push(attributeInfo);\n  }\n  return result;\n}\n","/**\n * Get the number of expected elements in the attribute vertex type.\n *\n * @param {WebGLRenderingContextBase} gl The gl context.\n * @param {GLenum} attribType The attribute gl type.\n * @returns {number} The number of expected elements in the attribute vertex type.\n */\nexport function getAttribVertexSize(gl, attribType) {\n  // https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveAttrib.xml\n  switch (attribType) {\n    case gl.FLOAT:\n    case gl.INT:\n    case gl.UNSIGNED_INT:\n    case gl.BOOL:\n      return 1;\n    case gl.FLOAT_VEC2:\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2:\n      return 2;\n    case gl.FLOAT_VEC3:\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3:\n      return 3;\n    case gl.FLOAT_VEC4:\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4:\n      return 4;\n    case gl.FLOAT_MAT2:\n      return 4;\n    case gl.FLOAT_MAT3:\n      return 9;\n    case gl.FLOAT_MAT4:\n      return 16;\n    default:\n      throw new Error('Invalid vertex attribute type.');\n  }\n}\n","import { isWebGL2Supported } from '../GLHelper.js';\nimport { getAttribVertexSize } from './ProgramAttributeHelper.js';\n\n/**\n * @callback AttributeFunction\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n */\n\n/**\n * Gets the attribute modifier function by attribute type. For vectors\n * of size 1, it accepts a single number value. For vectors of greater\n * size, it takes an array of numbers.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} attributeType The attribute data type.\n * @returns {AttributeFunction} The attribute modifier function.\n */\nexport function getAttributeFunction(gl, attributeType) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n    switch (attributeType) {\n        // WebGL1\n        case gl.FLOAT:\n        case gl.FLOAT_VEC2:\n        case gl.FLOAT_VEC3:\n        case gl.FLOAT_VEC4:\n            return attributeFloatBuffer;\n    }\n\n    if (isWebGL2Supported(gl)) {\n        const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n        switch (attributeType) {\n            case gl.INT:\n            case gl.INT_VEC2:\n            case gl.INT_VEC3:\n            case gl.INT_VEC4:\n            case gl.BOOL:\n            case gl.BOOL_VEC2:\n            case gl.BOOL_VEC3:\n            case gl.BOOL_VEC4:\n                return attributeIntBuffer;\n            case gl.FLOAT_MAT2:\n                return attributeFloatMat2Buffer;\n            case gl.FLOAT_MAT3:\n                return attributeFloatMat3Buffer;\n            case gl.FLOAT_MAT4:\n                return attributeFloatMat4Buffer;\n            // WebGL2\n            case gl2.UNSIGNED_INT:\n            case gl2.UNSIGNED_INT_VEC2:\n            case gl2.UNSIGNED_INT_VEC3:\n            case gl2.UNSIGNED_INT_VEC4:\n                return attributeUintBuffer;\n        }\n    }\n\n    throw new Error('Cannot find attribute function for gl enum.');\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatBuffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    this.bindBuffer(this.ARRAY_BUFFER, buffer);\n    this.enableVertexAttribArray(index);\n    this.vertexAttribPointer(index, vertexSize, bufferType, normalize, stride, offset);\n    if (divisor !== undefined) {\n        if (!isWebGL2Supported(this)) {\n            throw new Error('Cannot use attribute divisor in WebGL 1.');\n        }\n        const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n        gl2.vertexAttribDivisor(index, divisor);\n    }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\n function attributeIntBuffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    if (!isWebGL2Supported(this)) {\n        throw new Error('Cannot use attribute divisor in WebGL 1.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n    gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n    gl2.enableVertexAttribArray(index);\n    gl2.vertexAttribIPointer(index, vertexSize, bufferType, stride, offset);\n    if (divisor !== undefined) {\n        gl2.vertexAttribDivisor(index, divisor);\n    }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeUintBuffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    if (!isWebGL2Supported(this)) {\n        throw new Error('Cannot use attribute divisor in WebGL 1.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n    gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n    gl2.enableVertexAttribArray(index);\n    gl2.vertexAttribIPointer(index, vertexSize, bufferType, stride, offset);\n    if (divisor !== undefined) {\n        gl2.vertexAttribDivisor(index, divisor);\n    }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat2Buffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    // NOTE: Size along 1 dimension\n    let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT2);\n    // NOTE: Assumes a square matrix.\n    let matrixLength = matrixSize * matrixSize;\n    attributeFloatMatrixBufferImpl(matrixLength, matrixSize, index, buffer, vertexSize, bufferType, normalize, stride, offset, divisor);\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat3Buffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    // NOTE: Size along 1 dimension\n    let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT3);\n    // NOTE: Assumes a square matrix.\n    let matrixLength = matrixSize * matrixSize;\n    attributeFloatMatrixBufferImpl(matrixLength, matrixSize, index, buffer, vertexSize, bufferType, normalize, stride, offset, divisor);\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat4Buffer(index, buffer, vertexSize, bufferType, normalize = false, stride = 0, offset = 0, divisor = undefined) {\n    // NOTE: Size along 1 dimension\n    let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT4);\n    // NOTE: Assumes a square matrix.\n    let matrixLength = matrixSize * matrixSize;\n    attributeFloatMatrixBufferImpl(matrixLength, matrixSize, index, buffer, vertexSize, bufferType, normalize, stride, offset, divisor);\n}\n\n/**\n * @param {number} matrixLength\n * @param {number} matrixSize\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMatrixBufferImpl(matrixLength, matrixSize, index, buffer, vertexSize, bufferType, normalize, stride, offset, divisor) {\n    if (!isWebGL2Supported(this)) {\n        throw new Error('Cannot use attribute divisor in WebGL 1.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n    gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n    // Number of matrices in the buffer.\n    let matrixCount = vertexSize / matrixSize;\n    // The stride to each matrix\n    let matrixStride = matrixLength * vertexSize;\n    // The offset within each matrix data\n    let offsetPerMatrix = stride / matrixSize;\n    for(let i = 0; i < matrixSize; ++i) {\n        let ii = index + i;\n        gl2.enableVertexAttribArray(ii);\n        gl2.vertexAttribPointer(ii, matrixCount, bufferType, normalize, matrixStride, offset + offsetPerMatrix * i);\n        if (divisor !== undefined) {\n            gl2.vertexAttribDivisor(ii, divisor);\n        }\n    }\n}\n","import { getActiveAttribs } from './ProgramActives.js';\nimport { getAttributeFunction } from './ProgramAttributeFunctions.js';\nimport { getAttribVertexSize } from './ProgramAttributeHelper.js';\n\n/**\n * @typedef {import('./ProgramAttributeFunctions.js').AttributeFunction} AttributeFunction\n */\n\n/**\n * @typedef ActiveAttributeInfo\n * @property {GLenum} type\n * @property {number} length\n * @property {number} location\n * @property {number} size\n * @property {AttributeFunction} applier\n * @property {number|Float32List|Int32List|Uint32List} value\n */\n\n/**\n * Get map of all active attributes to their info in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get active attributes from.\n * @returns {Record<string, ActiveAttributeInfo>} An object mapping of attribute names to info.\n */\nexport function getActiveAttribsInfo(gl, program) {\n  /** @type {Record<string, ActiveAttributeInfo>} */\n  let result = {};\n  const activeAttributes = getActiveAttribs(gl, program);\n  for (let activeInfo of activeAttributes) {\n    const attributeName = activeInfo.name;\n    const attributeLength = activeInfo.size;\n    const attributeType = activeInfo.type;\n    const attributeLocation = gl.getAttribLocation(program, attributeName);\n    const attributeApplier = getAttributeFunction(gl, attributeType);\n    const attributeSize = getAttribVertexSize(gl, attributeType);\n    result[attributeName] = {\n      type: attributeType,\n      length: attributeLength,\n      location: attributeLocation,\n      size: attributeSize,\n      applier: attributeApplier,\n      set value([buffer, vertexSize, bufferType, normalize, stride, offset, divisor]) {\n        this.applier(this.location, buffer, vertexSize, bufferType, normalize, stride, offset, divisor);\n      }\n    };\n  }\n  return result;\n}\n","export * from './ProgramActives.js';\nexport * from './ProgramInfoHelper.js';\n\n/**\n * Create and compile shader from source text.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} shaderType The type of the shader. This is usually `gl.VERTEX_SHADER`\n * or `gl.FRAGMENT_SHADER`.\n * @param {string} shaderSource The shader source text.\n * @returns {WebGLShader} The compiled shader.\n */\nexport function createShader(gl, shaderType, shaderSource) {\n  let shader = gl.createShader(shaderType);\n  gl.shaderSource(shader, shaderSource);\n  gl.compileShader(shader);\n\n  let status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!status) {\n    let log = gl.getShaderInfoLog(shader) +\n      `\\nFailed to compile shader:\\n${shaderSource}`;\n    gl.deleteShader(shader);\n    throw new Error(log);\n  }\n  return shader;\n}\n\n/**\n * Link the given shader program from list of compiled shaders.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The shader program handle.\n * @param {Array<WebGLShader>} shaders The list of compiled shaders\n * to link in the program.\n * @returns {Promise<WebGLProgram>} The linked shader program.\n */\nexport async function createShaderProgram(gl, program, shaders) {\n  // Attach to the program.\n  for (let shader of shaders) {\n    gl.attachShader(program, shader);\n  }\n\n  // Link'em!\n  gl.linkProgram(program);\n\n  // Might be async...\n  const ext = gl.getExtension('KHR_parallel_shader_compile');\n  if (ext) {\n    const statusInterval = 1000 / 60;\n    let result;\n    do {\n      await new Promise((resolve, _) => setTimeout(resolve, statusInterval));\n      result = gl.getProgramParameter(program, ext.COMPLETION_STATUS_KHR);\n    } while (!result);\n  }\n\n  // Don't forget to clean up the shaders! It's no longer needed.\n  for (let shader of shaders) {\n    gl.detachShader(program, shader);\n    gl.deleteShader(shader);\n  }\n\n  let status = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!status) {\n    let log = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(log);\n  }\n  return program;\n}\n\n/**\n * Draw the currently bound render context.\n *\n * @param {WebGLRenderingContextBase} gl\n * @param {number} mode\n * @param {number} offset\n * @param {number} count\n * @param {WebGLBuffer} [elementBuffer]\n */\nexport function draw(gl, mode, offset, count, elementBuffer = undefined) {\n  if (elementBuffer) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.drawElements(mode, count, gl.UNSIGNED_SHORT, offset);\n  } else {\n    gl.drawArrays(mode, offset, count);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl\n * @param {WebGLProgram} program\n */\nexport function getProgramStatus(gl, program) {\n  return {\n    /** @type {GLboolean} */\n    linkStatus: gl.getProgramParameter(program, gl.LINK_STATUS),\n    /** @type {GLboolean} */\n    deleteStatus: gl.getProgramParameter(program, gl.DELETE_STATUS),\n    /** @type {GLboolean} */\n    validateStatus: gl.getProgramParameter(program, gl.VALIDATE_STATUS),\n    /** @type {string} */\n    infoLog: gl.getProgramInfoLog(program),\n  };\n}\n","import { isWebGL2Supported } from '../GLHelper.js';\nimport { getActiveAttribsInfo } from './ProgramAttributeInfo.js';\nimport { createShader, createShaderProgram } from './ProgramHelper.js';\nimport { getActiveUniformsInfo } from './ProgramUniformInfo.js';\n\n/**\n * @typedef {import('../buffer/BufferInfoHelper.js').BufferInfo} BufferInfo\n * @typedef {import('../buffer/BufferInfoHelper.js').VertexArrayObjectInfo} VertexArrayObjectInfo\n */\n\n/**\n * @typedef ProgramInfo\n * @property {WebGLProgram} handle\n * @property {Record<string, import('./ProgramUniformInfo.js').ActiveUniformInfo>} uniforms\n * @property {Record<string, import('./ProgramAttributeInfo.js').ActiveAttributeInfo>} attributes\n */\n\n/**\n * Assumes all shaders already compiled and linked successfully.\n * \n * @param {WebGLRenderingContextBase} gl \n * @param {WebGLProgram} program\n * @returns {ProgramInfo}\n */\nexport function createProgramInfo(gl, program) {\n    return {\n        handle: program,\n        attributes: getActiveAttribsInfo(gl, program),\n        uniforms: getActiveUniformsInfo(gl, program),\n    };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {WebGLProgram} program\n * @param {Array<string>} shaderSources\n * @param {Array<GLenum>} [shaderTypes]\n * @returns {Promise<WebGLProgram>}\n */\nexport async function linkProgramShaders(gl, program, shaderSources, shaderTypes = [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER]) {\n    let index = 0;\n    let shaders = [];\n    for(let shaderSource of shaderSources) {\n        if (index >= shaderTypes.length) {\n            throw new Error('Missing shader type for shader source.');\n        }\n        let shaderType = shaderTypes[index++];\n        let shader = createShader(gl, shaderType, shaderSource);\n        shaders.push(shader);\n    }\n    await createShaderProgram(gl, program, shaders);\n    return program;\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {ReturnType<createProgramInfo>} programInfo \n * @param {BufferInfo|VertexArrayObjectInfo} bufferOrVertexArrayObjectInfo \n */\nexport function bindProgramAttributes(gl, programInfo, bufferOrVertexArrayObjectInfo) {\n    if ('handle' in bufferOrVertexArrayObjectInfo && bufferOrVertexArrayObjectInfo.handle instanceof WebGLVertexArrayObject) {\n        if (!isWebGL2Supported(gl)) {\n            throw new Error('Vertex array objects are only supported in WebGL 2.');\n        }\n        const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n        let vaoInfo = /** @type {VertexArrayObjectInfo} */ (bufferOrVertexArrayObjectInfo);\n        gl2.bindVertexArray(vaoInfo.handle);\n    } else {\n        let bufferInfo = /** @type {BufferInfo} */ (bufferOrVertexArrayObjectInfo);\n        let attributeInfos = programInfo.attributes;\n        for(let name in attributeInfos) {\n            if (!(name in bufferInfo.attributes)) {\n                throw new Error(`Missing buffer for attribute '${name}'.`);\n            }\n            let attrib = bufferInfo.attributes[name];\n            let { location, applier } = attributeInfos[attrib.name];\n            applier.call(gl, location, attrib.buffer, attrib.size, attrib.type, attrib.normalize, attrib.stride, attrib.offset, attrib.divisor);\n        }\n        if (bufferInfo.element) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.element.buffer);\n        }\n    }\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {ReturnType<createProgramInfo>} programInfo \n * @param {Record<string, number|Float32List|Int32List|Uint32List>} uniforms\n */\nexport function bindProgramUniforms(gl, programInfo, uniforms) {\n    let uniformInfos = programInfo.uniforms;\n    for(let name in uniforms) {\n        let value = uniforms[name];\n        let { location, applier } = uniformInfos[name];\n        applier.call(gl, location, value);\n    }\n}\n","import { isWebGL2Supported } from '../GLHelper.js';\n\n/**\n * @callback UniformArrayFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {Float32List|Int32List|Uint32List} value The vector array.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n *\n * @callback UniformComponentFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {...number} values The components of the vector.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n *\n * @typedef {UniformArrayFunction|UniformComponentFunction} UniformFunction\n */\n\n/**\n * Gets the uniform modifier function by uniform type. For uniform vectors\n * of size 1, it accepts a single number value. For vectors of greater\n * size, it takes an array of numbers.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformFunction} The uniform modifier function.\n */\nexport function getUniformFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1f;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2fv;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3fv;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4fv;\n    case gl1.INT:\n      return gl1.uniform1i;\n    case gl1.INT_VEC2:\n      return gl1.uniform2iv;\n    case gl1.INT_VEC3:\n      return gl1.uniform3iv;\n    case gl1.INT_VEC4:\n      return gl1.uniform4iv;\n    case gl1.BOOL:\n      return gl1.uniform1i;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2iv;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3iv;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4iv;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2fv;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3fv;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4fv;\n    // WeblGL1 Samplers\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1i;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1ui;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2uiv;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3uiv;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4uiv;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3fv;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4fv;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2fv;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4fv;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2fv;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3fv;\n      // WeblGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1i;\n    }\n  }\n\n  throw new Error('Cannot find uniform function for gl enum.');\n}\n\n/**\n * Get the per component uniform modifier function by uniform type.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformComponentFunction} The per component uniform modifier function.\n */\nexport function getUniformComponentFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1f;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2f;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3f;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4f;\n    case gl1.INT:\n      return gl1.uniform1i;\n    case gl1.INT_VEC2:\n      return gl1.uniform2i;\n    case gl1.INT_VEC3:\n      return gl1.uniform3i;\n    case gl1.INT_VEC4:\n      return gl1.uniform4i;\n    case gl1.BOOL:\n      return gl1.uniform1i;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2i;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3i;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4i;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2f;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3f;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4f;\n    // WeblGL1 Samplers\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1i;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1ui;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2ui;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3ui;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4ui;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3f;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4f;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2f;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4f;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2f;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3f;\n      // WeblGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1i;\n    }\n  }\n\n  throw new Error('Cannot find per component uniform function for gl enum.');\n}\n\n/**\n * Get the array uniform modifier function by uniform type.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformArrayFunction} The array uniform modifier function.\n */\nexport function getUniformArrayFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1fv;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2fv;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3fv;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4fv;\n    case gl1.INT:\n      return gl1.uniform1iv;\n    case gl1.INT_VEC2:\n      return gl1.uniform2iv;\n    case gl1.INT_VEC3:\n      return gl1.uniform3iv;\n    case gl1.INT_VEC4:\n      return gl1.uniform4iv;\n    case gl1.BOOL:\n      return gl1.uniform1iv;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2iv;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3iv;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4iv;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2fv;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3fv;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4fv;\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1iv;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1uiv;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2uiv;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3uiv;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4uiv;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3fv;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4fv;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2fv;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4fv;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2fv;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3fv;\n      // WebGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1iv;\n    }\n  }\n\n  throw new Error('Cannot find array uniform function for gl enum.');\n}\n\nfunction uniformMatrix2fv(location, value) {\n  this.uniformMatrix2fv(location, false, value);\n}\n\nfunction uniformMatrix2f(location, m00, m01, m10, m11) {\n  this.uniformMatrix2fv(location, false, [m00, m01, m10, m11]);\n}\n\nfunction uniformMatrix3fv(location, value) {\n  this.uniformMatrix3fv(location, false, value);\n}\n\nfunction uniformMatrix3f(\n  location,\n  m00,\n  m01,\n  m02,\n  m10,\n  m11,\n  m12,\n  m20,\n  m21,\n  m22\n) {\n  this.uniformMatrix3fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m10,\n    m11,\n    m12,\n    m20,\n    m21,\n    m22,\n  ]);\n}\n\nfunction uniformMatrix4fv(location, value) {\n  this.uniformMatrix4fv(location, false, value);\n}\n\nfunction uniformMatrix4f(\n  location,\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23,\n  m30,\n  m31,\n  m32,\n  m33\n) {\n  this.uniformMatrix4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n    m20,\n    m21,\n    m22,\n    m23,\n    m30,\n    m31,\n    m32,\n    m33,\n  ]);\n}\n\nfunction uniformMatrix2x3fv(location, value) {\n  this.uniformMatrix2x3fv(location, false, value);\n}\n\nfunction uniformMatrix2x3f(location, m00, m01, m02, m10, m11, m12) {\n  this.uniformMatrix2x3fv(location, false, [m00, m01, m02, m10, m11, m12]);\n}\n\nfunction uniformMatrix2x4fv(location, value) {\n  this.uniformMatrix2x4fv(location, false, value);\n}\n\nfunction uniformMatrix2x4f(location, m00, m01, m02, m03, m10, m11, m12, m13) {\n  this.uniformMatrix2x4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n  ]);\n}\n\nfunction uniformMatrix3x2fv(location, value) {\n  this.uniformMatrix3x2fv(location, false, value);\n}\n\nfunction uniformMatrix3x2f(location, m00, m01, m10, m11, m20, m21) {\n  this.uniformMatrix3x2fv(location, false, [m00, m01, m10, m11, m20, m21]);\n}\n\nfunction uniformMatrix3x4fv(location, value) {\n  this.uniformMatrix3x4fv(location, false, value);\n}\n\nfunction uniformMatrix3x4f(\n  location,\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23\n) {\n  this.uniformMatrix3x4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n    m20,\n    m21,\n    m22,\n    m23,\n  ]);\n}\n\nfunction uniformMatrix4x2fv(location, value) {\n  this.uniformMatrix4x2fv(location, false, value);\n}\n\nfunction uniformMatrix4x2f(location, m00, m01, m10, m11, m20, m21, m30, m31) {\n  this.uniformMatrix4x2fv(location, false, [\n    m00,\n    m01,\n    m10,\n    m11,\n    m20,\n    m21,\n    m30,\n    m31,\n  ]);\n}\n\nfunction uniformMatrix4x3fv(location, value) {\n  this.uniformMatrix4x3fv(location, false, value);\n}\n\nfunction uniformMatrix4x3f(\n  location,\n  m00,\n  m01,\n  m02,\n  m10,\n  m11,\n  m12,\n  m20,\n  m21,\n  m22,\n  m30,\n  m31,\n  m32\n) {\n  this.uniformMatrix4x3fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m10,\n    m11,\n    m12,\n    m20,\n    m21,\n    m22,\n    m30,\n    m31,\n    m32,\n  ]);\n}\n","import { getUniformFunction } from './ProgramUniformFunctions.js';\nimport { getActiveUniforms } from './ProgramActives.js';\n\n/**\n * @typedef {import('./ProgramUniformFunctions').UniformFunction} UniformFunction\n */\n\n/**\n * @typedef ActiveUniformInfo\n * @property {number} type\n * @property {number} length\n * @property {WebGLUniformLocation} location\n * @property {UniformFunction} applier\n * @property {number|Float32List|Int32List|Uint32List} value\n */\n\n/**\n * Get map of all active uniforms to their info in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get active uniforms from.\n * @returns {Record<string, ActiveUniformInfo>} An object mapping of uniform names to info.\n */\nexport function getActiveUniformsInfo(gl, program) {\n  /** @type {Record<string, ActiveUniformInfo>} */\n  let result = {};\n  const activeUniforms = getActiveUniforms(gl, program);\n  for (let activeInfo of activeUniforms) {\n    const uniformName = activeInfo.name;\n    const uniformSize = activeInfo.size;\n    const uniformType = activeInfo.type;\n    const uniformLocation = gl.getUniformLocation(program, uniformName);\n    const uniformApplier = getUniformFunction(gl, uniformType);\n    result[uniformName] = {\n      type: uniformType,\n      length: uniformSize,\n      location: uniformLocation,\n      applier: uniformApplier,\n      set value(value) {\n        this.applier.call(gl, this.location, value);\n      }\n    };\n  }\n  return result;\n}\n","import { isWebGL2Supported } from '../GLHelper.js';\nimport { bindProgramAttributes } from '../program/ProgramInfoHelper.js';\nimport { getBufferTypeForBufferSource, getByteCountForBufferType, getTypedArrayForBufferType } from './BufferHelper.js';\n\n/**\n * @typedef {WebGLBuffer|BufferSource|Array<number>} AttribBufferLike\n * \n * @typedef ArrayAttribOption\n * @property {AttribBufferLike} buffer\n * @property {string} [name]\n * @property {number} [size]\n * @property {GLenum} [type]\n * @property {boolean} [normalize]\n * @property {number} [stride]\n * @property {number} [offset]\n * @property {number} [divisor]\n * @property {GLenum} [usage]\n * @property {number} [length]\n * \n * @typedef ElementAttribOption\n * @property {AttribBufferLike} buffer\n * @property {GLenum} [type]\n * @property {GLenum} [usage]\n * @property {number} [length]\n * \n * @typedef {ReturnType<createArrayAttrib>} ArrayAttrib\n * @typedef {ReturnType<createElementAttrib>} ElementAttrib\n * \n * @typedef BufferInfo\n * @property {Record<string, ArrayAttrib>} attributes\n * @property {number} vertexCount\n * @property {ElementAttrib} element\n * \n * @typedef VertexArrayObjectInfo\n * @property {WebGLVertexArrayObject} handle\n * @property {number} vertexCount\n * @property {ElementAttrib} element\n */\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {Record<string, ArrayAttribOption>} arrays \n * @param {ElementAttribOption} [elementArray]\n * @returns {BufferInfo}\n */\nexport function createBufferInfo(gl, arrays, elementArray = undefined) {\n    let attributes = createVertexAttributesInfo(/** @type {WebGLRenderingContext|WebGL2RenderingContext} */ (gl), arrays);\n    let element = createElementAttributeInfo(/** @type {WebGLRenderingContext|WebGL2RenderingContext} */ (gl), elementArray);\n    let vertexCount;\n    if (element) {\n        vertexCount = element.length;\n    } else {\n        let names = Object.keys(attributes);\n        if (names.length > 0) {\n            let a = attributes[names[0]];\n            vertexCount = Math.trunc(a.length / a.size);\n        } else {\n            vertexCount = 0;\n        }\n    }\n    return {\n        attributes,\n        element,\n        vertexCount,\n    };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {BufferInfo} bufferInfo \n * @param {Array<import('../program/ProgramInfoHelper.js').ProgramInfo>} programInfos\n * @returns {VertexArrayObjectInfo}\n */\nexport function createVertexArrayInfo(gl, bufferInfo, programInfos) {\n    if (!isWebGL2Supported(gl)) {\n        throw new Error('Vertex array objects is only supported on WebGL2.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    let vao = gl2.createVertexArray();\n    gl2.bindVertexArray(vao);\n    for(let programInfo of programInfos) {\n        bindProgramAttributes(gl2, programInfo, bufferInfo);\n    }\n    gl2.bindVertexArray(null);\n    return {\n        handle: vao,\n        element: bufferInfo.element,\n        vertexCount: bufferInfo.vertexCount,\n    };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {BufferInfo|VertexArrayObjectInfo} bufferOrVertexArrayObjectInfo \n */\nexport function drawBufferInfo(gl, bufferOrVertexArrayObjectInfo, mode = gl.TRIANGLES, offset = 0, vertexCount = bufferOrVertexArrayObjectInfo.vertexCount, instanceCount = undefined) {\n    let element = bufferOrVertexArrayObjectInfo.element;\n    if (element) {\n        let elementType = element.type;\n        if (instanceCount !== undefined) {\n            if (!isWebGL2Supported(gl)) {\n                throw new Error('Instanced element drawing is only supported on WebGL2.');\n            }\n            const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n            gl2.drawElementsInstanced(mode, vertexCount, elementType, offset, instanceCount);\n        } else {\n            gl.drawElements(mode, vertexCount, elementType, offset);\n        }\n    } else {\n        if (instanceCount !== undefined) {\n            if (!isWebGL2Supported(gl)) {\n                throw new Error('Instanced array drawing is only supported on WebGL2.');\n            }\n            const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n            gl2.drawArraysInstanced(mode, offset, vertexCount, instanceCount);\n        } else {\n            gl.drawArrays(mode, offset, vertexCount);\n        }\n    }\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl \n * @param {ElementAttribOption} elementArray \n * @returns {ElementAttrib}\n */\nfunction createElementAttributeInfo(gl, elementArray = undefined) {\n    if (!elementArray) {\n        return null;\n    }\n    if (typeof elementArray !== 'object') {\n        throw new Error('Element attribute options must be an object.');\n    }\n    let {\n        type = gl.UNSIGNED_SHORT,\n        buffer,\n        usage = gl.STATIC_DRAW,\n        length,\n    } = /** @type {ElementAttribOption} */ (elementArray);\n\n    // Resolve buffer.\n    if (buffer instanceof WebGLBuffer) {\n        // Do nothing :)\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    } else if (ArrayBuffer.isView(buffer)) {\n        /** @type {BufferSource} */\n        let srcData = buffer;\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, srcData, usage);\n        if (type === undefined) {\n            type = getBufferTypeForBufferSource(gl, srcData);\n        }\n        if (length === undefined) {\n            // @ts-ignore\n            length = srcData.length;\n        }\n    } else if (Array.isArray(buffer)) {\n        /** @type {Array<number>} */\n        let array = buffer;\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(array), usage);\n        if (length === undefined) {\n            length = array.length;\n        }\n    } else if (typeof buffer === 'number') {\n        let size = buffer;\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, size, usage);\n        if (length === undefined) {\n            length = size;\n        }\n    } else {\n        throw new Error('Invalid buffer for element attribute options.');\n    }\n\n    // Resolve type.\n    if (type === undefined) {\n        type = gl.UNSIGNED_SHORT;\n    }\n\n    // Resolve length.\n    if (length === undefined) {\n        let bytes = gl.getBufferParameter(gl.ELEMENT_ARRAY_BUFFER, gl.BUFFER_SIZE);\n        length = Math.trunc(bytes / getByteCountForBufferType(gl, type));\n    }\n\n    return createElementAttrib(buffer, type, length);\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl \n * @param {Record<string, ArrayAttribOption>} arrays\n * @returns {Record<string, ArrayAttrib>}\n */\nfunction createVertexAttributesInfo(gl, arrays) {\n    /** @type {Record<string, ArrayAttrib>} */\n    let result = {};\n    for(let key of Object.keys(arrays)) {\n        let array = arrays[key];\n        if (!array) {\n            continue;\n        }\n        if (typeof array !== 'object') {\n            throw new Error('Array attribute options must be an object.');\n        }\n        let {\n            name = key,\n            buffer,\n            size = 3,\n            type,\n            normalize = false,\n            stride = 0,\n            offset = 0,\n            divisor = undefined,\n            usage = gl.STATIC_DRAW,\n            length,\n        } = /** @type {ArrayAttribOption} */ (array);\n\n        // Resolve buffer.\n        if (buffer instanceof WebGLBuffer) {\n            // Do nothing :)\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        } else if (ArrayBuffer.isView(buffer)) {\n            /** @type {BufferSource} */\n            let srcData = buffer;\n            buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, srcData, usage);\n            if (type === undefined) {\n                type = getBufferTypeForBufferSource(gl, srcData);\n            }\n            if (length === undefined) {\n                // @ts-ignore\n                length = srcData.length;\n            }\n        } else if (Array.isArray(buffer)) {\n            /** @type {Array<number>} */\n            let array = buffer;\n            if (type === undefined) {\n                type = gl.FLOAT;\n            }\n            if (length === undefined) {\n                length = array.length;\n            }\n            buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            let TypedArray = getTypedArrayForBufferType(gl, type);\n            gl.bufferData(gl.ARRAY_BUFFER, new TypedArray(array), usage);\n        } else if (typeof buffer === 'number') {\n            let size = buffer;\n            buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, size, usage);\n            if (length === undefined) {\n                length = size;\n            }\n        } else {\n            throw new Error(`Invalid buffer '${buffer}' for array attribute options.`);\n        }\n\n        // Resolve type.\n        if (type === undefined) {\n            type = gl.FLOAT;\n        }\n\n        // Resolve length.\n        if (length === undefined) {\n            let bytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n            length = Math.trunc(bytes / getByteCountForBufferType(gl, type));\n        }\n\n        // Resolve size.\n        if (size === undefined) {\n            size = tryVertexSize(name, length);\n        }\n        \n        result[name] = createArrayAttrib(name, buffer, length, size, type, normalize, stride, offset, divisor);\n    }\n    return result;\n}\n\n/**\n * @param {string} attribName \n * @param {number} arrayLength \n */\nfunction tryVertexSize(attribName, arrayLength) {\n    let result;\n    if (attribName.includes('texcoord')) {\n        result = 2;\n    } else if (attribName.includes('color')) {\n        result = 4;\n    } else {\n        result = 3;\n    }\n    if (arrayLength % result !== 0) {\n        throw new Error(`Could not determine vertex size - guessed ${result} but array length ${arrayLength} is not evenly divisible.`);\n    }\n    return result;\n}\n\n/**\n * @param {WebGLBuffer} buffer \n * @param {GLenum} type \n * @param {number} length\n */\nfunction createElementAttrib(buffer, type, length) {\n    return {\n        buffer,\n        type,\n        length,\n    };\n}\n\n/**\n * @param {string} name \n * @param {WebGLBuffer} buffer \n * @param {number} length\n * @param {number} size \n * @param {GLenum} type \n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n */\nfunction createArrayAttrib(name, buffer, length, size, type, normalize, stride, offset, divisor) {\n    return {\n        name,\n        buffer,\n        length,\n        size,\n        type,\n        normalize,\n        stride,\n        offset,\n        divisor,\n    };\n}\n","import { BufferEnums } from './BufferEnums.js';\nexport * from './BufferInfoHelper.js';\n\n/**\n * Creates a buffer source given the type and data.\n *\n * @param {WebGLRenderingContextBase} gl The gl context.\n * @param {GLenum} type The data type of the elements in the buffer. Usually,\n * this is `gl.FLOAT` for array buffers or `gl.UNSIGNED_SHORT` for element\n * array buffers. It must be either `gl.BYTE`, `gl.UNSIGNED_BYTE`, `gl.SHORT`,\n * `gl.UNSIGNED_SHORT`, `gl.FLOAT`, or `gl.HALF_FLOAT` for WebGL2.\n * @param {Array<number>} data The buffer source data array.\n * @returns {BufferSource} The typed array buffer containing the given data.\n */\nexport function createBufferSource(gl, type, data) {\n  const TypedArray = getTypedArrayForBufferType(gl, type);\n  return new TypedArray(data);\n}\n\n/**\n * Create a buffer with the given source.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The gl context.\n * @param {GLenum} target The buffer bind target. Usually, this is `gl.ARRAY_BUFFER` or\n * `gl.ELEMENT_ARRAY_BUFFER`.\n * @param {BufferSource} bufferSource The buffer source array.\n * @param {GLenum} [usage] The buffer usage hint. By default, this is `gl.STATIC_DRAW`.\n * @returns {WebGLBuffer} The created and bound data buffer.\n */\nexport function createBuffer(gl, target, bufferSource, usage = gl.STATIC_DRAW) {\n  if (!ArrayBuffer.isView(bufferSource))\n    throw new Error('Source data must be a typed array.');\n  let handle = gl.createBuffer();\n  gl.bindBuffer(target, handle);\n  gl.bufferData(target, bufferSource, usage);\n  return handle;\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {GLenum} bufferType\n */\nexport function getTypedArrayForBufferType(gl, bufferType) {\n  // NOTE: For WebGL2, gl.HALF_FLOAT (float16) does not have an associated TypedArray.\n  switch (bufferType) {\n    case gl.BYTE:\n      return Int8Array;\n    case gl.UNSIGNED_BYTE:\n      return Uint8Array;\n    case gl.SHORT:\n      return Int16Array;\n    case gl.UNSIGNED_SHORT:\n      return Uint16Array;\n    case gl.INT:\n      return Int32Array;\n    case gl.UNSIGNED_INT:\n      return Uint32Array;\n    case gl.FLOAT:\n      return Float32Array;\n    default:\n      throw new Error(`Cannot find valid typed array for buffer type '${bufferType}'.`);\n  }\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {BufferSource} bufferSource \n * @returns {GLenum}\n */\nexport function getBufferTypeForBufferSource(gl, bufferSource) {\n  if (bufferSource instanceof Int8Array) {\n    return gl.BYTE;\n  } else if (bufferSource instanceof Uint8Array) {\n    return gl.UNSIGNED_BYTE;\n  } else if (bufferSource instanceof Int16Array) {\n    return gl.SHORT;\n  } else if (bufferSource instanceof Uint16Array) {\n    return gl.UNSIGNED_SHORT;\n  } else if (bufferSource instanceof Int32Array) {\n    return gl.INT;\n  } else if (bufferSource instanceof Uint32Array) {\n    return gl.UNSIGNED_INT;\n  } else if (bufferSource instanceof Float32Array) {\n    return gl.FLOAT;\n  } else {\n    throw new Error('Cannot find valid data type for buffer source.');\n  }\n}\n\nconst BUFFER_TYPE_BYTE_COUNT = {\n  [BufferEnums.BYTE]: 1,\n  [BufferEnums.UNSIGNED_BYTE]: 1,\n  [BufferEnums.SHORT]: 2,\n  [BufferEnums.UNSIGNED_SHORT]: 2,\n  [BufferEnums.INT]: 4,\n  [BufferEnums.UNSIGNED_INT]: 4,\n  [BufferEnums.FLOAT]: 4,\n  [BufferEnums.HALF_FLOAT]: 2,\n};\nexport function getByteCountForBufferType(gl, bufferType) {\n  return BUFFER_TYPE_BYTE_COUNT[bufferType];\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {Int8ArrayConstructor\n * |Uint8ArrayConstructor\n * |Int16ArrayConstructor\n * |Uint16ArrayConstructor\n * |Int32ArrayConstructor\n * |Uint32ArrayConstructor\n * |Float32ArrayConstructor} typedArray \n * @returns {GLenum}\n */\nexport function getBufferTypeForTypedArray(gl, typedArray) {\n  // NOTE: For WebGL2, gl.HALF_FLOAT (float16) does not have an associated TypedArray.\n  switch (typedArray) {\n    case Int8Array:\n      return gl.BYTE;\n    case Uint8Array:\n      return gl.UNSIGNED_BYTE;\n    case Int16Array:\n      return gl.SHORT;\n    case Uint16Array:\n      return gl.UNSIGNED_SHORT;\n    case Int32Array:\n      return gl.INT;\n    case Uint32Array:\n      return gl.UNSIGNED_INT;\n    case Float32Array:\n      return gl.FLOAT;\n    default:\n      throw new Error('Cannot find valid buffer type for typed array.');\n  }\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {GLenum} target \n * @param {WebGLBuffer} buffer \n * @returns {GLenum}\n */\nexport function getBufferUsage(gl, target, buffer) {\n  gl.bindBuffer(target, buffer);\n  return gl.getBufferParameter(target, gl.BUFFER_USAGE);\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {GLenum} target \n * @param {WebGLBuffer} buffer \n * @returns {GLenum}\n */\nexport function getBufferByteCount(gl, target, buffer) {\n  gl.bindBuffer(target, buffer);\n  return gl.getBufferParameter(target, gl.BUFFER_SIZE);\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl \n * @param {GLenum} target \n * @param {WebGLBuffer} buffer \n * @returns {GLenum}\n */\nexport function getBufferLength(gl, target, buffer, type) {\n  return Math.trunc(getBufferByteCount(gl, target, buffer) / getByteCountForBufferType(gl, type));\n}\n","import { getActiveUniformsInfo } from './ProgramUniformInfo.js';\nimport { getActiveAttribsInfo } from './ProgramAttributeInfo.js';\nimport { draw } from './ProgramHelper.js';\n\nexport class ProgramInfo {\n  /**\n   * @param {WebGLRenderingContextBase} gl\n   * @param {WebGLProgram} program\n   */\n  constructor(gl, program) {\n    this.handle = program;\n\n    this.activeUniforms = getActiveUniformsInfo(gl, program);\n    this.activeAttributes = getActiveAttribsInfo(gl, program);\n\n    this.drawContext = new ProgramInfoDrawContext(gl, this);\n  }\n\n  /**\n   * Bind the program and prepare to draw. This returns the bound context\n   * that can modify the draw state.\n   *\n   * @param {WebGLRenderingContextBase} gl\n   * @returns {ProgramInfoDrawContext} The bound context to draw with.\n   */\n  bind(gl) {\n    gl.useProgram(this.handle);\n\n    this.drawContext.gl = gl;\n    return this.drawContext;\n  }\n}\n\nexport class ProgramInfoDrawContext {\n  constructor(gl, programInfo) {\n    this.gl = gl;\n    /** @private */\n    this.parent = programInfo;\n  }\n\n  uniform(uniformName, value) {\n    const activeUniforms = this.parent.activeUniforms;\n    if (uniformName in activeUniforms) {\n      let uniform = activeUniforms[uniformName];\n      let location = uniform.location;\n      uniform.applier.call(this.gl, location, value);\n    }\n    return this;\n  }\n\n  /**\n   * @param {string} attributeName Name of the attribute.\n   * @param {GLenum} bufferType The buffer data type. This is usually `gl.FLOAT`\n   * but can also be one of `gl.BYTE`, `gl.UNSIGNED_BYTE`, `gl.SHORT`, `gl.UNSIGNED_SHORT`\n   * or `gl.HALF_FLOAT` for WebGL2.\n   * @param {WebGLBuffer} buffer The buffer handle.\n   * @param {boolean} [normalize=false] Whether to normalize the vectors in the buffer.\n   * @param {number} [stride=0] The stride for each vector in the buffer.\n   * @param {number} [offset=0] The initial offset in the buffer.\n   */\n  attribute(\n    attributeName,\n    bufferType,\n    buffer,\n    normalize = false,\n    stride = 0,\n    offset = 0\n  ) {\n    const gl = this.gl;\n    const activeAttributes = this.parent.activeAttributes;\n    if (attributeName in activeAttributes) {\n      let attribute = activeAttributes[attributeName];\n      let location = attribute.location;\n      let size = attribute.size;\n      if (buffer) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(\n          location,\n          size,\n          bufferType,\n          normalize,\n          stride,\n          offset\n        );\n        gl.enableVertexAttribArray(location);\n      } else {\n        gl.disableVertexAttribArray(location);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Draws using this program.\n   *\n   * @param {WebGLRenderingContext} gl\n   * @param {number} mode\n   * @param {number} offset\n   * @param {number} count\n   * @param {WebGLBuffer} elementBuffer\n   */\n  draw(gl, mode, offset, count, elementBuffer = null) {\n    draw(gl, mode, offset, count, elementBuffer);\n    return this.parent;\n  }\n}\n","import { createShader, createShaderProgram } from './ProgramHelper.js';\n\nexport class ProgramBuilder {\n  /**\n   * @param {WebGLRenderingContextBase} gl\n   * @param {WebGLProgram} [program]\n   */\n  constructor(gl, program = undefined) {\n    this.handle = program || gl.createProgram();\n    this.shaders = [];\n    /** @type {WebGLRenderingContextBase} */\n    this.gl = gl;\n  }\n\n  /**\n   * @param {GLenum} shaderType\n   * @param {string} shaderSource\n   * @returns {ProgramBuilder}\n   */\n  shader(shaderType, shaderSource) {\n    const gl = this.gl;\n    let shader = createShader(gl, shaderType, shaderSource);\n    this.shaders.push(shader);\n    return this;\n  }\n\n  /**\n   * @returns {WebGLProgram}\n   */\n  link() {\n    const gl = this.gl;\n    createShaderProgram(gl, this.handle, this.shaders);\n    this.shaders.length = 0;\n    return this.handle;\n  }\n}\n","import { BufferInfo } from './BufferInfo.js';\nimport { BufferBuilder } from './BufferBuilder.js';\nimport { getBufferTypeForBufferSource, getBufferTypeForTypedArray } from './BufferHelper.js';\n\nexport class BufferInfoBuilder {\n  /**\n   * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {WebGLBuffer} [buffer] The buffer handle. If undefined, a\n   * new buffer will be created.\n   */\n  constructor(gl, target, buffer = undefined) {\n    /** @private */\n    this.bufferBuilder = new BufferBuilder(gl, target, buffer);\n    /** @private */\n    this.bufferType = gl.FLOAT;\n  }\n\n  get gl() {\n    return this.bufferBuilder.gl;\n  }\n\n  get handle() {\n    return this.bufferBuilder.handle;\n  }\n\n  get target() {\n    return this.bufferBuilder.target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferInfoBuilder}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    this.bufferBuilder.data(srcDataOrSize, usage);\n    if (typeof srcDataOrSize !== 'number') {\n      this.bufferType = getBufferTypeForBufferSource(this.gl, srcDataOrSize);\n    }\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferInfoBuilder}\n   */\n  subData(\n    srcData,\n    dstOffset = undefined,\n    srcOffset = undefined,\n    srcLength = undefined\n  ) {\n    this.bufferBuilder.subData(srcData, dstOffset, srcOffset, srcLength);\n    this.bufferType = getBufferTypeForBufferSource(this.gl, srcData);\n    return this;\n  }\n\n  /**\n   * @returns {BufferInfo}\n   */\n  build() {\n    const handle = this.bufferBuilder.build();\n    const gl = this.gl;\n    const target = this.target;\n    const type = this.bufferType;\n    return new BufferInfo(gl, target, type, handle);\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\nexport const ProgramAttributeEnums = {\n  // WebGL1\n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  FLOAT: 0x1406,\n  // WebGL2\n  HALF_FLOAT: 0x140b,\n};\n","import { ProgramInfo } from './ProgramInfo.js';\nimport { ProgramBuilder } from './ProgramBuilder.js';\n\nexport class ProgramInfoBuilder {\n  /**\n   * @param {WebGLRenderingContextBase} gl\n   * @param {WebGLProgram} [program]\n   */\n  constructor(gl, program = undefined) {\n    /** @private */\n    this.programBuilder = new ProgramBuilder(gl, program);\n  }\n\n  get gl() {\n    return this.programBuilder.gl;\n  }\n\n  get handle() {\n    return this.programBuilder.handle;\n  }\n\n  get shaders() {\n    return this.programBuilder.shaders;\n  }\n\n  /**\n   * @param {GLenum} shaderType\n   * @param {string} shaderSource\n   * @returns {ProgramInfoBuilder}\n   */\n  shader(shaderType, shaderSource) {\n    this.programBuilder.shader(shaderType, shaderSource);\n    return this;\n  }\n\n  /**\n   * @returns {ProgramInfo}\n   */\n  link() {\n    const handle = this.programBuilder.link();\n    return new ProgramInfo(this.gl, handle);\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\nexport const ProgramUniformEnums = {\n  // WebGL1\n  FLOAT: 0x1406,\n  FLOAT_VEC2: 0x8b50,\n  FLOAT_VEC3: 0x8b51,\n  FLOAT_VEC4: 0x8b52,\n  INT: 0x1404,\n  INT_VEC2: 0x8b53,\n  INT_VEC3: 0x8b54,\n  INT_VEC4: 0x8b55,\n  BOOL: 0x8b56,\n  BOOL_VEC2: 0x8b57,\n  BOOL_VEC3: 0x8b58,\n  BOOL_VEC4: 0x8b59,\n  FLOAT_MAT2: 0x8b5a,\n  FLOAT_MAT3: 0x8b5b,\n  FLOAT_MAT4: 0x8b5c,\n  SAMPLER_2D: 0x8b5e,\n  SAMPLER_CUBE: 0x8b60,\n  // WebGL2\n  UNSIGNED_INT: 0x1405,\n  UNSIGNED_INT_VEC2: 0x8dc6,\n  UNSIGNED_INT_VEC3: 0x8dc7,\n  UNSIGNED_INT_VEC4: 0x8dc8,\n  FLOAT_MAT2x3: 0x8b65,\n  FLOAT_MAT2x4: 0x8b66,\n  FLOAT_MAT3x2: 0x8b67,\n  FLOAT_MAT3x4: 0x8b68,\n  FLOAT_MAT4x2: 0x8b69,\n  FLOAT_MAT4x3: 0x8b6a,\n  SAMPLER_3D: 0x8b5f,\n  SAMPLER_2D_SHADOW: 0x8b62,\n  SAMPLER_2D_ARRAY: 0x8dc1,\n  SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n  SAMPLER_CUBE_SHADOW: 0x8dc5,\n  INT_SAMPLER_2D: 0x8dca,\n  INT_SAMPLER_3D: 0x8dcb,\n  INT_SAMPLER_CUBE: 0x8dcc,\n  INT_SAMPLER_2D_ARRAY: 0x8dcf,\n  UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n  UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n  UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n};\n"],"names":["isWebGL2Supported","gl","WebGL2RenderingContext","BufferDataContext","constructor","target","this","data","srcDataOrSize","usage","bufferData","STATIC_DRAW","ArrayBuffer","isView","Error","subData","srcData","dstOffset","srcOffset","srcLength","bufferSubData","srcSubData","subarray","BufferBuilder","buffer","dataContext","handle","createBuffer","bindBuffer","build","BufferInfo","bufferType","type","bindContext","bind","BufferEnums","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","getActiveUniforms","program","result","uniformCount","getProgramParameter","ACTIVE_UNIFORMS","i","uniformInfo","getActiveUniform","push","getActiveAttribs","attributeCount","ACTIVE_ATTRIBUTES","attributeInfo","getActiveAttrib","getAttribVertexSize","attribType","BOOL","FLOAT_VEC2","INT_VEC2","BOOL_VEC2","FLOAT_VEC3","INT_VEC3","BOOL_VEC3","FLOAT_VEC4","INT_VEC4","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttributeFunction","attributeType","attributeFloatBuffer","gl2","attributeIntBuffer","attributeFloatMat2Buffer","attributeFloatMat3Buffer","attributeFloatMat4Buffer","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","attributeUintBuffer","index","vertexSize","normalize","stride","offset","divisor","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","undefined","vertexAttribDivisor","vertexAttribIPointer","matrixSize","attributeFloatMatrixBufferImpl","matrixLength","matrixCount","matrixStride","offsetPerMatrix","ii","getActiveAttribsInfo","activeAttributes","activeInfo","attributeName","name","attributeLength","size","attributeLocation","getAttribLocation","attributeApplier","attributeSize","length","location","applier","value","createShader","shaderType","shaderSource","shader","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","deleteShader","async","createShaderProgram","shaders","attachShader","linkProgram","ext","getExtension","statusInterval","Promise","resolve","_","setTimeout","COMPLETION_STATUS_KHR","detachShader","LINK_STATUS","getProgramInfoLog","deleteProgram","draw","mode","count","elementBuffer","ELEMENT_ARRAY_BUFFER","drawElements","drawArrays","programInfo","uniforms","uniformInfos","call","attributes","getActiveUniformsInfo","linkStatus","deleteStatus","DELETE_STATUS","validateStatus","VALIDATE_STATUS","infoLog","shaderSources","shaderTypes","VERTEX_SHADER","FRAGMENT_SHADER","getUniformFunction","uniformType","gl1","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","SAMPLER_2D","SAMPLER_CUBE","uniform1ui","uniform2uiv","uniform3uiv","uniform4uiv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","SAMPLER_3D","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","uniformMatrix2f","m00","m01","m10","m11","uniformMatrix3f","m02","m12","m20","m21","m22","uniformMatrix4f","m03","m13","m23","m30","m31","m32","m33","uniformMatrix2x3f","uniformMatrix2x4f","uniformMatrix3x2f","uniformMatrix3x4f","uniformMatrix4x2f","uniformMatrix4x3f","uniform1fv","uniform1iv","uniform1uiv","uniform2f","uniform3f","uniform4f","uniform2i","uniform3i","uniform4i","uniform2ui","uniform3ui","uniform4ui","activeUniforms","uniformName","uniformSize","uniformLocation","getUniformLocation","uniformApplier","bindProgramAttributes","bufferOrVertexArrayObjectInfo","WebGLVertexArrayObject","vaoInfo","bindVertexArray","bufferInfo","attributeInfos","attrib","element","tryVertexSize","attribName","arrayLength","includes","createArrayAttrib","getTypedArrayForBufferType","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","getBufferTypeForBufferSource","bufferSource","BUFFER_TYPE_BYTE_COUNT","getByteCountForBufferType","getBufferByteCount","getBufferParameter","BUFFER_SIZE","arrays","elementArray","vertexCount","key","Object","keys","array","WebGLBuffer","Array","isArray","TypedArray","bytes","Math","trunc","createVertexAttributesInfo","createElementAttrib","createElementAttributeInfo","names","a","programInfos","vao","createVertexArray","TRIANGLES","instanceCount","elementType","drawElementsInstanced","drawArraysInstanced","typedArray","BUFFER_USAGE","ProgramInfo","drawContext","ProgramInfoDrawContext","useProgram","parent","uniform","attribute","disableVertexAttribArray","ProgramBuilder","createProgram","link","bufferBuilder","programBuilder"],"mappings":"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"}