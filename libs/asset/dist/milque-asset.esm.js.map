{"version":3,"file":"milque-asset.esm.js","sources":["../src/GlobExp.js","../src/AssetStore.js","../src/AssetManager.js","../src/AssetRef.js","../src/AssetHelper.js","../src/loaders/AtlasLoader.js","../src/loaders/BMFontLoader.js","../src/loaders/ImageLoader.js","../src/loaders/OBJLoader.js","../src/loaders/TextLoader.js","../src/loaders/AudioBufferLoader.js"],"sourcesContent":["import { makeRe } from 'picomatch';\n\nexport class GlobExp {\n    /**\n     * @param {string|GlobExp} pattern \n     */\n    constructor(pattern) {\n        let source;\n        if (typeof pattern === 'object' && pattern instanceof GlobExp) {\n            source = pattern.source;\n        } else {\n            source = String(pattern);\n        }\n        this.source = source;\n\n        /** @private */\n        this._re = makeRe(source);\n    }\n\n    /**\n     * @param {string} string \n     * @returns {boolean}\n     */\n    test(string) {\n        return this._re.test(string);\n    }\n}\n","import { GlobExp } from './GlobExp.js';\n\n/**\n * @typedef AssetStore\n * @property {Record<string, object>} store\n * @property {Record<string, Loading>} loadings\n * @property {Array<Fallback>} defaults\n */\n\n/**\n * @template T\n * @template {object} S\n * @callback AssetLoader\n * @param {string|ArrayBuffer} src\n * @param {S} [opts]\n * @returns {Promise<T>}\n */\n\nconst FILE_URI_PREFIX_PATTERN = /^([_\\w\\d]+)\\:\\/\\//;\n\n/**\n * Load asset using a loader with the given src.\n * - If loading to transform a cached asset, the cached uri must start with `res://` (or equivalent).\n * - If loading to transform cached raw buffers from an asset pack, use `raw://`.\n * - Otherwise, it will call `fetch()` on src.\n * \n * @template T, S\n * @param {AssetStore} assets\n * @param {string} uri \n * @param {string} src\n * @param {AssetLoader<T, S>} loader\n * @param {S} opts\n * @param {number} timeout\n * @returns {Promise<T>}\n */\n export async function loadInStore(assets, uri, src, loader, opts, timeout) {\n    const { loadings } = assets;\n    \n    let loading;\n    if (uri in loadings) {\n        loading = loadings[uri];\n    } else {\n        loading = new Loading(timeout);\n        loadings[uri] = loading;\n    }\n\n    const attempt = Loading.nextAttempt(loading);\n\n    /** @type {Array<Promise<T>>} */\n    let promises = [loading.promise];\n    if (FILE_URI_PREFIX_PATTERN.test(src)) {\n        // Loading from cached file\n        promises.push(getLoadedInStore(assets, src, timeout)\n            .then(cached => loader(cached, opts))\n            .then(value => Loading.isCurrentAttempt(loading, attempt)\n                ? cacheInStore(assets, uri, value)\n                : undefined));\n    } else {\n        // Just load it\n        promises.push(loader(src)\n            .then(value => Loading.isCurrentAttempt(loading, attempt)\n                ? cacheInStore(assets, uri, value)\n                : undefined));\n    }\n    return await Promise.race(promises);\n}\n\n/**\n * @template T\n * @param {AssetStore} assets\n * @param {string} uri\n * @param {T} value\n * @returns {T}\n */\nexport function cacheInStore(assets, uri, value) {\n    const { store, loadings } = assets;\n    store[uri] = value;\n    // Send asset to awaiting loaders...\n    if (uri in loadings) {\n        loadings[uri].resolve(value);\n        delete loadings[uri];\n    }\n    return value;\n}\n\n/**\n * @template T\n * @param {AssetStore} assets\n * @param {string|GlobExp} glob\n * @param {T} value\n * @returns {T}\n */\nexport function cacheDefaultInStore(assets, glob, value) {\n    const { defaults } = assets;\n    if (typeof glob === 'string') {\n        glob = new GlobExp(glob);\n    }\n    const uri = `__default://[${defaults.length}]`;\n    cacheInStore(assets, uri, value);\n    defaults.push(new Fallback(glob, uri));\n    return value;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n */\nexport function unloadInStore(assets, uri) {\n    const { store, loadings } = assets;\n    if (uri in loadings) {\n        loadings[uri].reject(new Error('Stop loading to delete asset.'));\n        delete loadings[uri];\n    }\n    if (uri in store) {\n        delete store[uri];\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string|GlobExp} glob\n */\nexport function clearInStore(assets, glob) {\n    if (typeof glob === 'string') {\n        glob = new GlobExp(glob);\n    }\n    const { store, loadings } = assets;\n    // Clear loadings\n    for (let [uri, loading] of Object.entries(loadings)) {\n        if (glob.test(uri)) {\n            loading.reject(new Error(`Stop loading to clear assets matching ${glob}`));\n            delete loadings[uri];\n        }\n    }\n    // Clear cache\n    for (let uri of Object.keys(store)) {\n        if (glob.test(uri)) {\n            delete store[uri];\n        }\n    }\n}\n\n/**\n * @param {AssetStore} assets \n */\nexport function resetStore(assets) {\n    const { store, loadings, defaults } = assets;\n    // Clear loadings\n    for (let [uri, loading] of Object.entries(loadings)) {\n        loading.reject(new Error(`Stop loading to clear all assets.`));\n        delete loadings[uri];\n    }\n    // Clear cache\n    for (let uri of Object.keys(store)) {\n        delete store[uri];\n    }\n    // Clear defaults\n    defaults.length = 0;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @returns {Promise<object>}\n */\nexport function getLoadingInStore(assets, uri) {\n    const { loadings } = assets;\n    if (uri in loadings) {\n        return loadings[uri].promise;\n    } else {\n        return null;\n    }\n}\n\n/**\n * @param {AssetStore} assets \n * @param {string} uri \n */\nexport function cancelLoadingInStore(assets, uri) {\n    const { loadings } = assets;\n    for (let [uri, loading] of Object.entries(loadings)) {\n        loading.reject(new Error(`Stop loading to clear all assets.`));\n        delete loadings[uri];\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @param {number} timeout\n * @returns {Promise<object>}\n */\nexport async function getLoadedInStore(assets, uri, timeout) {\n    const { store, loadings } = assets;\n    if (uri in store) {\n        return store[uri];\n    } else if (uri in loadings) {\n        return loadings[uri].promise;\n    } else {\n        let loading = new Loading(timeout);\n        loadings[uri] = loading;\n        return loading.promise;\n    }\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {object}\n */\nexport function getDefaultInStore(assets, uri) {\n    const { defaults } = assets;\n    for (let def of defaults) {\n        if (def.glob.test(uri)) {\n            return getCurrentInStore(assets, def.uri);\n        }\n    }\n    return null;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri\n * @returns {object}\n */\nexport function getCurrentInStore(assets, uri) {\n    return assets.store[uri];\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function hasInStore(assets, uri) {\n    return Boolean(assets.store[uri]);\n}\n\n/**\n * @param {AssetStore} assets\n * @returns {Array<string>}\n */\nexport function keysInStore(assets) {\n    return Object.keys(assets.store);\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function isAssetCachedInStore(assets, uri) {\n    return uri in assets.store;\n}\n\n/**\n * @param {AssetStore} assets\n * @param {string} uri \n * @returns {boolean}\n */\nexport function isAssetLoadingInStore(assets, uri) {\n    return uri in assets.loadings;\n}\n\nclass Fallback {\n    /**\n     * @param {GlobExp} glob \n     * @param {string} uri \n     */\n    constructor(glob, uri) {\n        this.glob = glob;\n        this.uri = uri;\n    }\n}\n\nclass Loading {\n\n    /**\n     * @param {Loading} loading\n     */\n    static nextAttempt(loading) {\n        return ++loading._promiseHandle;\n    }\n\n    /**\n     * @param {Loading} loading \n     * @param {number} attempt\n     */\n    static isCurrentAttempt(loading, attempt) {\n        return loading._promiseHandle === attempt;\n    }\n\n    constructor(timeout) {\n        /** @private */\n        this._promiseHandle = 0;\n        /** @private */\n        this._resolve = null;\n        /** @private */\n        this._reject = null;\n        /** @private */\n        this._reason = null;\n        /** @private */\n        this._value = null;\n        /** @private */\n        this._timeoutHandle =\n            Number.isFinite(timeout) && timeout > 0\n                ? setTimeout(() => {\n                    this.reject(`Asset loading exceeded timeout of ${timeout} ms.`);\n                }, timeout)\n                : null;\n        /** @private */\n        this._promise = new Promise((resolve, reject) => {\n            if (this._value) {\n                resolve(this._value);\n            } else {\n                this._resolve = resolve;\n            }\n            if (this._reason) {\n                reject(this._reason);\n            } else {\n                this._reject = reject;\n            }\n        });\n    }\n\n    get promise() {\n        return this._promise;\n    }\n\n    resolve(value) {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n            this._timeoutHandle = null;\n        }\n        if (this._resolve) {\n            this._resolve(value);\n        } else {\n            this._value = value;\n        }\n    }\n\n    reject(reason) {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n            this._timeoutHandle = null;\n        }\n        if (this._reject) {\n            this._reject(reason);\n        } else {\n            this._reason = reason;\n        }\n    }\n}\n","import { cacheDefaultInStore, cacheInStore, clearInStore, getCurrentInStore, getDefaultInStore, getLoadedInStore, getLoadingInStore, hasInStore, isAssetCachedInStore, isAssetLoadingInStore, keysInStore, loadInStore, resetStore, unloadInStore } from './AssetStore.js';\nimport { GlobExp } from './GlobExp.js';\n\n/**\n * @template T, S\n * @typedef {import('./AssetStore').AssetLoader<T, S>} AssetLoader\n */\n\nexport class AssetManager {\n\n    /**\n     * @param {AssetManager} [parent] \n     */\n    constructor(parent = null) {\n        this.parent = parent;\n        /** @private */\n        this.store = {};\n        /** @private */\n        this.loadings = {};\n        /** @private */\n        this.defaults = [];\n    }\n\n    /**\n     * @param {string} uri \n     * @returns {any}\n     */\n    get(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetCachedInStore(assets, uri)) {\n            return getCurrentInStore(assets, uri);\n        }\n        let def = getDefaultInStore(assets, uri);\n        if (def) {\n            return def;\n        }\n        return null;\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout \n     * @returns {Promise<T>}\n     */\n    async resolve(uri, filepath, loader, opts, timeout) {\n        return this.get(uri) || await this.load(uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @template T\n     * @param {string|GlobExp} uriGlob \n     * @param {T} value \n     * @returns {T}\n     */\n    fallback(uriGlob, value) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return cacheDefaultInStore(assets, uriGlob, value);\n    }\n\n    /**\n     * @template T\n     * @param {string} uri \n     * @param {T} value \n     * @returns {T}\n     */\n    cache(uri, value) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return cacheInStore(assets, uri, value);\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout\n     * @returns {Promise<T>}\n     */\n    async load(uri, filepath, loader, opts, timeout) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetCachedInStore(assets, uri)) {\n            return getCurrentInStore(assets, uri);\n        } else if (isAssetLoadingInStore(assets, uri)) {\n            return await getLoadedInStore(assets, uri, timeout);\n        }\n        return await loadInStore(assets, uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @template T, S\n     * @param {string} uri \n     * @param {string} filepath\n     * @param {AssetLoader<T, S>} loader \n     * @param {S} opts \n     * @param {number} timeout\n     * @returns {Promise<T>}\n     */\n    async reload(uri, filepath, loader, opts, timeout) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return await loadInStore(assets, uri, filepath, loader, opts, timeout);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    unload(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        unloadInStore(assets, uri);\n    }\n\n    /**\n     * @param {string|GlobExp} uriGlob \n     */\n    clear(uriGlob) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        clearInStore(assets, uriGlob);\n    }\n\n    /**\n     * @param {string} uri\n     */\n    current(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return getCurrentInStore(assets, uri);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    exists(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return hasInStore(assets, uri);\n    }\n\n    /**\n     * @param {string} uri \n     */\n    loading(uri) {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        if (isAssetLoadingInStore(assets, uri)) {\n            return getLoadingInStore(assets, uri);\n        } else {\n            return null;\n        }\n    }\n\n    keys() {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        return keysInStore(assets);\n    }\n\n    reset() {\n        const assets = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (this));\n        resetStore(assets);\n    }\n}\n","import { AssetManager } from './AssetManager';\n\nconst DEFAULT_TIMEOUT = 5000;\n\n/** @template T, S */\nexport class AssetRef {\n\n    /**\n     * @param {string} uri \n     * @param {import('./AssetStore').AssetLoader<T, S>} loader \n     * @param {S} [opts] \n     * @param {string} [filepath]\n     * @param {T|AssetRef<T>} [initial]\n     */\n    constructor(uri, loader, opts = undefined, filepath = uri, initial = null) {\n        this.uri = uri;\n        this.loader = loader;\n        this.opts = opts;\n\n        /** @private */\n        this.initial = initial;\n        /** @private */\n        this.filepath = filepath;\n\n        /** @type {AssetManager} */\n        this.source = null;\n        /** @type {T} */\n        this.current = null;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {T} value \n     */\n    cache(assetManager, value) {\n        assetManager.cache(this.uri, value);\n        this.source = assetManager;\n        this.current = value;\n        return this;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @returns {T}\n     */\n    get(assetManager) {\n        let result;\n        if (!assetManager.exists(this.uri)) {\n            if (this.initial && this.initial instanceof AssetRef) {\n                result = this.initial.get(assetManager);\n            } else {\n                result = this.initial;\n            }\n        } else {\n            result = assetManager.current(this.uri);\n        }\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {number} [timeout]\n     */\n    async load(assetManager, timeout = DEFAULT_TIMEOUT) {\n        let result;\n        if (!assetManager.exists(this.uri)) {\n            result = await assetManager.load(this.uri, this.filepath, this.loader, this.opts, timeout);\n            if (!result) {\n                if (this.initial && this.initial instanceof AssetRef) {\n                    let initial = this.initial;\n                    result = await assetManager.load(initial.uri, initial.filepath, initial.loader, initial.opts, timeout);\n                } else {\n                    result = this.initial;\n                }\n            }\n        } else {\n            result = assetManager.current(this.uri);\n        }\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n\n    /**\n     * @param {AssetManager} assetManager \n     * @param {number} [timeout] \n     */\n    async reload(assetManager, timeout = DEFAULT_TIMEOUT) {\n        let result = await assetManager.reload(this.uri, this.filepath, this.loader, this.opts, timeout);\n        this.source = assetManager;\n        this.current = result;\n        return result;\n    }\n}\n","import { unzip } from 'fflate';\n\nimport { cacheInStore } from './AssetStore.js';\nimport { AssetManager } from './AssetManager.js';\nimport { AssetRef } from './AssetRef.js';\n\n/**\n * Fetch asset pack from url and cache raw file content under `raw://`.\n * \n * @param {string} url\n * @param {(src: Uint8Array, path: string) => void} callback\n */\nexport async function loadAssetPack(url, callback) {\n    let response = await fetch(url);\n    let arrayBuffer = await response.arrayBuffer();\n    await new Promise((resolve, reject) => {\n        unzip(new Uint8Array(arrayBuffer), (err, data) => {\n            if (err) {\n                reject(err);\n            } else {\n                for (let [path, buf] of Object.entries(data)) {\n                    // Standardize WIN paths\n                    path = path.replaceAll('\\\\', '/');\n                    callback(buf, path);\n                }\n                resolve();\n            }\n        });\n    });\n}\n\n/**\n * Fetch asset pack from url and cache raw file content under `raw://`.\n * \n * @param {AssetManager} assets\n * @param {string} url\n * @param {(src: Uint8Array, uri: string, path: string) => void} [callback]\n */\nexport async function cacheAssetPackAsRaw(assets, url, callback = undefined) {\n    const assetStore = /** @type {import('./AssetStore').AssetStore} */ (/** @type {unknown} */ (assets));\n    let rootPath = 'raw://';\n    let response = await fetch(url);\n    let arrayBuffer = await response.arrayBuffer();\n    await new Promise((resolve, reject) => {\n        unzip(new Uint8Array(arrayBuffer), (err, data) => {\n            if (err) {\n                reject(err);\n            } else {\n                for (let [path, buf] of Object.entries(data)) {\n                    // Standardize WIN paths\n                    path = path.replaceAll('\\\\', '/');\n                    // Remove the zip directory name\n                    let i = path.indexOf('/');\n                    if (i >= 0) {\n                        path = path.substring(i + 1);\n                    }\n                    // Put the raw file in cache\n                    let uri = rootPath + path;\n                    cacheInStore(assetStore, uri, buf);\n                    if (callback) {\n                        callback(buf, uri, path);\n                    }\n                }\n                resolve();\n            }\n        });\n    });\n}\n\n/**\n * This is the same as calling `await AssetRef.load()` for each ref.\n * \n * @param {AssetManager} assets\n * @param {Array<AssetRef<?, ?>>} refs \n * @param {number} [timeout] \n */\nexport async function preloadAssetRefs(assets, refs, timeout = 5000) {\n    let promises = [];\n    for (let ref of refs) {\n        promises.push(ref.load(assets, timeout));\n    }\n    await Promise.allSettled(promises);\n}\n","/**\n * @typedef {Record<string, AtlasSpriteData>} Atlas\n * \n * @typedef AtlasSpriteData\n * @property {number} u\n * @property {number} v\n * @property {number} w\n * @property {number} h\n * @property {number} frames\n * @property {number} cols\n * @property {number} rows\n * @property {string} name\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @param {{ onprogress: (value: number, loaded: number, total: number) => void }} opts\n * @returns {Promise<Atlas>}\n */\nexport async function AtlasLoader(src, opts = { onprogress: undefined }) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return AtlasLoader(arrayBuffer, opts);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error('Cannot load from source - must be an array buffer or fetchable url.');\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  const string = new TextDecoder().decode(arrayBuffer);\n  /** @type {Atlas} */\n  let result = {};\n  let lines = string.split('\\n');\n  let progressTotal = lines.length;\n  let progressLoaded = 0;\n  if (opts.onprogress) {\n    opts.onprogress(0, 0, progressTotal);\n  }\n  for (let line of lines) {\n    ++progressLoaded;\n    line = line.trim();\n    if (line.length <= 0) continue;\n    if (line.startsWith('#')) continue;\n    if (line.startsWith('//')) continue;\n\n    let args = [];\n    let i = 0;\n    let j = line.indexOf(' ');\n    while (j >= 0) {\n      args.push(line.substring(i, j));\n      i = j + 1;\n      j = line.indexOf(' ', i);\n    }\n    args.push(line.substring(i));\n\n    let name = args[0];\n    let u = Number.parseInt(args[1]);\n    let v = Number.parseInt(args[2]);\n    let w = Number.parseInt(args[3]);\n    let h = Number.parseInt(args[4]);\n    let frames =\n      args.length >= 6\n        ? Number.parseInt(args[5]) // User-defined\n        : 1; // Default 1 frame\n    let cols =\n      args.length >= 7\n        ? Number.parseInt(args[6]) // User-defined\n        : frames; // Default same as frame count\n    let rows =\n      args.length >= 8\n        ? Number.parseInt(args[7]) // User-defined\n        : frames > cols // If more frames than cols...\n        ? Math.ceil(frames / cols) // ...then expect more rows\n        : 1; // Otherwise, default single row\n\n    result[name] = {\n      u,\n      v,\n      w,\n      h,\n      frames,\n      cols,\n      rows,\n      name,\n    };\n\n    if (opts.onprogress) {\n      opts.onprogress(progressLoaded / progressTotal, progressLoaded, progressTotal);\n    }\n  }\n  if (opts.onprogress) {\n    opts.onprogress(1, progressLoaded, progressLoaded);\n  }\n  return result;\n}\n","/**\n * @typedef BMFontChar\n * @property {number} id The character id.\n * @property {number} x The left position of the character image in the texture.\n * @property {number} y The top position of the character image in the texture.\n * @property {number} width The width of the character image in the texture.\n * @property {number} height The height of the character image in the texture.\n * @property {number} xoffset How much the current position should be offset when\n *                            copying the image from the texture to the screen.\n * @property {number} yoffset How much the current position should be offset when\n *                            copying the image from the texture to the screen.\n * @property {number} xadvance How much the current position should be advanced\n *                             after drawing the character.\n * @property {number} page The texture page where the character image is found.\n * @property {number} chnl The texture channel where the character image is\n *                         found (1 = blue, 2 = green, 4 = red, 8 = alpha,\n *                         15 = all channels).\n *\n * @typedef BMFontKerning\n * @property {number} first The first character id.\n * @property {number} second The second character id.\n * @property {number} amount How much the x position should be adjusted when\n *                           drawing the second character immediately following\n *                           the first.\n *\n * @typedef BMFontData\n * @property {object} info              This tag holds information on how the\n *                                      font was generated.\n * @property {string} info.face         This is the name of the true type font.\n * @property {number} info.size         The size of the true type font.\n * @property {number} info.bold         The font is bold.\n * @property {number} info.italic\t    The font is italic.\n * @property {string} info.charset\t    The name of the OEM charset used (when\n *                                      not unicode).\n * @property {number} info.unicode\t    Set to 1 if it is the unicode charset.\n * @property {number} info.stretchH\t    The font height stretch in percentage.\n *                                      100% means no stretch.\n * @property {number} info.smooth\t    Set to 1 if smoothing was turned on.\n * @property {number} info.aa\t        The supersampling level used. 1 means no\n *                                      supersampling was used.\n * @property {number} info.padding\t    The padding for each character\n *                                      (up, right, down, left).\n * @property {number} info.spacing\t    The spacing for each character\n *                                      (horizontal, vertical).\n * @property {number} info.outline\t    The outline thickness for the characters.\n * @property {object} common            This tag holds information common to all\n *                                      characters.\n * @property {number} common.lineHeight This is the distance in pixels between\n *                                      each line of text.\n * @property {number} common.base\t    The number of pixels from the absolute\n *                                      top of the line to the base of the characters.\n * @property {number} common.scaleW\t    The width of the texture, normally used\n *                                      to scale the x pos of the character image.\n * @property {number} common.scaleH\t    The height of the texture, normally used\n *                                      to scale the y pos of the character image.\n * @property {number} common.pages\t    The number of texture pages included in\n *                                      the font.\n * @property {number} common.packed\t    Set to 1 if the monochrome characters\n *                                      have been packed into each of the texture\n *                                      channels. In this case alphaChnl describes\n *                                      what is stored in each channel.\n * @property {number} common.alphaChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.redChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.greenChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {number} common.blueChnl\tSet to 0 if the channel holds the glyph data,\n *                                      1 if it holds the outline,\n *                                      2 if it holds the glyph and the outline,\n *                                      3 if its set to zero, and 4 if its set to one.\n * @property {object} page              This tag gives the name of a texture\n *                                      file. There is one for each page in the font.\n * @property {number} page.id\t        The page id.\n * @property {number} page.file\t        The texture file name.\n * @property {Array<BMFontChar>} chars  This tag describes characters in the font.\n *                                      There is one for each included character\n *                                      in the font.\n * @property {Array<BMFontKerning>} kernings The kerning information is used to adjust\n *                                           the distance between certain characters,\n *                                           e.g. some characters should be placed\n *                                           closer to each other than others.\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<BMFontData>}\n */\nexport async function BMFontLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return BMFontLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return parse(new TextDecoder().decode(arrayBuffer));\n}\n\nconst TAG_PATTERN = /(.+?)\\s+(.*)/;\nconst LINE_PATTERN = /(.+)=(.+)/;\n\n/**\n * @param {string} string\n * @returns {BMFontData}\n */\nfunction parse(string) {\n  let lines = string.split('\\n');\n  let info = {};\n  let common = {};\n  let page = {};\n  let chars = [];\n  let kernings = [];\n  for (let line of lines) {\n    let array = TAG_PATTERN.exec(line);\n    if (!array) {\n      continue;\n    }\n    let [_, tag, props] = array;\n    switch (tag) {\n      case 'info':\n        parseBMLine(info, props);\n        break;\n      case 'common':\n        parseBMLine(common, props);\n        break;\n      case 'page':\n        parseBMLine(page, props);\n        break;\n      case 'chars':\n        // This only has count info. Ignore it.\n        break;\n      case 'char':\n        let char = {};\n        parseBMLine(char, props);\n        if ('id' in char) {\n          chars.push(char);\n        }\n        break;\n      case 'kerning':\n        let kerning = {};\n        parseBMLine(kerning, props);\n        if ('first' in kerning) {\n          kernings.push(kerning);\n        }\n        break;\n      default:\n      // Unknown tag.\n    }\n  }\n  let data = /** @type {BMFontData} */ ({\n    info,\n    common,\n    page,\n    chars,\n    kernings,\n  });\n  return data;\n}\n\nfunction parseBMLine(out, line) {\n  let props = line.split(/\\s+/);\n  for (let prop of props) {\n    let array = LINE_PATTERN.exec(prop);\n    if (!array) {\n      continue;\n    }\n    let [_, key, value] = array;\n    let result = JSON.parse(`[${value}]`);\n    if (result.length === 1) {\n      out[key] = result[0];\n    } else {\n      out[key] = result;\n    }\n  }\n}\n","/**\n * @param {string|ArrayBuffer} src\n * @param {object} [opts]\n * @param {string} [opts.imageType]\n * @returns {Promise<HTMLImageElement>}\n */\nexport async function ImageLoader(src, opts = undefined) {\n  let { imageType = undefined } = opts || {};\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    if (typeof imageType === 'undefined') {\n      let i = src.lastIndexOf('.');\n      if (i < 0) {\n        throw new Error('Cannot load from url - unknown image type.');\n      } else {\n        imageType = 'image/' + src.slice(i + 1);\n      }\n    }\n    return ImageLoader(arrayBuffer, { ...opts, imageType });\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  if (typeof imageType === 'undefined') {\n    imageType = 'image/png';\n  }\n  let blob = new Blob([arrayBuffer], { type: imageType });\n  let imageUrl = URL.createObjectURL(blob);\n  let image = new Image();\n  return new Promise((resolve, reject) => {\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n    image.addEventListener('error', (e) => {\n      reject(e);\n    });\n    image.src = imageUrl;\n  });\n}\n","/**\n * @typedef MeshData\n * @property {Float32Array} positions\n * @property {Float32Array} texcoords\n * @property {Float32Array} normals\n * @property {Uint16Array} indices\n */\n\n/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<MeshData>}\n */\nexport async function OBJLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return OBJLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return parse(new TextDecoder().decode(arrayBuffer));\n}\n\n/**\n * @param {string} string\n * @returns {MeshData}\n */\nfunction parse(string) {\n  const vertexList = [];\n  const texcoordList = [];\n  const normalList = [];\n\n  const vertexIndices = [];\n  const texcoordIndices = [];\n  const normalIndices = [];\n\n  // # comments\n  const commentPattern = /^#.*/g;\n  // v float float float\n  const vertexPattern = /v\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n  // vn float float float\n  const normalPattern = /vn\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n  // vt float float float\n  const texcoordPattern = /vt\\s+(\\S+)\\s+(\\S+)/g;\n  // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n  const facePattern =\n    /f\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*))(\\s+(([^/\\s]*)\\/([^/\\s]*)\\/?([^/\\s]*)))?/g;\n  // f float float float\n  const faceVertexPattern = /f\\s+([^/\\s]+)\\s+([^/\\s]+)\\s+([^/\\s]+)/g;\n\n  let quad = false;\n  let result = null;\n  let x, y, z, w;\n\n  // Remove all comments\n  string = string.replace(commentPattern, '');\n\n  // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n  while ((result = vertexPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    z = Number.parseFloat(result[3]);\n    vertexList.push(x);\n    vertexList.push(y);\n    vertexList.push(z);\n  }\n\n  // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n  while ((result = normalPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    z = Number.parseFloat(result[3]);\n    normalList.push(x);\n    normalList.push(y);\n    normalList.push(z);\n  }\n\n  // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n  while ((result = texcoordPattern.exec(string)) != null) {\n    x = Number.parseFloat(result[1]);\n    y = Number.parseFloat(result[2]);\n    texcoordList.push(x);\n    texcoordList.push(y);\n  }\n\n  // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n  while ((result = facePattern.exec(string)) != null) {\n    // Vertex indices\n    x = Number.parseInt(result[2]);\n    if (Number.isNaN(x)) x = 1;\n    y = Number.parseInt(result[6]);\n    if (Number.isNaN(y)) y = 1;\n    z = Number.parseInt(result[10]);\n    if (Number.isNaN(z)) z = 1;\n    vertexIndices.push(x);\n    vertexIndices.push(y);\n    vertexIndices.push(z);\n\n    // Normal indices\n    x = Number.parseInt(result[4]);\n    if (Number.isNaN(x)) {\n      // No UVs.\n      x = Number.parseInt(result[3]);\n      y = Number.parseInt(result[7]);\n      z = Number.parseInt(result[11]);\n      normalIndices.push(x);\n      normalIndices.push(y);\n      normalIndices.push(z);\n\n      texcoordIndices.push(1);\n      texcoordIndices.push(1);\n      texcoordIndices.push(1);\n    } else {\n      // Maybe UVs.\n      y = Number.parseInt(result[8]);\n      if (Number.isNaN(y)) y = 1;\n      z = Number.parseInt(result[12]);\n      if (Number.isNaN(z)) z = 1;\n      normalIndices.push(x);\n      normalIndices.push(y);\n      normalIndices.push(z);\n\n      // UV indices\n      x = Number.parseInt(result[3]);\n      if (Number.isNaN(x)) x = 1;\n      y = Number.parseInt(result[7]);\n      if (Number.isNaN(y)) y = 1;\n      z = Number.parseInt(result[11]);\n      if (Number.isNaN(z)) z = 1;\n      texcoordIndices.push(x);\n      texcoordIndices.push(y);\n      texcoordIndices.push(z);\n    }\n\n    // Quad face\n    if (typeof result[13] !== 'undefined') {\n      // Vertex indices\n      w = Number.parseInt(result[15]);\n      if (Number.isNaN(w)) w = 1;\n      vertexIndices.push(w);\n\n      // Normal indices\n      w = Number.parseInt(result[17]);\n      if (Number.isNaN(w)) {\n        // No UVs.\n        w = Number.parseInt(result[16]);\n        normalIndices.push(w);\n        texcoordIndices.push(1);\n      } else {\n        // Maybe UVs.\n        normalIndices.push(w);\n\n        w = Number.parseInt(result[16]);\n        texcoordIndices.push(w);\n      }\n\n      quad = true;\n    }\n  }\n\n  // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n  while ((result = faceVertexPattern.exec(string)) != null) {\n    // Vertex indices\n    x = Number.parseInt(result[2]);\n    y = Number.parseInt(result[6]);\n    z = Number.parseInt(result[10]);\n    vertexIndices.push(x);\n    vertexIndices.push(y);\n    vertexIndices.push(z);\n\n    // UV indices\n    texcoordIndices.push(1);\n    texcoordIndices.push(1);\n    texcoordIndices.push(1);\n\n    // Normal indices\n    normalIndices.push(1);\n    normalIndices.push(1);\n    normalIndices.push(1);\n\n    // Quad face\n    if (typeof result[13] !== 'undefined') {\n      // Vertex indices\n      w = Number.parseInt(result[14]);\n      vertexIndices.push(w);\n\n      // UV indices\n      texcoordIndices.push(1);\n      // Normal indices\n      normalIndices.push(1);\n\n      quad = true;\n    }\n  }\n\n  let index, size;\n\n  size = vertexIndices.length;\n  const positions = new Float32Array(size * 3);\n  for (let i = 0; i < size; ++i) {\n    index = vertexIndices[i] - 1;\n    positions[i * 3 + 0] = vertexList[index * 3 + 0];\n    positions[i * 3 + 1] = vertexList[index * 3 + 1];\n    positions[i * 3 + 2] = vertexList[index * 3 + 2];\n  }\n\n  size = texcoordIndices.length;\n  const texcoords = new Float32Array(size * 2);\n  for (let i = 0; i < size; ++i) {\n    index = texcoordIndices[i] - 1;\n    texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n    texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n  }\n\n  size = normalIndices.length;\n  const normals = new Float32Array(size * 3);\n  for (let i = 0; i < size; ++i) {\n    index = normalIndices[i] - 1;\n    normals[i * 3 + 0] = normalList[index * 3 + 0];\n    normals[i * 3 + 1] = normalList[index * 3 + 1];\n    normals[i * 3 + 2] = normalList[index * 3 + 2];\n  }\n\n  // Must be either unsigned short or unsigned byte.\n  size = vertexIndices.length;\n  const indices = new Uint16Array(size);\n  for (let i = 0; i < size; ++i) {\n    indices[i] = i;\n  }\n\n  if (quad) {\n    console.warn('WebGL does not support quad faces, only triangles.');\n  }\n\n  return {\n    positions,\n    texcoords,\n    normals,\n    indices,\n  };\n}\n","/**\n * @param {string|ArrayBuffer} src\n * @returns {Promise<string>}\n */\nexport async function TextLoader(src) {\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return TextLoader(arrayBuffer);\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  return new TextDecoder().decode(arrayBuffer);\n}\n","/**\n * @param {ArrayBuffer|Uint8Array|string} src\n * @param {object} opts\n * @param {AudioContext} opts.audioContext\n * @returns {Promise<AudioBuffer>}\n */\nexport async function AudioBufferLoader(src, opts) {\n  const { audioContext } = opts || {};\n  if (typeof src === 'string') {\n    const response = await fetch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    return AudioBufferLoader(arrayBuffer, { audioContext });\n  } else if (!(src instanceof ArrayBuffer || ArrayBuffer.isView(src))) {\n    throw new Error(\n      'Cannot load from source - must be ' + 'an array buffer or fetchable url'\n    );\n  }\n  /** @type {ArrayBuffer} */\n  const arrayBuffer = src;\n  let audioArrayBuffer = new ArrayBuffer(arrayBuffer.byteLength);\n  new Uint8Array(audioArrayBuffer).set(arrayBuffer);\n  let audioBuffer = await audioContext.decodeAudioData(audioArrayBuffer);\n  return audioBuffer;\n}\n"],"names":["parse"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe,YAAY,CAAC,GAAG,EAAE;AACxC,EAAE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC/B,IAAI,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;AACtC,IAAI,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,WAAW,EAAE,CAAC;AACrD,IAAI,OAAO,YAAY,CAAC,WAAW,CAAC,CAAC;AACrC,GAAG,MAAM,IAAI,EAAE,GAAG,YAAY,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;AACvE,IAAI,MAAM,IAAI,KAAK;AACnB,MAAM,oCAAoC,GAAG,kCAAkC;AAC/E,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,MAAM,WAAW,GAAG,GAAG,CAAC;AAC1B,EAAE,OAAOA,OAAK,CAAC,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;AACtD,CAAC;AACD;AACA,MAAM,WAAW,GAAG,cAAc,CAAC;AACnC,MAAM,YAAY,GAAG,WAAW,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,SAASA,OAAK,CAAC,MAAM,EAAE;AACvB,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACjC,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;AAChB,EAAE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"}