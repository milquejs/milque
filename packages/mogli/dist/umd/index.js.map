{"version":3,"file":"index.js","sources":["../../src/GLHelper.js","../../src/buffer/BufferBuilder.js","../../src/buffer/BufferInfo.js","../../src/buffer/BufferEnums.js","../../src/buffer/helper/BufferHelper.js","../../src/program/ProgramAttributeHelper.js","../../src/program/ProgramAttributeFunctions.js","../../src/program/helper/ProgramActives.js","../../src/program/ProgramAttributeInfo.js","../../src/program/ProgramUniformFunctions.js","../../src/program/ProgramUniformInfo.js","../../src/program/helper/ProgramHelper.js","../../src/program/helper/ProgramInfoHelper.js","../../src/buffer/helper/BufferInfoHelper.js","../../src/program/ProgramInfo.js","../../src/program/ProgramBuilder.js","../../src/buffer/BufferInfoBuilder.js","../../src/program/ProgramAttributeEnums.js","../../src/program/ProgramInfoBuilder.js","../../src/program/ProgramUniformEnums.js"],"sourcesContent":["/**\n * Checks whether the context supports WebGL2 features.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @returns {boolean} Whether WebGL2 is supported.\n */\nexport function isWebGL2Supported(gl) {\n  return (\n    typeof WebGL2RenderingContext !== 'undefined' &&\n    gl instanceof WebGL2RenderingContext\n  );\n}\n","import { isWebGL2Supported } from '../GLHelper.js';\n\nexport class BufferDataContext {\n  /**\n   * @param {WebGLRenderingContextBase} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   */\n  constructor(gl, target) {\n    this.gl = gl;\n    this.target = target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferDataContext}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    const gl = this.gl;\n    const target = this.target;\n    if (typeof srcDataOrSize === 'number') {\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferData(target, srcDataOrSize, usage || gl.STATIC_DRAW);\n    } else {\n      if (!ArrayBuffer.isView(srcDataOrSize))\n        throw new Error('Source data must be a typed array.');\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferData(target, srcDataOrSize, usage || gl.STATIC_DRAW);\n    }\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferDataContext}\n   */\n  subData(\n    srcData,\n    dstOffset = 0,\n    srcOffset = undefined,\n    srcLength = undefined,\n  ) {\n    const gl = this.gl;\n    const target = this.target;\n    if (!ArrayBuffer.isView(srcData)) {\n      throw new Error('Source data must be a typed array.');\n    } else if (typeof srcOffset !== 'undefined') {\n      if (isWebGL2Supported(gl)) {\n        /** @type {WebGL2RenderingContext} */\n        (gl).bufferSubData(target, dstOffset, srcData, srcOffset, srcLength);\n      } else {\n        // HACK: `subarray()` is in ALL TypedArrays, but not in BufferSource\n        const srcSubData = srcLength\n          ? // @ts-ignore\n            srcData.subarray(srcOffset, srcOffset + srcLength)\n          : // @ts-ignore\n            srcData.subarray(srcOffset);\n        /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n        (gl).bufferSubData(target, dstOffset, srcSubData);\n      }\n    } else {\n      /** @type {WebGLRenderingContext|WebGL2RenderingContext} */\n      (gl).bufferSubData(target, dstOffset, srcData);\n    }\n    return this;\n  }\n}\n\nexport class BufferBuilder {\n  /**\n   * @param {WebGLRenderingContext} gl The webgl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {WebGLBuffer} [buffer] The buffer handle. If undefined, a\n   * new buffer will be created.\n   */\n  constructor(gl, target, buffer = undefined) {\n    /** @private */\n    this.dataContext = new BufferDataContext(gl, target);\n    const handle = buffer || gl.createBuffer();\n    if (!handle) {\n      throw new Error('Could not create webgl buffer - is webgl supported?');\n    }\n    gl.bindBuffer(target, handle);\n    /** @type {WebGLBuffer} */\n    this.handle = handle;\n  }\n\n  get gl() {\n    return this.dataContext.gl;\n  }\n\n  get target() {\n    return this.dataContext.target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferBuilder}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    this.dataContext.data(srcDataOrSize, usage);\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferBuilder}\n   */\n  subData(\n    srcData,\n    dstOffset = 0,\n    srcOffset = undefined,\n    srcLength = undefined,\n  ) {\n    this.dataContext.subData(srcData, dstOffset, srcOffset, srcLength);\n    return this;\n  }\n\n  /** @returns {WebGLBuffer} */\n  build() {\n    return this.handle;\n  }\n}\n","import { BufferDataContext } from './BufferBuilder.js';\n\nexport class BufferInfo {\n  /**\n   * @param {WebGLRenderingContextBase} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {GLenum} bufferType The buffer data type. Usually, this is\n   * `gl.FLOAT` for array buffers or `gl.UNSIGNED_SHORT` for element\n   * array buffers. It must be either `gl.BYTE`, `gl.UNSIGNED_BYTE`,\n   * `gl.SHORT`, `gl.UNSIGNED_SHORT`, `gl.FLOAT`, or `gl.HALF_FLOAT`\n   * for WebGL2.\n   * @param {WebGLBuffer} buffer The buffer handle.\n   */\n  constructor(gl, target, bufferType, buffer) {\n    this.gl = gl;\n    this.target = target;\n    this.handle = buffer;\n    this.type = bufferType;\n\n    /** @private */\n    this.bindContext = new BufferDataContext(gl, this.target);\n  }\n\n  bind(gl) {\n    gl.bindBuffer(this.target, this.handle);\n    this.bindContext.gl = gl;\n    return this.bindContext;\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\nexport const BufferEnums = {\n  // WebGL1\n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  INT: 0x1404,\n  UNSIGNED_INT: 0x1405,\n  FLOAT: 0x1406,\n  // WebGL2\n  HALF_FLOAT: 0x140b,\n};\n","import { BufferEnums } from '../BufferEnums.js';\n\n/**\n * Creates a buffer source given the type and data.\n *\n * @param {WebGLRenderingContextBase} gl The gl context.\n * @param {GLenum} type The data type of the elements in the buffer. Usually,\n * this is `gl.FLOAT` for array buffers or `gl.UNSIGNED_SHORT` for element\n * array buffers. It must be either `gl.BYTE`, `gl.UNSIGNED_BYTE`, `gl.SHORT`,\n * `gl.UNSIGNED_SHORT`, `gl.FLOAT`, or `gl.HALF_FLOAT` for WebGL2.\n * @param {Array<number>} data The buffer source data array.\n * @returns {BufferSource} The typed array buffer containing the given data.\n */\nexport function createBufferSource(gl, type, data) {\n  const TypedArray = getTypedArrayForBufferType(gl, type);\n  return new TypedArray(data);\n}\n\n/**\n * Create a buffer with the given source.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The gl context.\n * @param {GLenum} target The buffer bind target. Usually, this is `gl.ARRAY_BUFFER` or\n * `gl.ELEMENT_ARRAY_BUFFER`.\n * @param {BufferSource} bufferSource The buffer source array.\n * @param {GLenum} [usage] The buffer usage hint. By default, this is `gl.STATIC_DRAW`.\n * @returns {WebGLBuffer} The created and bound data buffer.\n */\nexport function createBuffer(gl, target, bufferSource, usage = gl.STATIC_DRAW) {\n  if (!ArrayBuffer.isView(bufferSource))\n    throw new Error('Source data must be a typed array.');\n  let handle = gl.createBuffer();\n  gl.bindBuffer(target, handle);\n  gl.bufferData(target, bufferSource, usage);\n  return handle;\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {GLenum} bufferType\n */\nexport function getTypedArrayForBufferType(gl, bufferType) {\n  // NOTE: For WebGL2, gl.HALF_FLOAT (float16) does not have an associated TypedArray.\n  switch (bufferType) {\n    case gl.BYTE:\n      return Int8Array;\n    case gl.UNSIGNED_BYTE:\n      return Uint8Array;\n    case gl.SHORT:\n      return Int16Array;\n    case gl.UNSIGNED_SHORT:\n      return Uint16Array;\n    case gl.INT:\n      return Int32Array;\n    case gl.UNSIGNED_INT:\n      return Uint32Array;\n    case gl.FLOAT:\n      return Float32Array;\n    default:\n      throw new Error(\n        `Cannot find valid typed array for buffer type '${bufferType}'.`,\n      );\n  }\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {BufferSource} bufferSource\n * @returns {GLenum}\n */\nexport function getBufferTypeForBufferSource(gl, bufferSource) {\n  if (bufferSource instanceof Int8Array) {\n    return gl.BYTE;\n  } else if (bufferSource instanceof Uint8Array) {\n    return gl.UNSIGNED_BYTE;\n  } else if (bufferSource instanceof Int16Array) {\n    return gl.SHORT;\n  } else if (bufferSource instanceof Uint16Array) {\n    return gl.UNSIGNED_SHORT;\n  } else if (bufferSource instanceof Int32Array) {\n    return gl.INT;\n  } else if (bufferSource instanceof Uint32Array) {\n    return gl.UNSIGNED_INT;\n  } else if (bufferSource instanceof Float32Array) {\n    return gl.FLOAT;\n  } else {\n    throw new Error('Cannot find valid data type for buffer source.');\n  }\n}\n\nconst BUFFER_TYPE_BYTE_COUNT = {\n  [BufferEnums.BYTE]: 1,\n  [BufferEnums.UNSIGNED_BYTE]: 1,\n  [BufferEnums.SHORT]: 2,\n  [BufferEnums.UNSIGNED_SHORT]: 2,\n  [BufferEnums.INT]: 4,\n  [BufferEnums.UNSIGNED_INT]: 4,\n  [BufferEnums.FLOAT]: 4,\n  [BufferEnums.HALF_FLOAT]: 2,\n};\nexport function getByteCountForBufferType(gl, bufferType) {\n  return BUFFER_TYPE_BYTE_COUNT[bufferType];\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {Int8ArrayConstructor\n * |Uint8ArrayConstructor\n * |Int16ArrayConstructor\n * |Uint16ArrayConstructor\n * |Int32ArrayConstructor\n * |Uint32ArrayConstructor\n * |Float32ArrayConstructor} typedArray\n * @returns {GLenum}\n */\nexport function getBufferTypeForTypedArray(gl, typedArray) {\n  // NOTE: For WebGL2, gl.HALF_FLOAT (float16) does not have an associated TypedArray.\n  switch (typedArray) {\n    case Int8Array:\n      return gl.BYTE;\n    case Uint8Array:\n      return gl.UNSIGNED_BYTE;\n    case Int16Array:\n      return gl.SHORT;\n    case Uint16Array:\n      return gl.UNSIGNED_SHORT;\n    case Int32Array:\n      return gl.INT;\n    case Uint32Array:\n      return gl.UNSIGNED_INT;\n    case Float32Array:\n      return gl.FLOAT;\n    default:\n      throw new Error('Cannot find valid buffer type for typed array.');\n  }\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {GLenum} target\n * @param {WebGLBuffer} buffer\n * @returns {GLenum}\n */\nexport function getBufferUsage(gl, target, buffer) {\n  gl.bindBuffer(target, buffer);\n  return gl.getBufferParameter(target, gl.BUFFER_USAGE);\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {GLenum} target\n * @param {WebGLBuffer} buffer\n * @returns {GLenum}\n */\nexport function getBufferByteCount(gl, target, buffer) {\n  gl.bindBuffer(target, buffer);\n  return gl.getBufferParameter(target, gl.BUFFER_SIZE);\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {GLenum} target\n * @param {WebGLBuffer} buffer\n * @returns {GLenum}\n */\nexport function getBufferLength(gl, target, buffer, type) {\n  return Math.trunc(\n    getBufferByteCount(gl, target, buffer) /\n      getByteCountForBufferType(gl, type),\n  );\n}\n","/**\n * Get the number of expected elements in the attribute vertex type.\n *\n * @param {WebGLRenderingContextBase} gl The gl context.\n * @param {GLenum} attribType The attribute gl type.\n * @returns {number} The number of expected elements in the attribute vertex type.\n */\nexport function getAttribVertexSize(gl, attribType) {\n  // https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveAttrib.xml\n  switch (attribType) {\n    case gl.FLOAT:\n    case gl.INT:\n    case gl.UNSIGNED_INT:\n    case gl.BOOL:\n      return 1;\n    case gl.FLOAT_VEC2:\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2:\n      return 2;\n    case gl.FLOAT_VEC3:\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3:\n      return 3;\n    case gl.FLOAT_VEC4:\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4:\n      return 4;\n    case gl.FLOAT_MAT2:\n      return 4;\n    case gl.FLOAT_MAT3:\n      return 9;\n    case gl.FLOAT_MAT4:\n      return 16;\n    default:\n      throw new Error('Invalid vertex attribute type.');\n  }\n}\n","import { isWebGL2Supported } from '../GLHelper.js';\nimport { getAttribVertexSize } from './ProgramAttributeHelper.js';\n\n/**\n * @callback AttributeFunction\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n */\n\n/**\n * Gets the attribute modifier function by attribute type. For vectors\n * of size 1, it accepts a single number value. For vectors of greater\n * size, it takes an array of numbers.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} attributeType The attribute data type.\n * @returns {AttributeFunction} The attribute modifier function.\n */\nexport function getAttributeFunction(gl, attributeType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  switch (attributeType) {\n    // WebGL1\n    case gl.FLOAT:\n    case gl.FLOAT_VEC2:\n    case gl.FLOAT_VEC3:\n    case gl.FLOAT_VEC4:\n      return attributeFloatBuffer;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (attributeType) {\n      case gl.INT:\n      case gl.INT_VEC2:\n      case gl.INT_VEC3:\n      case gl.INT_VEC4:\n      case gl.BOOL:\n      case gl.BOOL_VEC2:\n      case gl.BOOL_VEC3:\n      case gl.BOOL_VEC4:\n        return attributeIntBuffer;\n      case gl.FLOAT_MAT2:\n        return attributeFloatMat2Buffer;\n      case gl.FLOAT_MAT3:\n        return attributeFloatMat3Buffer;\n      case gl.FLOAT_MAT4:\n        return attributeFloatMat4Buffer;\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n      case gl2.UNSIGNED_INT_VEC2:\n      case gl2.UNSIGNED_INT_VEC3:\n      case gl2.UNSIGNED_INT_VEC4:\n        return attributeUintBuffer;\n    }\n  }\n\n  throw new Error('Cannot find attribute function for gl enum.');\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} [normalize]\n * @param {number} [stride]\n * @param {number} [offset]\n * @param {number} [divisor]\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatBuffer(\n  index,\n  buffer,\n  vertexSize,\n  bufferType,\n  normalize = false,\n  stride = 0,\n  offset = 0,\n  divisor = undefined,\n) {\n  this.bindBuffer(this.ARRAY_BUFFER, buffer);\n  this.enableVertexAttribArray(index);\n  this.vertexAttribPointer(\n    index,\n    vertexSize,\n    bufferType,\n    normalize,\n    stride,\n    offset,\n  );\n  if (divisor !== undefined) {\n    if (!isWebGL2Supported(this)) {\n      throw new Error('Cannot use attribute divisor in WebGL 1.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n    gl2.vertexAttribDivisor(index, divisor);\n  }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} [normalize]\n * @param {number} [stride]\n * @param {number} [offset]\n * @param {number} [divisor]\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeIntBuffer(\n  index,\n  buffer,\n  vertexSize,\n  bufferType,\n  normalize = false,\n  stride = 0,\n  offset = 0,\n  divisor = undefined,\n) {\n  if (!isWebGL2Supported(this)) {\n    throw new Error('Cannot use attribute divisor in WebGL 1.');\n  }\n  const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n  gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n  gl2.enableVertexAttribArray(index);\n  gl2.vertexAttribIPointer(index, vertexSize, bufferType, stride, offset);\n  if (divisor !== undefined) {\n    gl2.vertexAttribDivisor(index, divisor);\n  }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} [normalize]\n * @param {number} [stride]\n * @param {number} [offset]\n * @param {number} [divisor]\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeUintBuffer(\n  index,\n  buffer,\n  vertexSize,\n  bufferType,\n  normalize = false,\n  stride = 0,\n  offset = 0,\n  divisor = undefined,\n) {\n  if (!isWebGL2Supported(this)) {\n    throw new Error('Cannot use attribute divisor in WebGL 1.');\n  }\n  const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n  gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n  gl2.enableVertexAttribArray(index);\n  gl2.vertexAttribIPointer(index, vertexSize, bufferType, stride, offset);\n  if (divisor !== undefined) {\n    gl2.vertexAttribDivisor(index, divisor);\n  }\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} [normalize]\n * @param {number} [stride]\n * @param {number} [offset]\n * @param {number} [divisor]\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat2Buffer(\n  index,\n  buffer,\n  vertexSize,\n  bufferType,\n  normalize = false,\n  stride = 0,\n  offset = 0,\n  divisor = undefined,\n) {\n  // NOTE: Size along 1 dimension\n  let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT2);\n  // NOTE: Assumes a square matrix.\n  let matrixLength = matrixSize * matrixSize;\n  attributeFloatMatrixBufferImpl.call(\n    this,\n    matrixLength,\n    matrixSize,\n    index,\n    buffer,\n    vertexSize,\n    bufferType,\n    normalize,\n    stride,\n    offset,\n    divisor,\n  );\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} [normalize]\n * @param {number} [stride]\n * @param {number} [offset]\n * @param {number} [divisor]\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat3Buffer(\n  index,\n  buffer,\n  vertexSize,\n  bufferType,\n  normalize = false,\n  stride = 0,\n  offset = 0,\n  divisor = undefined,\n) {\n  // NOTE: Size along 1 dimension\n  let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT3);\n  // NOTE: Assumes a square matrix.\n  let matrixLength = matrixSize * matrixSize;\n  attributeFloatMatrixBufferImpl.call(\n    this,\n    matrixLength,\n    matrixSize,\n    index,\n    buffer,\n    vertexSize,\n    bufferType,\n    normalize,\n    stride,\n    offset,\n    divisor,\n  );\n}\n\n/**\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} [normalize]\n * @param {number} [stride]\n * @param {number} [offset]\n * @param {number} [divisor]\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMat4Buffer(\n  index,\n  buffer,\n  vertexSize,\n  bufferType,\n  normalize = false,\n  stride = 0,\n  offset = 0,\n  divisor = undefined,\n) {\n  // NOTE: Size along 1 dimension\n  let matrixSize = getAttribVertexSize(this, this.FLOAT_MAT4);\n  // NOTE: Assumes a square matrix.\n  let matrixLength = matrixSize * matrixSize;\n  attributeFloatMatrixBufferImpl.call(\n    this,\n    matrixLength,\n    matrixSize,\n    index,\n    buffer,\n    vertexSize,\n    bufferType,\n    normalize,\n    stride,\n    offset,\n    divisor,\n  );\n}\n\n/**\n * @param {number} matrixLength\n * @param {number} matrixSize\n * @param {number} index\n * @param {WebGLBuffer} buffer\n * @param {number} vertexSize\n * @param {GLenum} bufferType\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} [divisor]\n * @this {WebGLRenderingContextBase}\n */\nfunction attributeFloatMatrixBufferImpl(\n  matrixLength,\n  matrixSize,\n  index,\n  buffer,\n  vertexSize,\n  bufferType,\n  normalize,\n  stride,\n  offset,\n  divisor = undefined,\n) {\n  if (!isWebGL2Supported(this)) {\n    throw new Error('Cannot use attribute divisor in WebGL 1.');\n  }\n  const gl2 = /** @type {WebGL2RenderingContext} */ (this);\n  gl2.bindBuffer(gl2.ARRAY_BUFFER, buffer);\n  // Number of matrices in the buffer.\n  let matrixCount = vertexSize / matrixSize;\n  // The stride to each matrix\n  let matrixStride = matrixLength * vertexSize;\n  // The offset within each matrix data\n  let offsetPerMatrix = stride / matrixSize;\n  for (let i = 0; i < matrixSize; ++i) {\n    let ii = index + i;\n    gl2.enableVertexAttribArray(ii);\n    gl2.vertexAttribPointer(\n      ii,\n      matrixCount,\n      bufferType,\n      normalize,\n      matrixStride,\n      offset + offsetPerMatrix * i,\n    );\n    if (divisor !== undefined) {\n      gl2.vertexAttribDivisor(ii, divisor);\n    }\n  }\n}\n","/**\n * Get list of parameter infos for all active uniforms in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get the active uniforms from.\n * @returns {Array<WebGLActiveInfo>} An array of active uniforms.\n */\nexport function getActiveUniforms(gl, program) {\n  let result = [];\n  const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < uniformCount; ++i) {\n    let uniformInfo = gl.getActiveUniform(program, i);\n    if (!uniformInfo) break;\n    result.push(uniformInfo);\n  }\n  return result;\n}\n\n/**\n * Get list of parameter infos for all active attributes in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get the active attributes from.\n * @returns {Array<WebGLActiveInfo>} An array of active attributes.\n */\nexport function getActiveAttribs(gl, program) {\n  let result = [];\n  const attributeCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < attributeCount; ++i) {\n    let attributeInfo = gl.getActiveAttrib(program, i);\n    if (!attributeInfo) continue;\n    result.push(attributeInfo);\n  }\n  return result;\n}\n","import { getAttributeFunction } from './ProgramAttributeFunctions.js';\nimport { getAttribVertexSize } from './ProgramAttributeHelper.js';\nimport { getActiveAttribs } from './helper/ProgramActives.js';\n\n/**\n * @typedef {import('./ProgramAttributeFunctions.js').AttributeFunction} AttributeFunction\n */\n\n/**\n * @typedef ActiveAttributeInfo\n * @property {GLenum} type\n * @property {number} length\n * @property {number} location\n * @property {number} size\n * @property {AttributeFunction} applier\n * @property {number|Float32List|Int32List|Uint32List} value\n */\n\n/**\n * Get map of all active attributes to their info in the shader program.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The program to get active attributes from.\n * @returns {Record<string, ActiveAttributeInfo>} An object mapping of attribute names to info.\n */\nexport function getActiveAttribsInfo(gl, program) {\n  /** @type {Record<string, ActiveAttributeInfo>} */\n  let result = {};\n  const activeAttributes = getActiveAttribs(gl, program);\n  for (let activeInfo of activeAttributes) {\n    const attributeName = activeInfo.name;\n    const attributeLength = activeInfo.size;\n    const attributeType = activeInfo.type;\n    const attributeLocation = gl.getAttribLocation(program, attributeName);\n    const attributeApplier = getAttributeFunction(gl, attributeType);\n    const attributeSize = getAttribVertexSize(gl, attributeType);\n    result[attributeName] = {\n      type: attributeType,\n      length: attributeLength,\n      location: attributeLocation,\n      size: attributeSize,\n      applier: attributeApplier,\n      /**\n       * @param {[\n       *   buffer: WebGLBuffer,\n       *   vertexSize: number,\n       *   bufferType: GLenum,\n       *   normalize: boolean,\n       *   stride: number,\n       *   offset: number,\n       *   divisor: number,\n       * ]} args\n       */\n      set value([\n        buffer,\n        vertexSize,\n        bufferType,\n        normalize,\n        stride,\n        offset,\n        divisor,\n      ]) {\n        this.applier(\n          this.location,\n          buffer,\n          vertexSize,\n          bufferType,\n          normalize,\n          stride,\n          offset,\n          divisor,\n        );\n      },\n    };\n  }\n  return result;\n}\n","import { isWebGL2Supported } from '../GLHelper.js';\n\n/** @typedef {Float32List|Int32List|Uint32List} UniformVector */\n\n/**\n * @callback WebGL1UniformArrayFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {UniformVector} value The vector array.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n *\n * @callback WebGL2UniformArrayFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {UniformVector} value The vector array.\n * @this {WebGL2RenderingContext}\n *\n * @typedef {WebGL1UniformArrayFunction|WebGL2UniformArrayFunction} UniformArrayFunction\n *\n * @callback UniformOneComponentFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {GLfloat|GLint} x The x component of the vector.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n * \n * @typedef {UniformOneComponentFunction|UniformArrayFunction} UniformMixedFunction\n */\n\n/**\n * Gets the uniform modifier function by uniform type. For uniform vectors\n * of size 1, it accepts a single number value. For vectors of greater\n * size, it takes an array of numbers.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformMixedFunction} The uniform modifier function.\n */\nexport function getUniformFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1f;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2fv;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3fv;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4fv;\n    case gl1.INT:\n      return gl1.uniform1i;\n    case gl1.INT_VEC2:\n      return gl1.uniform2iv;\n    case gl1.INT_VEC3:\n      return gl1.uniform3iv;\n    case gl1.INT_VEC4:\n      return gl1.uniform4iv;\n    case gl1.BOOL:\n      return gl1.uniform1i;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2iv;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3iv;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4iv;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2fv;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3fv;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4fv;\n    // WeblGL1 Samplers\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1i;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1ui;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2uiv;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3uiv;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4uiv;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3fv;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4fv;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2fv;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4fv;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2fv;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3fv;\n      // WeblGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1i;\n    }\n  }\n\n  throw new Error('Cannot find uniform function for gl enum.');\n}\n\n/**\n * @callback UniformXYFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {GLfloat|GLint} x The first component of the vector.\n * @param {GLfloat|GLint} y The second component of the vector.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n *\n * @callback UniformXYZFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {GLfloat|GLint} x The first component of the vector.\n * @param {GLfloat|GLint} y The second component of the vector.\n * @param {GLfloat|GLint} z The third component of the vector.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n *\n * @callback UniformXYZWFunction\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {GLfloat|GLint} x The first component of the vector.\n * @param {GLfloat|GLint} y The second component of the vector.\n * @param {GLfloat|GLint} z The third component of the vector.\n * @param {GLfloat|GLint} w The fourth component of the vector.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n * \n * @callback Uniform17Function\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {GLfloat} m1 The first component of the vector.\n * @param {GLfloat} m2 The second component of the vector.\n * @param {GLfloat} m3 The third component of the vector.\n * @param {GLfloat} m4 The fourth component of the vector.\n * @param {GLfloat} m5 The fifth component of the vector.\n * @param {GLfloat} m6 The sixth component of the vector.\n * @param {GLfloat} m7 The seventh component of the vector.\n * @param {GLfloat} m8 The eighth component of the vector.\n * @param {GLfloat} m9 The ninth component of the vector.\n * @param {GLfloat} m10 The tenth component of the vector.\n * @param {GLfloat} m11 The eleventh component of the vector.\n * @param {GLfloat} m12 The twelth component of the vector.\n * @param {GLfloat} m13 The thirteenth component of the vector.\n * @param {GLfloat} m14 The fourteenth component of the vector.\n * @param {GLfloat} m15 The fifteenth component of the vector.\n * @param {GLfloat} m16 The sixteenth component of the vector.\n * @param {GLfloat} m17 The seventeenth component of the vector.\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n * \n * @callback WebGL2Uniform10Function\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {GLfloat} m1 The first component of the vector.\n * @param {GLfloat} m2 The second component of the vector.\n * @param {GLfloat} m3 The third component of the vector.\n * @param {GLfloat} m4 The fourth component of the vector.\n * @param {GLfloat} m5 The fifth component of the vector.\n * @param {GLfloat} m6 The sixth component of the vector.\n * @param {GLfloat} m7 The seventh component of the vector.\n * @param {GLfloat} m8 The eighth component of the vector.\n * @param {GLfloat} m9 The ninth component of the vector.\n * @param {GLfloat} m10 The tenth component of the vector.\n * @this {WebGL2RenderingContext}\n * \n * @callback WebGL2Uniform13Function\n * @param {WebGLUniformLocation} location The uniform location.\n * @param {GLfloat} m1 The first component of the vector.\n * @param {GLfloat} m2 The second component of the vector.\n * @param {GLfloat} m3 The third component of the vector.\n * @param {GLfloat} m4 The fourth component of the vector.\n * @param {GLfloat} m5 The fifth component of the vector.\n * @param {GLfloat} m6 The sixth component of the vector.\n * @param {GLfloat} m7 The seventh component of the vector.\n * @param {GLfloat} m8 The eighth component of the vector.\n * @param {GLfloat} m9 The ninth component of the vector.\n * @param {GLfloat} m10 The tenth component of the vector.\n * @param {GLfloat} m11 The eleventh component of the vector.\n * @param {GLfloat} m12 The twelth component of the vector.\n * @param {GLfloat} m13 The thirteenth component of the vector.\n * @this {WebGL2RenderingContext}\n * \n * @typedef {UniformOneComponentFunction\n * | UniformXYFunction\n * | UniformXYZFunction\n * | UniformXYZWFunction\n * | Uniform17Function\n * | WebGL2Uniform10Function\n * | WebGL2Uniform13Function} UniformManyComponentFunction\n */\n\n/**\n * Get the per component uniform modifier function by uniform type.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformManyComponentFunction} The per component uniform modifier function.\n */\nexport function getUniformManyComponentFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1f;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2f;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3f;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4f;\n    case gl1.INT:\n      return gl1.uniform1i;\n    case gl1.INT_VEC2:\n      return gl1.uniform2i;\n    case gl1.INT_VEC3:\n      return gl1.uniform3i;\n    case gl1.INT_VEC4:\n      return gl1.uniform4i;\n    case gl1.BOOL:\n      return gl1.uniform1i;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2i;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3i;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4i;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2f;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3f;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4f;\n    // WeblGL1 Samplers\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1i;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1ui;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2ui;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3ui;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4ui;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3f;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4f;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2f;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4f;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2f;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3f;\n      // WeblGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1i;\n    }\n  }\n\n  throw new Error('Cannot find per component uniform function for gl enum.');\n}\n\n/**\n * Get the array uniform modifier function by uniform type.\n *\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The webgl context.\n * @param {GLenum} uniformType The uniform data type.\n * @returns {UniformArrayFunction|WebGL2UniformArrayFunction} The array uniform modifier function.\n */\nexport function getUniformArrayFunction(gl, uniformType) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n  const gl1 = /** @type {WebGLRenderingContext} */ (gl);\n  switch (uniformType) {\n    // WebGL1\n    case gl1.FLOAT:\n      return gl1.uniform1fv;\n    case gl1.FLOAT_VEC2:\n      return gl1.uniform2fv;\n    case gl1.FLOAT_VEC3:\n      return gl1.uniform3fv;\n    case gl1.FLOAT_VEC4:\n      return gl1.uniform4fv;\n    case gl1.INT:\n      return gl1.uniform1iv;\n    case gl1.INT_VEC2:\n      return gl1.uniform2iv;\n    case gl1.INT_VEC3:\n      return gl1.uniform3iv;\n    case gl1.INT_VEC4:\n      return gl1.uniform4iv;\n    case gl1.BOOL:\n      return gl1.uniform1iv;\n    case gl1.BOOL_VEC2:\n      return gl1.uniform2iv;\n    case gl1.BOOL_VEC3:\n      return gl1.uniform3iv;\n    case gl1.BOOL_VEC4:\n      return gl1.uniform4iv;\n    case gl1.FLOAT_MAT2:\n      return uniformMatrix2fv;\n    case gl1.FLOAT_MAT3:\n      return uniformMatrix3fv;\n    case gl1.FLOAT_MAT4:\n      return uniformMatrix4fv;\n    case gl1.SAMPLER_2D:\n    case gl1.SAMPLER_CUBE:\n      return gl1.uniform1iv;\n  }\n\n  if (isWebGL2Supported(gl)) {\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    switch (uniformType) {\n      // WebGL2\n      case gl2.UNSIGNED_INT:\n        return gl2.uniform1uiv;\n      case gl2.UNSIGNED_INT_VEC2:\n        return gl2.uniform2uiv;\n      case gl2.UNSIGNED_INT_VEC3:\n        return gl2.uniform3uiv;\n      case gl2.UNSIGNED_INT_VEC4:\n        return gl2.uniform4uiv;\n      case gl2.FLOAT_MAT2x3:\n        return uniformMatrix2x3fv;\n      case gl2.FLOAT_MAT2x4:\n        return uniformMatrix2x4fv;\n      case gl2.FLOAT_MAT3x2:\n        return uniformMatrix3x2fv;\n      case gl2.FLOAT_MAT3x4:\n        return uniformMatrix3x4fv;\n      case gl2.FLOAT_MAT4x2:\n        return uniformMatrix4x2fv;\n      case gl2.FLOAT_MAT4x3:\n        return uniformMatrix4x3fv;\n      // WebGL2 Samplers\n      case gl2.SAMPLER_3D:\n      case gl2.SAMPLER_2D_SHADOW:\n      case gl2.SAMPLER_2D_ARRAY:\n      case gl2.SAMPLER_2D_ARRAY_SHADOW:\n      case gl2.SAMPLER_CUBE_SHADOW:\n      case gl2.INT_SAMPLER_2D:\n      case gl2.INT_SAMPLER_3D:\n      case gl2.INT_SAMPLER_CUBE:\n      case gl2.INT_SAMPLER_2D_ARRAY:\n      case gl2.UNSIGNED_INT_SAMPLER_2D:\n      case gl2.UNSIGNED_INT_SAMPLER_3D:\n      case gl2.UNSIGNED_INT_SAMPLER_CUBE:\n      case gl2.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n        return gl2.uniform1iv;\n    }\n  }\n\n  throw new Error('Cannot find array uniform function for gl enum.');\n}\n\n/**\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n */\nfunction uniformMatrix2fv(location, value) {\n  this.uniformMatrix2fv(location, false, value);\n}\n\n/**\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n */\nfunction uniformMatrix2f(location, m00, m01, m10, m11) {\n  this.uniformMatrix2fv(location, false, [m00, m01, m10, m11]);\n}\n\n/**\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n */\nfunction uniformMatrix3fv(location, value) {\n  this.uniformMatrix3fv(location, false, value);\n}\n\n/**\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m02\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @param {GLfloat} m12\n * @param {GLfloat} m20\n * @param {GLfloat} m21\n * @param {GLfloat} m22\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n */\nfunction uniformMatrix3f(\n  location,\n  m00,\n  m01,\n  m02,\n  m10,\n  m11,\n  m12,\n  m20,\n  m21,\n  m22\n) {\n  this.uniformMatrix3fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m10,\n    m11,\n    m12,\n    m20,\n    m21,\n    m22,\n  ]);\n}\n\n/**\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n */\nfunction uniformMatrix4fv(location, value) {\n  this.uniformMatrix4fv(location, false, value);\n}\n\n/**\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m02\n * @param {GLfloat} m03\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @param {GLfloat} m12\n * @param {GLfloat} m13\n * @param {GLfloat} m20\n * @param {GLfloat} m21\n * @param {GLfloat} m22\n * @param {GLfloat} m23\n * @param {GLfloat} m30\n * @param {GLfloat} m31\n * @param {GLfloat} m32\n * @param {GLfloat} m33\n * @this {WebGLRenderingContext|WebGL2RenderingContext}\n */\nfunction uniformMatrix4f(\n  location,\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23,\n  m30,\n  m31,\n  m32,\n  m33\n) {\n  this.uniformMatrix4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n    m20,\n    m21,\n    m22,\n    m23,\n    m30,\n    m31,\n    m32,\n    m33,\n  ]);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix2x3fv(location, value) {\n  this.uniformMatrix2x3fv(location, false, value);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m02\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @param {GLfloat} m12\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix2x3f(location, m00, m01, m02, m10, m11, m12) {\n  this.uniformMatrix2x3fv(location, false, [m00, m01, m02, m10, m11, m12]);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix2x4fv(location, value) {\n  this.uniformMatrix2x4fv(location, false, value);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m02\n * @param {GLfloat} m03\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @param {GLfloat} m12\n * @param {GLfloat} m13\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix2x4f(location, m00, m01, m02, m03, m10, m11, m12, m13) {\n  this.uniformMatrix2x4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n  ]);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix3x2fv(location, value) {\n  this.uniformMatrix3x2fv(location, false, value);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @param {GLfloat} m20\n * @param {GLfloat} m21\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix3x2f(location, m00, m01, m10, m11, m20, m21) {\n  this.uniformMatrix3x2fv(location, false, [m00, m01, m10, m11, m20, m21]);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix3x4fv(location, value) {\n  this.uniformMatrix3x4fv(location, false, value);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m02\n * @param {GLfloat} m03\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @param {GLfloat} m12\n * @param {GLfloat} m13\n * @param {GLfloat} m20\n * @param {GLfloat} m21\n * @param {GLfloat} m22\n * @param {GLfloat} m23\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix3x4f(\n  location,\n  m00,\n  m01,\n  m02,\n  m03,\n  m10,\n  m11,\n  m12,\n  m13,\n  m20,\n  m21,\n  m22,\n  m23\n) {\n  this.uniformMatrix3x4fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m03,\n    m10,\n    m11,\n    m12,\n    m13,\n    m20,\n    m21,\n    m22,\n    m23,\n  ]);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix4x2fv(location, value) {\n  this.uniformMatrix4x2fv(location, false, value);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @param {GLfloat} m20\n * @param {GLfloat} m21\n * @param {GLfloat} m30\n * @param {GLfloat} m31\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix4x2f(location, m00, m01, m10, m11, m20, m21, m30, m31) {\n  this.uniformMatrix4x2fv(location, false, [\n    m00,\n    m01,\n    m10,\n    m11,\n    m20,\n    m21,\n    m30,\n    m31,\n  ]);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {UniformVector} value\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix4x3fv(location, value) {\n  this.uniformMatrix4x3fv(location, false, value);\n}\n\n/**\n * Only supported on WebGL2.\n *\n * @param {WebGLUniformLocation} location\n * @param {GLfloat} m00\n * @param {GLfloat} m01\n * @param {GLfloat} m02\n * @param {GLfloat} m10\n * @param {GLfloat} m11\n * @param {GLfloat} m12\n * @param {GLfloat} m20\n * @param {GLfloat} m21\n * @param {GLfloat} m22\n * @param {GLfloat} m30\n * @param {GLfloat} m31\n * @param {GLfloat} m32\n * @this {WebGL2RenderingContext}\n */\nfunction uniformMatrix4x3f(\n  location,\n  m00,\n  m01,\n  m02,\n  m10,\n  m11,\n  m12,\n  m20,\n  m21,\n  m22,\n  m30,\n  m31,\n  m32\n) {\n  this.uniformMatrix4x3fv(location, false, [\n    m00,\n    m01,\n    m02,\n    m10,\n    m11,\n    m12,\n    m20,\n    m21,\n    m22,\n    m30,\n    m31,\n    m32,\n  ]);\n}\n","import { getUniformFunction } from './ProgramUniformFunctions.js';\nimport { getActiveUniforms } from './helper/ProgramActives.js';\n\n/**\n * @typedef ActiveUniformInfo\n * @property {number} type\n * @property {number} length\n * @property {WebGLUniformLocation} location\n * @property {import('./ProgramUniformFunctions.js').UniformMixedFunction} applier\n * @property {number|Float32List|Int32List|Uint32List} value\n */\n\n/**\n * Get map of all active uniforms to their info in the shader program.\n *\n * @param {WebGL2RenderingContext} gl The webgl context.\n * @param {WebGLProgram} program The program to get active uniforms from.\n * @returns {Record<string, ActiveUniformInfo>} An object mapping of uniform names to info.\n */\nexport function getActiveUniformsInfo(gl, program) {\n  /** @type {Record<string, ActiveUniformInfo>} */\n  let result = {};\n  const activeUniforms = getActiveUniforms(gl, program);\n  for (let activeInfo of activeUniforms) {\n    const uniformName = activeInfo.name;\n    const uniformSize = activeInfo.size;\n    const uniformType = activeInfo.type;\n    const uniformLocation = gl.getUniformLocation(program, uniformName);\n    if (!uniformLocation) {\n      throw new Error(`Cannot find uniform location for \"${uniformName}\".`);\n    }\n    const uniformApplier = getUniformFunction(gl, uniformType);\n    result[uniformName] = {\n      type: uniformType,\n      length: uniformSize,\n      location: uniformLocation,\n      applier: uniformApplier,\n      /**\n       * @param {number|Float32List|Int32List|Uint32List} value\n       */\n      set value(value) {\n        this.applier.call(gl, this.location, /** @type {any} */ (value));\n      },\n    };\n  }\n  return result;\n}\n","/**\n * Create and compile shader from source text.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {GLenum} shaderType The type of the shader. This is usually `gl.VERTEX_SHADER`\n * or `gl.FRAGMENT_SHADER`.\n * @param {string} shaderSource The shader source text.\n * @returns {WebGLShader} The compiled shader.\n */\nexport function createShader(gl, shaderType, shaderSource) {\n  let shader = gl.createShader(shaderType);\n  if (!shader) {\n    throw new Error(`Failed to create shader of type \"${shaderType}\".`);\n  }\n  gl.shaderSource(shader, shaderSource);\n  gl.compileShader(shader);\n\n  let status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!status) {\n    let log =\n      gl.getShaderInfoLog(shader) +\n      `\\nFailed to compile shader:\\n${shaderSource}`;\n    gl.deleteShader(shader);\n    throw new Error(log);\n  }\n  return shader;\n}\n\n/**\n * Link the given shader program from list of compiled shaders.\n *\n * @param {WebGLRenderingContextBase} gl The webgl context.\n * @param {WebGLProgram} program The shader program handle.\n * @param {Array<WebGLShader>} shaders The list of compiled shaders\n * to link in the program.\n * @returns {Promise<WebGLProgram>} The linked shader program.\n */\nexport async function createShaderProgram(gl, program, shaders) {\n  // Attach to the program.\n  for (let shader of shaders) {\n    gl.attachShader(program, shader);\n  }\n\n  // Link'em!\n  gl.linkProgram(program);\n\n  // Might be async...\n  const ext = gl.getExtension('KHR_parallel_shader_compile');\n  if (ext) {\n    const statusInterval = 1000 / 60;\n    let result;\n    do {\n      await new Promise((resolve, _) => setTimeout(resolve, statusInterval));\n      result = gl.getProgramParameter(program, ext.COMPLETION_STATUS_KHR);\n    } while (!result);\n  }\n\n  // Don't forget to clean up the shaders! It's no longer needed.\n  for (let shader of shaders) {\n    gl.detachShader(program, shader);\n    gl.deleteShader(shader);\n  }\n\n  let status = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!status) {\n    let log = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(log ?? \"Program failed - and no logs found :(\");\n  }\n  return program;\n}\n\n/**\n * Draw the currently bound render context.\n *\n * @param {WebGLRenderingContextBase} gl\n * @param {number} mode\n * @param {number} offset\n * @param {number} count\n * @param {WebGLBuffer} [elementBuffer]\n */\nexport function draw(gl, mode, offset, count, elementBuffer = undefined) {\n  if (elementBuffer) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.drawElements(mode, count, gl.UNSIGNED_SHORT, offset);\n  } else {\n    gl.drawArrays(mode, offset, count);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl\n * @param {WebGLProgram} program\n */\nexport function getProgramStatus(gl, program) {\n  return {\n    /** @type {GLboolean} */\n    linkStatus: gl.getProgramParameter(program, gl.LINK_STATUS),\n    /** @type {GLboolean} */\n    deleteStatus: gl.getProgramParameter(program, gl.DELETE_STATUS),\n    /** @type {GLboolean} */\n    validateStatus: gl.getProgramParameter(program, gl.VALIDATE_STATUS),\n    /** @type {string} */\n    infoLog: gl.getProgramInfoLog(program) ?? '',\n  };\n}\n","import { isWebGL2Supported } from '../../GLHelper.js';\nimport { getActiveAttribsInfo } from '../ProgramAttributeInfo.js';\nimport { getActiveUniformsInfo } from '../ProgramUniformInfo.js';\nimport { createShader, createShaderProgram } from './ProgramHelper.js';\n\n/**\n * @typedef {import('../../buffer/helper/BufferInfoHelper.js').BufferInfo} BufferInfo\n * @typedef {import('../../buffer/helper/BufferInfoHelper.js').VertexArrayObjectInfo} VertexArrayObjectInfo\n */\n\n/**\n * @typedef ProgramInfo\n * @property {WebGLProgram} handle\n * @property {Record<string, import('../ProgramUniformInfo.js').ActiveUniformInfo>} uniforms\n * @property {Record<string, import('../ProgramAttributeInfo.js').ActiveAttributeInfo>} attributes\n */\n\n/**\n * Assumes all shaders already compiled and linked successfully.\n *\n * @param {WebGL2RenderingContext} gl\n * @param {WebGLProgram} program\n * @returns {ProgramInfo}\n */\nexport function createProgramInfo(gl, program) {\n  return {\n    handle: program,\n    attributes: getActiveAttribsInfo(gl, program),\n    uniforms: getActiveUniformsInfo(gl, program),\n  };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {WebGLProgram} program\n * @param {Array<string>} shaderSources\n * @param {Array<GLenum>} [shaderTypes]\n * @returns {Promise<WebGLProgram>}\n */\nexport async function linkProgramShaders(\n  gl,\n  program,\n  shaderSources,\n  shaderTypes = [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER],\n) {\n  let index = 0;\n  let shaders = [];\n  for (let shaderSource of shaderSources) {\n    if (index >= shaderTypes.length) {\n      throw new Error('Missing shader type for shader source.');\n    }\n    let shaderType = shaderTypes[index++];\n    let shader = createShader(gl, shaderType, shaderSource);\n    shaders.push(shader);\n  }\n  await createShaderProgram(gl, program, shaders);\n  return program;\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {ReturnType<createProgramInfo>} programInfo\n * @param {BufferInfo|VertexArrayObjectInfo} bufferOrVertexArrayObjectInfo\n */\nexport function bindProgramAttributes(\n  gl,\n  programInfo,\n  bufferOrVertexArrayObjectInfo,\n) {\n  if (\n    'handle' in bufferOrVertexArrayObjectInfo &&\n    bufferOrVertexArrayObjectInfo.handle instanceof WebGLVertexArrayObject\n  ) {\n    if (!isWebGL2Supported(gl)) {\n      throw new Error('Vertex array objects are only supported in WebGL 2.');\n    }\n    const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n    let vaoInfo = /** @type {VertexArrayObjectInfo} */ (\n      bufferOrVertexArrayObjectInfo\n    );\n    gl2.bindVertexArray(vaoInfo.handle);\n  } else {\n    let bufferInfo = /** @type {BufferInfo} */ (bufferOrVertexArrayObjectInfo);\n    let attributeInfos = programInfo.attributes;\n    for (let name in attributeInfos) {\n      if (!(name in bufferInfo.attributes)) {\n        throw new Error(`Missing buffer for attribute '${name}'.`);\n      }\n      let attrib = bufferInfo.attributes[name];\n      let { location, applier } = attributeInfos[attrib.name];\n      applier.call(\n        gl,\n        location,\n        attrib.buffer,\n        attrib.size,\n        attrib.type,\n        attrib.normalize,\n        attrib.stride,\n        attrib.offset,\n        attrib.divisor,\n      );\n    }\n    if (bufferInfo.element) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.element.buffer);\n    }\n  }\n}\n\n/**\n * @param {WebGL2RenderingContext} gl\n * @param {ReturnType<createProgramInfo>} programInfo\n * @param {Record<string, number|Float32List|Int32List|Uint32List>} uniforms\n */\nexport function bindProgramUniforms(gl, programInfo, uniforms) {\n  let uniformInfos = programInfo.uniforms;\n  for (let name in uniforms) {\n    let value = uniforms[name];\n    let { location, applier } = uniformInfos[name];\n    applier.call(gl, location, /** @type {any} */ (value));\n  }\n}\n","import { isWebGL2Supported } from '../../GLHelper.js';\nimport { bindProgramAttributes } from '../../program/helper/ProgramInfoHelper.js';\nimport {\n  getBufferTypeForBufferSource,\n  getByteCountForBufferType,\n  getTypedArrayForBufferType,\n} from './BufferHelper.js';\n\n/**\n * @typedef {WebGLBuffer|BufferSource|Array<number>} AttribBufferLike\n *\n * @typedef ArrayAttribOption\n * @property {AttribBufferLike} buffer\n * @property {string} [name]\n * @property {number} [size]\n * @property {GLenum} [type]\n * @property {boolean} [normalize]\n * @property {number} [stride]\n * @property {number} [offset]\n * @property {number} [divisor]\n * @property {GLenum} [usage]\n * @property {number} [length]\n *\n * @typedef ElementAttribOption\n * @property {AttribBufferLike} buffer\n * @property {GLenum} [type]\n * @property {GLenum} [usage]\n * @property {number} [length]\n *\n * @typedef {ReturnType<createArrayAttrib>} ArrayAttrib\n * @typedef {ReturnType<createElementAttrib>} ElementAttrib\n *\n * @typedef BufferInfo\n * @property {Record<string, ArrayAttrib>} attributes\n * @property {number} vertexCount\n * @property {ElementAttrib} element\n *\n * @typedef VertexArrayObjectInfo\n * @property {WebGLVertexArrayObject} handle\n * @property {number} vertexCount\n * @property {ElementAttrib} element\n */\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {Record<string, ArrayAttribOption>} arrays\n * @param {ElementAttribOption} [elementArray]\n * @returns {BufferInfo}\n */\nexport function createBufferInfo(gl, arrays, elementArray = undefined) {\n  let attributes = createVertexAttributesInfo(\n    /** @type {WebGLRenderingContext|WebGL2RenderingContext} */ (gl),\n    arrays,\n  );\n  let element = createElementAttributeInfo(\n    /** @type {WebGLRenderingContext|WebGL2RenderingContext} */ (gl),\n    elementArray,\n  );\n  let vertexCount;\n  if (element) {\n    vertexCount = element.length;\n  } else {\n    let names = Object.keys(attributes);\n    if (names.length > 0) {\n      let a = attributes[names[0]];\n      vertexCount = Math.trunc(a.length / a.size);\n    } else {\n      vertexCount = 0;\n    }\n  }\n  return {\n    attributes,\n    element,\n    vertexCount,\n  };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {BufferInfo} bufferInfo\n * @param {Array<import('../../program/helper/ProgramInfoHelper.js').ProgramInfo>} programInfos\n * @returns {VertexArrayObjectInfo}\n */\nexport function createVertexArrayInfo(gl, bufferInfo, programInfos) {\n  if (!isWebGL2Supported(gl)) {\n    throw new Error('Vertex array objects is only supported on WebGL2.');\n  }\n  const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n  let vao = gl2.createVertexArray();\n  gl2.bindVertexArray(vao);\n  for (let programInfo of programInfos) {\n    bindProgramAttributes(gl2, programInfo, bufferInfo);\n  }\n  gl2.bindVertexArray(null);\n  return {\n    handle: vao,\n    element: bufferInfo.element,\n    vertexCount: bufferInfo.vertexCount,\n  };\n}\n\n/**\n * @param {WebGLRenderingContextBase} gl\n * @param {BufferInfo|VertexArrayObjectInfo} bufferOrVertexArrayObjectInfo\n */\nexport function drawBufferInfo(\n  gl,\n  bufferOrVertexArrayObjectInfo,\n  mode = gl.TRIANGLES,\n  offset = 0,\n  vertexCount = bufferOrVertexArrayObjectInfo.vertexCount,\n  instanceCount = undefined,\n) {\n  let element = bufferOrVertexArrayObjectInfo.element;\n  if (element) {\n    let elementType = element.type;\n    if (instanceCount !== undefined) {\n      if (!isWebGL2Supported(gl)) {\n        throw new Error(\n          'Instanced element drawing is only supported on WebGL2.',\n        );\n      }\n      const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n      gl2.drawElementsInstanced(\n        mode,\n        vertexCount,\n        elementType,\n        offset,\n        instanceCount,\n      );\n    } else {\n      gl.drawElements(mode, vertexCount, elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      if (!isWebGL2Supported(gl)) {\n        throw new Error('Instanced array drawing is only supported on WebGL2.');\n      }\n      const gl2 = /** @type {WebGL2RenderingContext} */ (gl);\n      gl2.drawArraysInstanced(mode, offset, vertexCount, instanceCount);\n    } else {\n      gl.drawArrays(mode, offset, vertexCount);\n    }\n  }\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl\n * @param {ElementAttribOption} [elementArray]\n * @returns {ElementAttrib}\n */\nfunction createElementAttributeInfo(gl, elementArray = undefined) {\n  if (!elementArray) {\n    return null;\n  }\n  if (typeof elementArray !== 'object') {\n    throw new Error('Element attribute options must be an object.');\n  }\n  let {\n    type = gl.UNSIGNED_SHORT,\n    buffer,\n    usage = gl.STATIC_DRAW,\n    length,\n  } = /** @type {ElementAttribOption} */ (elementArray);\n\n  // Resolve buffer.\n  if (buffer instanceof WebGLBuffer) {\n    // Do nothing :)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n  } else if (ArrayBuffer.isView(buffer)) {\n    /** @type {BufferSource} */\n    let srcData = buffer;\n    buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, srcData, usage);\n    if (type === undefined) {\n      type = getBufferTypeForBufferSource(gl, srcData);\n    }\n    if (length === undefined) {\n      // @ts-ignore\n      length = srcData.length;\n    }\n  } else if (Array.isArray(buffer)) {\n    /** @type {Array<number>} */\n    let array = buffer;\n    buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(array), usage);\n    if (length === undefined) {\n      length = array.length;\n    }\n  } else if (typeof buffer === 'number') {\n    let size = buffer;\n    buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, size, usage);\n    if (length === undefined) {\n      length = size;\n    }\n  } else {\n    throw new Error('Invalid buffer for element attribute options.');\n  }\n\n  // Resolve type.\n  if (type === undefined) {\n    type = gl.UNSIGNED_SHORT;\n  }\n\n  // Resolve length.\n  if (length === undefined) {\n    let bytes = gl.getBufferParameter(gl.ELEMENT_ARRAY_BUFFER, gl.BUFFER_SIZE);\n    length = Math.trunc(bytes / getByteCountForBufferType(gl, type));\n  }\n\n  return createElementAttrib(buffer, type, length);\n}\n\n/**\n * @param {WebGLRenderingContext|WebGL2RenderingContext} gl\n * @param {Record<string, ArrayAttribOption>} arrays\n * @returns {Record<string, ArrayAttrib>}\n */\nfunction createVertexAttributesInfo(gl, arrays) {\n  /** @type {Record<string, ArrayAttrib>} */\n  let result = {};\n  for (let key of Object.keys(arrays)) {\n    let array = arrays[key];\n    if (!array) {\n      continue;\n    }\n    if (typeof array !== 'object') {\n      throw new Error('Array attribute options must be an object.');\n    }\n    let {\n      name = key,\n      buffer,\n      size = 3,\n      type,\n      normalize = false,\n      stride = 0,\n      offset = 0,\n      divisor = undefined,\n      usage = gl.STATIC_DRAW,\n      length,\n    } = /** @type {ArrayAttribOption} */ (array);\n\n    // Resolve buffer.\n    if (buffer instanceof WebGLBuffer) {\n      // Do nothing :)\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    } else if (ArrayBuffer.isView(buffer)) {\n      /** @type {BufferSource} */\n      let srcData = buffer;\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, srcData, usage);\n      if (type === undefined) {\n        type = getBufferTypeForBufferSource(gl, srcData);\n      }\n      if (length === undefined) {\n        // @ts-ignore\n        length = srcData.length;\n      }\n    } else if (Array.isArray(buffer)) {\n      /** @type {Array<number>} */\n      let array = buffer;\n      if (type === undefined) {\n        type = gl.FLOAT;\n      }\n      if (length === undefined) {\n        length = array.length;\n      }\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      let TypedArray = getTypedArrayForBufferType(gl, type);\n      gl.bufferData(gl.ARRAY_BUFFER, new TypedArray(array), usage);\n    } else if (typeof buffer === 'number') {\n      let size = buffer;\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, size, usage);\n      if (length === undefined) {\n        length = size;\n      }\n    } else {\n      throw new Error(\n        `Invalid buffer '${buffer}' for array attribute options.`,\n      );\n    }\n\n    // Resolve type.\n    if (type === undefined) {\n      type = gl.FLOAT;\n    }\n\n    // Resolve length.\n    if (length === undefined) {\n      let bytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n      length = Math.trunc(bytes / getByteCountForBufferType(gl, type));\n    }\n\n    // Resolve size.\n    if (size === undefined) {\n      size = tryVertexSize(name, length);\n    }\n\n    result[name] = createArrayAttrib(\n      name,\n      buffer,\n      length,\n      size,\n      type,\n      normalize,\n      stride,\n      offset,\n      divisor,\n    );\n  }\n  return result;\n}\n\n/**\n * @param {string} attribName\n * @param {number} arrayLength\n */\nfunction tryVertexSize(attribName, arrayLength) {\n  let result;\n  if (attribName.includes('texcoord')) {\n    result = 2;\n  } else if (attribName.includes('color')) {\n    result = 4;\n  } else {\n    result = 3;\n  }\n  if (arrayLength % result !== 0) {\n    throw new Error(\n      `Could not determine vertex size - guessed ${result} but array length ${arrayLength} is not evenly divisible.`,\n    );\n  }\n  return result;\n}\n\n/**\n * @param {WebGLBuffer} buffer\n * @param {GLenum} type\n * @param {number} length\n */\nfunction createElementAttrib(buffer, type, length) {\n  return {\n    buffer,\n    type,\n    length,\n  };\n}\n\n/**\n * @param {string} name\n * @param {WebGLBuffer} buffer\n * @param {number} length\n * @param {number} size\n * @param {GLenum} type\n * @param {boolean} normalize\n * @param {number} stride\n * @param {number} offset\n * @param {number} divisor\n */\nfunction createArrayAttrib(\n  name,\n  buffer,\n  length,\n  size,\n  type,\n  normalize,\n  stride,\n  offset,\n  divisor,\n) {\n  return {\n    name,\n    buffer,\n    length,\n    size,\n    type,\n    normalize,\n    stride,\n    offset,\n    divisor,\n  };\n}\n","import { getActiveAttribsInfo } from './ProgramAttributeInfo.js';\nimport { getActiveUniformsInfo } from './ProgramUniformInfo.js';\nimport { draw } from './helper/ProgramHelper.js';\n\nexport class ProgramInfo {\n  /**\n   * @param {WebGL2RenderingContext} gl\n   * @param {WebGLProgram} program\n   */\n  constructor(gl, program) {\n    this.handle = program;\n\n    this.activeUniforms = getActiveUniformsInfo(gl, program);\n    this.activeAttributes = getActiveAttribsInfo(gl, program);\n\n    this.drawContext = new ProgramInfoDrawContext(gl, this);\n  }\n\n  /**\n   * Bind the program and prepare to draw. This returns the bound context\n   * that can modify the draw state.\n   *\n   * @param {WebGL2RenderingContext} gl\n   * @returns {ProgramInfoDrawContext} The bound context to draw with.\n   */\n  bind(gl) {\n    gl.useProgram(this.handle);\n\n    this.drawContext.gl = gl;\n    return this.drawContext;\n  }\n}\n\nexport class ProgramInfoDrawContext {\n  \n  /**\n   * @param {WebGL2RenderingContext} gl \n   * @param {ProgramInfo} programInfo \n   */\n  constructor(gl, programInfo) {\n    this.gl = gl;\n    /** @private */\n    this.parent = programInfo;\n  }\n\n  /**\n   * @param {string} uniformName \n   * @param {any} value\n   */\n  uniform(uniformName, value) {\n    const activeUniforms = this.parent.activeUniforms;\n    if (uniformName in activeUniforms) {\n      let uniform = activeUniforms[uniformName];\n      let location = uniform.location;\n      uniform.applier.call(this.gl, location, value);\n    }\n    return this;\n  }\n\n  /**\n   * @param {string} attributeName Name of the attribute.\n   * @param {GLenum} bufferType The buffer data type. This is usually `gl.FLOAT`\n   * but can also be one of `gl.BYTE`, `gl.UNSIGNED_BYTE`, `gl.SHORT`, `gl.UNSIGNED_SHORT`\n   * or `gl.HALF_FLOAT` for WebGL2.\n   * @param {WebGLBuffer} buffer The buffer handle.\n   * @param {boolean} [normalize=false] Whether to normalize the vectors in the buffer.\n   * @param {number} [stride=0] The stride for each vector in the buffer.\n   * @param {number} [offset=0] The initial offset in the buffer.\n   */\n  attribute(\n    attributeName,\n    bufferType,\n    buffer,\n    normalize = false,\n    stride = 0,\n    offset = 0,\n  ) {\n    const gl = this.gl;\n    const activeAttributes = this.parent.activeAttributes;\n    if (attributeName in activeAttributes) {\n      let attribute = activeAttributes[attributeName];\n      let location = attribute.location;\n      let size = attribute.size;\n      if (buffer) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(\n          location,\n          size,\n          bufferType,\n          normalize,\n          stride,\n          offset,\n        );\n        gl.enableVertexAttribArray(location);\n      } else {\n        gl.disableVertexAttribArray(location);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Draws using this program.\n   *\n   * @param {WebGL2RenderingContext} gl\n   * @param {number} mode\n   * @param {number} offset\n   * @param {number} count\n   * @param {WebGLBuffer} [elementBuffer]\n   */\n  draw(gl, mode, offset, count, elementBuffer = undefined) {\n    draw(gl, mode, offset, count, elementBuffer);\n    return this.parent;\n  }\n}\n","import { createShader, createShaderProgram } from './helper/ProgramHelper.js';\n\nexport class ProgramBuilder {\n  /**\n   * @param {WebGL2RenderingContext} gl\n   * @param {WebGLProgram} [program]\n   */\n  constructor(gl, program = undefined) {\n    this.handle = program || gl.createProgram();\n    /** @type {Array<WebGLShader>} */\n    this.shaders = [];\n    /** @type {WebGL2RenderingContext} */\n    this.gl = gl;\n  }\n\n  /**\n   * @param {GLenum} shaderType\n   * @param {string} shaderSource\n   * @returns {ProgramBuilder}\n   */\n  shader(shaderType, shaderSource) {\n    const gl = this.gl;\n    let shader = createShader(gl, shaderType, shaderSource);\n    this.shaders.push(shader);\n    return this;\n  }\n\n  /**\n   * @returns {WebGLProgram}\n   */\n  link() {\n    const gl = this.gl;\n    createShaderProgram(gl, this.handle, this.shaders);\n    this.shaders.length = 0;\n    return this.handle;\n  }\n}\n","import { BufferBuilder } from './BufferBuilder.js';\nimport { BufferInfo } from './BufferInfo.js';\nimport {\n  getBufferTypeForBufferSource,\n  getBufferTypeForTypedArray,\n} from './helper/BufferHelper.js';\n\nexport class BufferInfoBuilder {\n  /**\n   * @param {WebGLRenderingContext|WebGL2RenderingContext} gl The gl context.\n   * @param {GLenum} target The buffer bind target. Usually, this is\n   * `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`.\n   * @param {WebGLBuffer} [buffer] The buffer handle. If undefined, a\n   * new buffer will be created.\n   */\n  constructor(gl, target, buffer = undefined) {\n    /** @private */\n    this.bufferBuilder = new BufferBuilder(gl, target, buffer);\n    /** @private */\n    this.bufferType = gl.FLOAT;\n  }\n\n  get gl() {\n    return this.bufferBuilder.gl;\n  }\n\n  get handle() {\n    return this.bufferBuilder.handle;\n  }\n\n  get target() {\n    return this.bufferBuilder.target;\n  }\n\n  /**\n   * @param {BufferSource|number} srcDataOrSize The buffer data source or the buffer size in bytes.\n   * @param {GLenum} [usage] The buffer data usage. By default, this is `gl.STATIC_DRAW`.\n   * @returns {BufferInfoBuilder}\n   */\n  data(srcDataOrSize, usage = undefined) {\n    this.bufferBuilder.data(srcDataOrSize, usage);\n    if (typeof srcDataOrSize !== 'number') {\n      this.bufferType = getBufferTypeForBufferSource(this.gl, srcDataOrSize);\n    }\n    return this;\n  }\n\n  /**\n   * @param {BufferSource} srcData The buffer data source.\n   * @param {number} [dstOffset] The destination byte offset to put the data.\n   * @param {number} [srcOffset] The source array index offset to copy the data from.\n   * @param {number} [srcLength] The source array count to copy the data until.\n   * @returns {BufferInfoBuilder}\n   */\n  subData(\n    srcData,\n    dstOffset = undefined,\n    srcOffset = undefined,\n    srcLength = undefined,\n  ) {\n    this.bufferBuilder.subData(srcData, dstOffset, srcOffset, srcLength);\n    this.bufferType = getBufferTypeForBufferSource(this.gl, srcData);\n    return this;\n  }\n\n  /**\n   * @returns {BufferInfo}\n   */\n  build() {\n    const handle = this.bufferBuilder.build();\n    const gl = this.gl;\n    const target = this.target;\n    const type = this.bufferType;\n    return new BufferInfo(gl, target, type, handle);\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\nexport const ProgramAttributeEnums = {\n  // WebGL1\n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  FLOAT: 0x1406,\n  // WebGL2\n  HALF_FLOAT: 0x140b,\n};\n","import { ProgramBuilder } from './ProgramBuilder.js';\nimport { ProgramInfo } from './ProgramInfo.js';\n\nexport class ProgramInfoBuilder {\n  /**\n   * @param {WebGL2RenderingContext} gl\n   * @param {WebGLProgram} [program]\n   */\n  constructor(gl, program = undefined) {\n    /** @private */\n    this.programBuilder = new ProgramBuilder(gl, program);\n  }\n\n  get gl() {\n    return this.programBuilder.gl;\n  }\n\n  get handle() {\n    return this.programBuilder.handle;\n  }\n\n  get shaders() {\n    return this.programBuilder.shaders;\n  }\n\n  /**\n   * @param {GLenum} shaderType\n   * @param {string} shaderSource\n   * @returns {ProgramInfoBuilder}\n   */\n  shader(shaderType, shaderSource) {\n    this.programBuilder.shader(shaderType, shaderSource);\n    return this;\n  }\n\n  /**\n   * @returns {ProgramInfo}\n   */\n  link() {\n    const handle = this.programBuilder.link();\n    return new ProgramInfo(this.gl, handle);\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\nexport const ProgramUniformEnums = {\n  // WebGL1\n  FLOAT: 0x1406,\n  FLOAT_VEC2: 0x8b50,\n  FLOAT_VEC3: 0x8b51,\n  FLOAT_VEC4: 0x8b52,\n  INT: 0x1404,\n  INT_VEC2: 0x8b53,\n  INT_VEC3: 0x8b54,\n  INT_VEC4: 0x8b55,\n  BOOL: 0x8b56,\n  BOOL_VEC2: 0x8b57,\n  BOOL_VEC3: 0x8b58,\n  BOOL_VEC4: 0x8b59,\n  FLOAT_MAT2: 0x8b5a,\n  FLOAT_MAT3: 0x8b5b,\n  FLOAT_MAT4: 0x8b5c,\n  SAMPLER_2D: 0x8b5e,\n  SAMPLER_CUBE: 0x8b60,\n  // WebGL2\n  UNSIGNED_INT: 0x1405,\n  UNSIGNED_INT_VEC2: 0x8dc6,\n  UNSIGNED_INT_VEC3: 0x8dc7,\n  UNSIGNED_INT_VEC4: 0x8dc8,\n  FLOAT_MAT2x3: 0x8b65,\n  FLOAT_MAT2x4: 0x8b66,\n  FLOAT_MAT3x2: 0x8b67,\n  FLOAT_MAT3x4: 0x8b68,\n  FLOAT_MAT4x2: 0x8b69,\n  FLOAT_MAT4x3: 0x8b6a,\n  SAMPLER_3D: 0x8b5f,\n  SAMPLER_2D_SHADOW: 0x8b62,\n  SAMPLER_2D_ARRAY: 0x8dc1,\n  SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n  SAMPLER_CUBE_SHADOW: 0x8dc5,\n  INT_SAMPLER_2D: 0x8dca,\n  INT_SAMPLER_3D: 0x8dcb,\n  INT_SAMPLER_CUBE: 0x8dcc,\n  INT_SAMPLER_2D_ARRAY: 0x8dcf,\n  UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n  UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n  UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n};\n"],"names":["isWebGL2Supported","gl","WebGL2RenderingContext","BufferDataContext","constructor","target","this","data","srcDataOrSize","usage","undefined","bufferData","STATIC_DRAW","ArrayBuffer","isView","Error","subData","srcData","dstOffset","srcOffset","srcLength","bufferSubData","srcSubData","subarray","BufferBuilder","buffer","dataContext","handle","createBuffer","bindBuffer","build","BufferInfo","bufferType","type","bindContext","bind","BufferEnums","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","getTypedArrayForBufferType","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","getBufferTypeForBufferSource","bufferSource","BUFFER_TYPE_BYTE_COUNT","getByteCountForBufferType","getBufferByteCount","getBufferParameter","BUFFER_SIZE","getAttribVertexSize","attribType","BOOL","FLOAT_VEC2","INT_VEC2","BOOL_VEC2","FLOAT_VEC3","INT_VEC3","BOOL_VEC3","FLOAT_VEC4","INT_VEC4","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttributeFunction","attributeType","attributeFloatBuffer","gl2","attributeIntBuffer","attributeFloatMat2Buffer","attributeFloatMat3Buffer","attributeFloatMat4Buffer","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","attributeUintBuffer","index","vertexSize","normalize","stride","offset","divisor","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","vertexAttribIPointer","matrixSize","matrixLength","attributeFloatMatrixBufferImpl","call","matrixCount","matrixStride","offsetPerMatrix","i","ii","getActiveUniforms","program","result","uniformCount","getProgramParameter","ACTIVE_UNIFORMS","uniformInfo","getActiveUniform","push","getActiveAttribs","attributeCount","ACTIVE_ATTRIBUTES","attributeInfo","getActiveAttrib","getActiveAttribsInfo","activeAttributes","activeInfo","attributeName","name","attributeLength","size","attributeLocation","getAttribLocation","attributeApplier","attributeSize","length","location","applier","value","getUniformFunction","uniformType","gl1","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","SAMPLER_2D","SAMPLER_CUBE","uniform1ui","uniform2uiv","uniform3uiv","uniform4uiv","FLOAT_MAT2x3","uniformMatrix2x3fv","FLOAT_MAT2x4","uniformMatrix2x4fv","FLOAT_MAT3x2","uniformMatrix3x2fv","FLOAT_MAT3x4","uniformMatrix3x4fv","FLOAT_MAT4x2","uniformMatrix4x2fv","FLOAT_MAT4x3","uniformMatrix4x3fv","SAMPLER_3D","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","uniformMatrix2f","m00","m01","m10","m11","uniformMatrix3f","m02","m12","m20","m21","m22","uniformMatrix4f","m03","m13","m23","m30","m31","m32","m33","uniformMatrix2x3f","uniformMatrix2x4f","uniformMatrix3x2f","uniformMatrix3x4f","uniformMatrix4x2f","uniformMatrix4x3f","uniform1fv","uniform1iv","uniform1uiv","uniform2f","uniform3f","uniform4f","uniform2i","uniform3i","uniform4i","uniform2ui","uniform3ui","uniform4ui","getActiveUniformsInfo","activeUniforms","uniformName","uniformSize","uniformLocation","getUniformLocation","uniformApplier","createShader","shaderType","shaderSource","shader","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","deleteShader","async","createShaderProgram","shaders","attachShader","linkProgram","ext","getExtension","statusInterval","Promise","resolve","_","setTimeout","COMPLETION_STATUS_KHR","detachShader","LINK_STATUS","getProgramInfoLog","deleteProgram","draw","mode","count","elementBuffer","ELEMENT_ARRAY_BUFFER","drawElements","drawArrays","bindProgramAttributes","programInfo","bufferOrVertexArrayObjectInfo","WebGLVertexArrayObject","vaoInfo","bindVertexArray","bufferInfo","attributeInfos","attributes","attrib","element","tryVertexSize","attribName","arrayLength","includes","createArrayAttrib","arrays","elementArray","vertexCount","key","Object","keys","array","WebGLBuffer","Array","isArray","TypedArray","bytes","Math","trunc","createVertexAttributesInfo","createElementAttrib","createElementAttributeInfo","names","a","programInfos","vao","createVertexArray","TRIANGLES","instanceCount","elementType","drawElementsInstanced","drawArraysInstanced","typedArray","BUFFER_USAGE","ProgramInfo","drawContext","ProgramInfoDrawContext","useProgram","parent","uniform","attribute","disableVertexAttribArray","ProgramBuilder","createProgram","link","uniforms","uniformInfos","linkStatus","deleteStatus","DELETE_STATUS","validateStatus","VALIDATE_STATUS","infoLog","shaderSources","shaderTypes","VERTEX_SHADER","FRAGMENT_SHADER","bufferBuilder","programBuilder"],"mappings":"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"}