"use strict";const t="noscale",e="fit",i="scale",n="fill",s="stretch",h=300,a=150,o=e;class l extends HTMLElement{static create(t={}){const{root:e=document.body,id:i,mode:n=o,width:s=h,height:r=a,debug:d=!1}=t||{};let c=new l;return c.id=i,c.mode=n,c.width=s,c.height=r,c.debug=d,e.appendChild(c),c}static define(t=window.customElements){t.define("display-port",this)}static get[Symbol.for("templateNode")](){let t=document.createElement("template");return t.innerHTML='\n<div class="container">\n  <label class="hidden" id="title">display-port</label>\n  <label class="hidden" id="fps">00</label>\n  <label class="hidden" id="dimension">0x0</label>\n  <div class="content">\n    <slot id="inner">\n      <canvas>\n        Oh no! Your browser does not support canvas.\n      </canvas>\n    </slot>\n    <slot name="overlay"></slot>\n  </div>\n  <slot name="frame"></slot>\n</div>',Object.defineProperty(this,Symbol.for("templateNode"),{value:t}),t}static get[Symbol.for("styleNode")](){let t=document.createElement("style");return t.innerHTML="\n:host {\n  display: inline-block;\n  color: #555555;\n}\n\n.container {\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.content {\n  position: relative;\n  margin: auto;\n  overflow: hidden;\n}\n\n.content > *:not(canvas) {\n  width: 100%;\n  height: 100%;\n}\n\ncanvas {\n  background: #000000;\n  image-rendering: pixelated;\n}\n\nlabel {\n  position: absolute;\n  font-family: monospace;\n  color: currentColor;\n}\n\n#inner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n#title {\n  left: 0.5rem;\n  top: 0.5rem;\n}\n\n#fps {\n  right: 0.5rem;\n  top: 0.5rem;\n}\n\n#dimension {\n  left: 0.5rem;\n  bottom: 0.5rem;\n}\n\n.hidden {\n  display: none;\n}\n\n:host([debug]) .container {\n  outline: 6px dashed rgba(0, 0, 0, 0.1);\n  outline-offset: -4px;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n:host([mode='noscale']) canvas {\n  margin: 0;\n  top: 0;\n  left: 0;\n}\n\n:host([mode='stretch']) canvas,\n:host([mode='scale']) canvas {\n  width: 100%;\n  height: 100%;\n}\n\n:host([mode='fit']),\n:host([mode='scale']),\n:host([mode='center']),\n:host([mode='stretch']),\n:host([mode='fill']) {\n  width: 100%;\n  height: 100%;\n}\n\n:host([full]) {\n  width: 100vw !important;\n  height: 100vh !important;\n}\n\n:host([disabled]) {\n  display: none;\n}\n\nslot {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n::slotted(*) {\n  pointer-events: auto;\n}",Object.defineProperty(this,Symbol.for("styleNode"),{value:t}),t}static get observedAttributes(){return["debug","disabled","width","height","onframe","id","class"]}get mode(){return this.getAttribute("mode")}set mode(t){this.setAttribute("mode",t)}get debug(){return this._debug}set debug(t){this.toggleAttribute("debug",t)}get disabled(){return this._disabled}set disabled(t){this.toggleAttribute("disabled",t)}get width(){return this._width}set width(t){this.setAttribute("width",String(t))}get height(){return this._height}set height(t){this.setAttribute("height",String(t))}get onframe(){return this._onframe}set onframe(t){this._onframe&&this.removeEventListener("frame",this._onframe),this._onframe=t,this._onframe&&this.addEventListener("frame",t)}constructor(){super();const t=this.attachShadow({mode:"open"});t.appendChild(this.constructor[Symbol.for("templateNode")].content.cloneNode(!0)),t.appendChild(this.constructor[Symbol.for("styleNode")].cloneNode(!0)),this._canvasElement=null,this._contentElement=t.querySelector(".content"),this._innerElement=t.querySelector("#inner"),this._titleElement=t.querySelector("#title"),this._fpsElement=t.querySelector("#fps"),this._dimensionElement=t.querySelector("#dimension"),this._debug=!1,this._disabled=!1,this._width=h,this._height=a,this._onframe=void 0,this._animationRequestHandle=0,this._prevAnimationFrameTime=0,this._resizeTimeoutHandle=0,this._resizeCanvasWidth=0,this._resizeCanvasHeight=0,this._frameEvent=new CustomEvent("frame",{composed:!0,bubbles:!1,detail:{now:0,prevTime:0,deltaTime:0,canvas:this._canvasElement}}),this._resizeEvent=new CustomEvent("resize",{composed:!0,bubbles:!1,detail:{width:0,height:0}}),this.update=this.update.bind(this),this.onDelayCanvasResize=this.onDelayCanvasResize.bind(this),this.onSlotChange=this.onSlotChange.bind(this)}get canvas(){return this._canvasElement}connectedCallback(){r(this,"mode"),r(this,"debug"),r(this,"disabled"),r(this,"width"),r(this,"height"),r(this,"onframe"),this.hasAttribute("mode")||this.setAttribute("mode",o),this.hasAttribute("tabindex")||this.setAttribute("tabindex","0"),this._innerElement.addEventListener("slotchange",this.onSlotChange),this._canvasElement=this._innerElement.querySelector("canvas"),this._canvasElement&&(this.updateCanvasSize(!0),this.resume())}disconnectedCallback(){this._innerElement.removeEventListener("slotchange",this.onSlotChange),this.pause()}attributeChangedCallback(t,e,i){switch(t){case"debug":this._debug=null!==i;break;case"disabled":this._disabled=null!==i;break;case"width":this._width=Number(i);break;case"height":this._height=Number(i);break;case"onframe":this.onframe=new Function("event","with(document){with(this){"+i+"}}").bind(this)}switch(t){case"disabled":i?(this.update(0),this.pause()):this.resume();break;case"id":case"class":this._titleElement.innerHTML=`display-port${this.className?"."+this.className:""}${this.hasAttribute("id")?"#"+this.getAttribute("id"):""}`;break;case"debug":this._titleElement.classList.toggle("hidden",i),this._fpsElement.classList.toggle("hidden",i),this._dimensionElement.classList.toggle("hidden",i)}}onSlotChange(t){let e=t.target.assignedElements({flatten:!0}).find((t=>t instanceof HTMLCanvasElement));if(!e)throw new Error("No valid canvas element found for display.");this._canvasElement=e,this.updateCanvasSize(!0),this.resume()}getContext(t="2d",e){return this._canvasElement.getContext(t,e)}pause(){window.cancelAnimationFrame(this._animationRequestHandle)}resume(){this._animationRequestHandle=window.requestAnimationFrame(this.update)}update(e){this._animationRequestHandle=window.requestAnimationFrame(this.update),this.updateCanvasSize(!1);const i=e-this._prevAnimationFrameTime;if(this._prevAnimationFrameTime=e,this._debug){const e=i<=0?"--":String(Math.round(1e3/i)).padStart(2,"0");this._fpsElement.textContent!==e&&(this._fpsElement.textContent=e);if(this.mode===t){let t=`${this._width}x${this._height}`;this._dimensionElement.textContent!==t&&(this._dimensionElement.textContent=t)}else{let t=`${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;this._dimensionElement.textContent!==t&&(this._dimensionElement.textContent=t)}}let n=this._frameEvent.detail;n.now=e,n.prevTime=this._prevAnimationFrameTime,n.deltaTime=i,this.dispatchEvent(this._frameEvent)}onDelayCanvasResize(){this._resizeTimeoutHandle=null,this.updateCanvasSize(!0)}delayCanvasResize(t,e){t===this._resizeCanvasWidth&&e===this._resizeCanvasHeight||(this._resizeCanvasWidth=t,this._resizeCanvasHeight=e,this._resizeTimeoutHandle&&window.clearTimeout(this._resizeTimeoutHandle),this._resizeTimeoutHandle=window.setTimeout(this.onDelayCanvasResize,200))}updateCanvasSize(h=!0){const a=this.shadowRoot.host.getBoundingClientRect(),o=a.width,l=a.height;let r=this._canvasElement,d=this._width,c=this._height;const m=this.mode;if(m===s||m===n)d=o,c=l;else if(m!==t&&(o<d||l<c||m===e||m==i)){let t=o/d,e=l/c;t<e?(d=o,c*=t):(d*=e,c=l)}if(d=Math.floor(d),c=Math.floor(c),void 0===h&&(h=r.clientWidth!==d||r.clientHeight!==c),!h)return void this.delayCanvasResize(d,c);let g=.5*Math.min(d/this._width,c/this._height);if(this._innerElement.style.fontSize=`font-size: ${g}em`,h){m===i?(r.width=this._width,r.height=this._height):m!==s&&(r.width=d,r.height=c);let t=this._contentElement.style;t.width=`${d}px`,t.height=`${c}px`,m!==e&&m!==n||(this._width=d,this._height=c);let h=this._resizeEvent.detail;h.width=d,h.height=c,this.dispatchEvent(this._resizeEvent)}}}function r(t,e){if(Object.prototype.hasOwnProperty.call(t,e)){let i=t[e];delete t[e],t[e]=i}}const d="scale",c="conatiner",m=300,g=150;class u extends HTMLElement{static create(t={}){const{root:e=document.body,id:i,scaling:n=d,sizing:s=c,width:h=m,height:a=g}=t||{};window.customElements.get("flex-canvas")||window.customElements.define("flex-canvas",u);let o=new u;return o.id=i,o.scaling=n,o.sizing=s,o.width=h,o.height=a,e.appendChild(o),o}static define(t=window.customElements){t.define("flex-canvas",this)}static get[Symbol.for("templateNode")](){let t=document.createElement("template");return t.innerHTML='<div class="container">\n  <div class="padding"></div>\n  <div class="innerContainer">\n    <div class="padding"></div>\n    <slot><canvas>Oh no! Your browser does not support canvas.</canvas></slot>\n    <div class="padding"></div>\n  </div>\n  <div class="padding"></div>\n</div>',Object.defineProperty(this,Symbol.for("templateNode"),{value:t}),t}static get[Symbol.for("styleNode")](){let t=document.createElement("style");return t.innerHTML='\n:host {\n  display: inline-block;\n  flex: 1;\n  --width: 300px;\n  --height: 150px;\n}\n:host([scaling="noscale"]) {\n  width: var(--width);\n  height: var(--height);\n}\n:host([sizing="viewport"]) {\n    position: fixed;\n    top: 0;\n    left: 0;\n}\n.container {\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.innerContainer {\n  display: flex;\n  flex-direction: column;\n}\n.padding {\n  flex: 1;\n}',Object.defineProperty(this,Symbol.for("styleNode"),{value:t}),t}static get observedAttributes(){return["sizing","width","height","resize-delay"]}get scaling(){return this.getAttribute("scaling")}set scaling(t){this.setAttribute("scaling",t)}get sizing(){return this._sizing}set sizing(t){this.setAttribute("sizing",String(t))}get resizeDelay(){return this._resizeDelay}set resizeDelay(t){this.setAttribute("resize-delay",String(t))}get width(){return this._width}set width(t){this.setAttribute("width",String(t))}get height(){return this._height}set height(t){this.setAttribute("height",String(t))}get canvas(){return this.canvasElement}constructor(){super();const t=this.attachShadow({mode:"open"});t.appendChild(this.constructor[Symbol.for("templateNode")].content.cloneNode(!0)),t.appendChild(this.constructor[Symbol.for("styleNode")].cloneNode(!0)),this._sizing="none",this._width=m,this._height=g,this._resizeDelay=0,this.animationFrameHandle=0,this.resizeTimeoutHandle=0,this.resizeCanvasWidth=0,this.resizeCanvasHeight=0,this.canvasSlotElement=t.querySelector("slot"),this.canvasElement=null,this.onResize=this.onResize.bind(this),this.onAnimationFrame=this.onAnimationFrame.bind(this),this.onSlotChange=this.onSlotChange.bind(this)}connectedCallback(){p(this,"scaling"),p(this,"sizing"),p(this,"width"),p(this,"height"),p(this,"resize-delay"),this.hasAttribute("scaling")||this.setAttribute("scaling",d),this.hasAttribute("tabindex")||this.setAttribute("tabindex","0"),this.animationFrameHandle=requestAnimationFrame(this.onAnimationFrame),this.canvasSlotElement.addEventListener("slotchange",this.onSlotChange),this.canvasElement||this.setCanvasElement(this.canvasSlotElement.querySelector("canvas"))}disconnectedCallback(){cancelAnimationFrame(this.animationFrameHandle),this.animationFrameHandle=null,this.canvasSlotElement.removeEventListener("slotchange",this.onSlotChange)}attributeChangedCallback(t,e,i){switch(t){case"sizing":switch(this._sizing=String(i),this._sizing){case"none":this.style.removeProperty("width"),this.style.removeProperty("height");break;case"container":this.style.setProperty("width","100%"),this.style.setProperty("height","100%");break;case"viewport":this.style.setProperty("width","100vw"),this.style.setProperty("height","100vh");break;default:let[t,e]=this._sizing.split(" ");t&&e&&(this.style.setProperty("width",t),this.style.setProperty("height",e))}break;case"width":this._width=Number(i),this.canvasElement&&(this.canvasElement.width=this._width);break;case"height":this._height=Number(i),this.canvasElement&&(this.canvasElement.height=this._height);break;case"resize-delay":this._resizeDelay=Number(i)}}onAnimationFrame(t){this.animationFrameHandle=requestAnimationFrame(this.onAnimationFrame),this.clientWidth===this.resizeCanvasWidth&&this.clientHeight===this.resizeCanvasHeight||(this.resizeCanvasWidth=this.clientWidth,this.resizeCanvasHeight=this.clientHeight,this._resizeDelay>0?this.resizeTimeoutHandle||(this.resizeTimeoutHandle=window.setTimeout(this.onResize,this._resizeDelay)):this.onResize())}onResize(){window.clearTimeout(this.resizeTimeoutHandle),this.resizeTimeoutHandle=null;const t=this.canvasElement;if(!t)return;const e=this.scaling,i=this.getBoundingClientRect(),n=i.width,s=i.height;let h=this._width,a=this._height,o=n/h,l=s/a;"noscale"===e&&(this.style.setProperty("--width",`${h}px`),this.style.setProperty("--height",`${a}px`)),"scale"===e&&(o<l?(t.style.setProperty("width",`${Math.floor(n)}px`),t.style.setProperty("height",`${Math.floor(a*o)}px`)):(t.style.setProperty("width",`${Math.floor(h*l)}px`),t.style.setProperty("height",`${Math.floor(s)}px`))),"stretch"===e&&(t.style.setProperty("width",`${Math.floor(n)}px`),t.style.setProperty("height",`${Math.floor(s)}px`)),"fit"===e&&(o<l?(h=Math.floor(n),a=Math.floor(a*o),t.style.setProperty("width",`${h}px`),t.style.setProperty("height",`${a}px`)):(h=Math.floor(h*l),a=Math.floor(s),t.style.setProperty("width",`${h}px`),t.style.setProperty("height",`${a}px`)),t.width!==h&&(t.width=h),t.height!==a&&(t.height=a)),"fill"===e&&(h=Math.floor(n),a=Math.floor(s),t.style.setProperty("width",`${h}px`),t.style.setProperty("height",`${a}px`),t.width!==h&&(t.width=h),t.height!==a&&(t.height=a))}onSlotChange(t){let e=t.target.assignedElements({flatten:!0}).find((t=>t instanceof HTMLCanvasElement));e&&this.setCanvasElement(e)}setCanvasElement(t){t.width=this._width,t.height=this._height,t.style.imageRendering="pixelated",this.canvasElement=t}getContext(t="2d",e){return this.canvasElement.getContext(t,e)}}function p(t,e){if(Object.prototype.hasOwnProperty.call(t,e)){let i=t[e];delete t[e],t[e]=i}}exports.DisplayPort=l,exports.FlexCanvas=u,exports.MODE_CENTER="center",exports.MODE_FILL=n,exports.MODE_FIT=e,exports.MODE_NOSCALE=t,exports.MODE_SCALE=i,exports.MODE_STRETCH=s;
//# sourceMappingURL=milque-display.cjs.js.map
