{"version":3,"file":"milque-display.esm.js","sources":["../src/DisplayPort.js","../src/FlexCanvas.js"],"sourcesContent":["const INNER_HTML = /* html */`\n<div class=\"container\">\n  <label class=\"hidden\" id=\"title\">display-port</label>\n  <label class=\"hidden\" id=\"fps\">00</label>\n  <label class=\"hidden\" id=\"dimension\">0x0</label>\n  <div class=\"content\">\n    <slot id=\"inner\">\n      <canvas>\n        Oh no! Your browser does not support canvas.\n      </canvas>\n    </slot>\n    <slot name=\"overlay\"></slot>\n  </div>\n  <slot name=\"frame\"></slot>\n</div>`;\n\nconst INNER_STYLE = /* css */`\n:host {\n  display: inline-block;\n  color: #555555;\n}\n\n.container {\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.content {\n  position: relative;\n  margin: auto;\n  overflow: hidden;\n}\n\n.content > *:not(canvas) {\n  width: 100%;\n  height: 100%;\n}\n\ncanvas {\n  background: #000000;\n  image-rendering: pixelated;\n}\n\nlabel {\n  position: absolute;\n  font-family: monospace;\n  color: currentColor;\n}\n\n#inner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n#title {\n  left: 0.5rem;\n  top: 0.5rem;\n}\n\n#fps {\n  right: 0.5rem;\n  top: 0.5rem;\n}\n\n#dimension {\n  left: 0.5rem;\n  bottom: 0.5rem;\n}\n\n.hidden {\n  display: none;\n}\n\n:host([debug]) .container {\n  outline: 6px dashed rgba(0, 0, 0, 0.1);\n  outline-offset: -4px;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n:host([mode='noscale']) canvas {\n  margin: 0;\n  top: 0;\n  left: 0;\n}\n\n:host([mode='stretch']) canvas,\n:host([mode='scale']) canvas {\n  width: 100%;\n  height: 100%;\n}\n\n:host([mode='fit']),\n:host([mode='scale']),\n:host([mode='center']),\n:host([mode='stretch']),\n:host([mode='fill']) {\n  width: 100%;\n  height: 100%;\n}\n\n:host([full]) {\n  width: 100vw !important;\n  height: 100vh !important;\n}\n\n:host([disabled]) {\n  display: none;\n}\n\nslot {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n::slotted(*) {\n  pointer-events: auto;\n}`;\n\n/**\n * No scaling is applied. The canvas size maintains a\n * 1:1 pixel ratio to the defined display dimensions.\n */\nexport const MODE_NOSCALE = 'noscale';\n\n/**\n * No scaling is applied, but the element fills the\n * entire viewport. The canvas size maintains a 1:1\n * pixel ratio to the defined display dimensions and\n * is centered inside the scaled element.\n */\nexport const MODE_CENTER = 'center';\n\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio. This will adjust\n * canvas resolution to fit the viewport dimensions.\n * In other words, the canvas pixel size remains\n * constant, but the number of pixels in the canvas\n * will increase or decrease to compensate. This is\n * the default scaling mode.\n */\nexport const MODE_FIT = 'fit';\n\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio and pixel\n * resolution. This will upscale and downscale the\n * pixel size depending on the viewport dimentions\n * in order to preserve the canvas pixel count. In\n * other words, the number of pixels in the canvas\n * remain constant but appear larger or smaller to\n * compensate.\n */\nexport const MODE_SCALE = 'scale';\n\n/**\n * Resizes the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio nor pixel\n * count (adds and removes pixels to fill size). If you\n * care about aspect ratio but not pixel count, consider\n * using 'fit' mode instead.\n */\nexport const MODE_FILL = 'fill';\n\n/**\n * Scales the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio but\n * does preserve pixel count (by stretching the pixel\n * size). If you care about aspect ratio and pixel\n * count, consider using 'scale' mode instead.\n */\nexport const MODE_STRETCH = 'stretch';\n\n/**\n * The default display x dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_WIDTH = 300;\n/**\n * The default display y dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_HEIGHT = 150;\n\n/** The default display scaling mode. */\nconst DEFAULT_MODE = MODE_FIT;\n\n/** The default resize timeout */\nconst DELAYED_RESIZE_MILLIS = 200;\n\n/**\n * @typedef {CustomEvent} FrameEvent\n * @property {number} detail.now\n * The current time in milliseconds.\n * @property {number} detail.prevTime\n * The previous frame time in milliseconds.\n * @property {number} detail.deltaTime\n * The time taken between the current and previous\n * frame in milliseconds.\n * @property {HTMLCanvasElement} detail.canvas\n * The canvas element.\n */\n\n/**\n * @typedef {MODE_CENTER|MODE_FIT|MODE_NOSCALE|MODE_SCALE|MODE_FILL|MODE_STRETCH} DisplayScaling\n */\n\n/**\n * A canvas that can scale and stretch with respect to the aspect ratio to fill\n * the viewport size.\n *\n * To start drawing, you should get the canvas context like so:\n *\n * For Canvas2D:\n * ```\n * const display = document.querySelector('display-port');\n * const ctx = display.canvas.getContext('2d');\n * ctx.drawText(0, 0, 'Hello World!');\n * ```\n *\n * For WebGL:\n * ```\n * const display = document.querySelector('display-port');\n * const gl = display.canvas.getContext('webgl');\n * gl.clear(gl.COLOR_BUFFER_BIT);\n * ```\n *\n * Usually, you would want to set the `width` and `height` attributes to define\n * the canvas size and aspect ratio in pixels. You can also change the scaling\n * behavior by setting the `mode` attribute.\n *\n * And for convenience, this element also dispatches a `frame` event every animation\n * frame (60 fps). This is basically the same as calling `requestAnimationFrame()`.\n *\n * NOTE: The viewport size is usually the parent container size. However, in the\n * rare case the element must be nested in a child container, you can define the\n * boolean attribute `full` to force the dimensions to be the actual window size.\n */\nexport class DisplayPort extends HTMLElement {\n\n  /**\n   * @param {object} [opts]\n   * @param {HTMLElement} [opts.root]\n   * @param {string} [opts.id]\n   * @param {DisplayScaling} [opts.mode]\n   * @param {number} [opts.width]\n   * @param {number} [opts.height]\n   * @param {boolean} [opts.debug]\n   */\n  static create(opts = {}) {\n    const {\n      root = document.body,\n      id = undefined,\n      mode = DEFAULT_MODE,\n      width = DEFAULT_WIDTH,\n      height = DEFAULT_HEIGHT,\n      debug = false\n    } = opts || {};\n    let result = new DisplayPort();\n    result.id = id;\n    result.mode = mode;\n    result.width = width;\n    result.height = height;\n    result.debug = debug;\n    root.appendChild(result);\n    return result;\n  }\n\n  static define(customElements = window.customElements) {\n    customElements.define('display-port', this);\n  }\n\n  /** @private */\n  static get [Symbol.for('templateNode')]() {\n    let t = document.createElement('template');\n    t.innerHTML = INNER_HTML;\n    Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n    return t;\n  }\n\n  /** @private */\n  static get [Symbol.for('styleNode')]() {\n    let t = document.createElement('style');\n    t.innerHTML = INNER_STYLE;\n    Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n    return t;\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  static get observedAttributes() {\n    return [\n      'debug',\n      'disabled',\n      // 'mode',\n      'width',\n      'height',\n      'onframe',\n      // Built-in attributes\n      'id',\n      'class',\n    ];\n  }\n\n  /**\n   * The scaling mode.\n   * - `noscale`: Do not perform scaling.\n   * - `center`: Do not perform scaling but stretch the display to fill the entire\n   * viewport. The unscaled canvas is centered.\n   * - `fit`: Resize resolution to fill the entire viewport and maintains the aspect\n   * ratio. The pixel resolution is changed. This is the default behavior.\n   * - `fill`: Resize resolution to fill the entire viewport but does not maintain\n   * aspect ratio.\n   * - `stretch`: Perform scaling to fill the entire viewport but does not maintain\n   * aspect ratio.\n   * - `scale`: Perform scaling to fill the entire viewport and maintains the\n   * aspect ratio and resolution. The pixel resolution remains constant.\n   * @returns {DisplayScaling} The current scaling mode.\n   */\n  get mode() {\n    return /** @type {DisplayScaling} */ (this.getAttribute('mode'));\n  }\n\n  set mode(value) {\n    this.setAttribute('mode', value);\n  }\n\n  /**\n   * Set to true for debug information.\n   * @returns {boolean}\n   */\n  get debug() {\n    return this._debug;\n  }\n\n  set debug(value) {\n    this.toggleAttribute('debug', value);\n  }\n\n  /**\n   * If disabled, animation frames will not fire.\n   * @returns {boolean}\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this.toggleAttribute('disabled', value);\n  }\n\n  /**\n   * The canvas width in pixels. This determines the aspect ratio and canvas buffer size.\n   * @returns {number}\n   */\n  get width() {\n    return this._width;\n  }\n\n  set width(value) {\n    this.setAttribute('width', String(value));\n  }\n\n  /**\n   * The canvas height in pixels. This determines the aspect ratio and canvas buffer size.\n   */\n  get height() {\n    return this._height;\n  }\n\n  set height(value) {\n    this.setAttribute('height', String(value));\n  }\n\n  /** Fired every animation frame. */\n  get onframe() {\n    return this._onframe;\n  }\n\n  set onframe(value) {\n    if (this._onframe) this.removeEventListener('frame', this._onframe);\n    this._onframe = value;\n    if (this._onframe) this.addEventListener('frame', value);\n  }\n\n  constructor() {\n    super();\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('templateNode')].content.cloneNode(true)\n    );\n    shadowRoot.appendChild(\n      this.constructor[Symbol.for('styleNode')].cloneNode(true)\n    );\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this._canvasElement = null;\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this._contentElement = shadowRoot.querySelector('.content');\n    /**\n     * @private\n     * @type {HTMLSlotElement}\n     */\n    this._innerElement = shadowRoot.querySelector('#inner');\n\n    /** @private */\n    this._titleElement = shadowRoot.querySelector('#title');\n    /** @private */\n    this._fpsElement = shadowRoot.querySelector('#fps');\n    /** @private */\n    this._dimensionElement = shadowRoot.querySelector('#dimension');\n\n    /** @private */\n    this._debug = false;\n    /** @private */\n    this._disabled = false;\n    /** @private */\n    this._width = DEFAULT_WIDTH;\n    /** @private */\n    this._height = DEFAULT_HEIGHT;\n    /** @private */\n    this._onframe = undefined;\n\n    /** @private */\n    this._animationRequestHandle = 0;\n    /** @private */\n    this._prevAnimationFrameTime = 0;\n\n    /** @private */\n    this._resizeTimeoutHandle = 0;\n    /** @private */\n    this._resizeCanvasWidth = 0;\n    /** @private */\n    this._resizeCanvasHeight = 0;\n\n    /** @private */\n    this._frameEvent = new CustomEvent('frame', {\n      composed: true,\n      bubbles: false,\n      detail: {\n        now: 0,\n        prevTime: 0,\n        deltaTime: 0,\n        canvas: this._canvasElement,\n      },\n    });\n    /** @private */\n    this._resizeEvent = new CustomEvent('resize', {\n      composed: true,\n      bubbles: false,\n      detail: {\n        width: 0,\n        height: 0,\n      },\n    });\n\n    /** @private */\n    this.update = this.update.bind(this);\n\n    /** @private */\n    this.onDelayCanvasResize = this.onDelayCanvasResize.bind(this);\n\n    /** @private */\n    this.onSlotChange = this.onSlotChange.bind(this);\n  }\n\n  /** Get the canvas element. */\n  get canvas() {\n    return this._canvasElement;\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  connectedCallback() {\n    upgradeProperty(this, 'mode');\n    upgradeProperty(this, 'debug');\n    upgradeProperty(this, 'disabled');\n    upgradeProperty(this, 'width');\n    upgradeProperty(this, 'height');\n    upgradeProperty(this, 'onframe');\n\n    if (!this.hasAttribute('mode')) {\n      this.setAttribute('mode', DEFAULT_MODE);\n    }\n\n    // Allows this element to be focusable\n    if (!this.hasAttribute('tabindex')) {\n      this.setAttribute('tabindex', '0');\n    }\n\n    this._innerElement.addEventListener('slotchange', this.onSlotChange);\n    this._canvasElement = this._innerElement.querySelector('canvas');\n    if (this._canvasElement) {\n      this.updateCanvasSize(true);\n      this.resume();\n    }\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  disconnectedCallback() {\n    this._innerElement.removeEventListener('slotchange', this.onSlotChange);\n    this.pause();\n  }\n\n  /**\n   * @protected\n   * Override for web component.\n   */\n  attributeChangedCallback(attribute, prev, value) {\n    switch (attribute) {\n      case 'debug':\n        {\n          this._debug = value !== null;\n        }\n        break;\n      case 'disabled':\n        {\n          this._disabled = value !== null;\n        }\n        break;\n      case 'width':\n        {\n          this._width = Number(value);\n        }\n        break;\n      case 'height':\n        {\n          this._height = Number(value);\n        }\n        break;\n      case 'onframe':\n        {\n          this.onframe = new Function(\n            'event',\n            'with(document){with(this){' + value + '}}'\n          ).bind(this);\n        }\n        break;\n    }\n\n    switch (attribute) {\n      case 'disabled':\n        if (value) {\n          this.update(0);\n          this.pause();\n        } else {\n          this.resume();\n        }\n        break;\n      // NOTE: For debugging purposes...\n      case 'id':\n      case 'class':\n        this._titleElement.innerHTML = `display-port${\n          this.className ? '.' + this.className : ''\n        }${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n        break;\n      case 'debug':\n        this._titleElement.classList.toggle('hidden', value);\n        this._fpsElement.classList.toggle('hidden', value);\n        this._dimensionElement.classList.toggle('hidden', value);\n        break;\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e \n   */\n  onSlotChange(e) {\n    const slot = /** @type {HTMLSlotElement} */ (e.target);\n    let children = slot.assignedElements({ flatten: true });\n    let canvas = /** @type {HTMLCanvasElement} */ (children.find(el => el instanceof HTMLCanvasElement));\n    if (!canvas) {\n      throw new Error('No valid canvas element found for display.');\n    }\n    this._canvasElement = canvas;\n    this.updateCanvasSize(true);\n    this.resume();\n  }\n\n  /**\n   * @param {'2d'|'webgl'|'webgl2'} [contextId]\n   * @param {CanvasRenderingContext2DSettings} [options]\n   */\n  getContext(contextId = '2d', options = undefined) {\n    return this._canvasElement.getContext(contextId, options);\n  }\n\n  /** Pause animation of the display frames. */\n  pause() {\n    window.cancelAnimationFrame(this._animationRequestHandle);\n  }\n\n  /** Resume animation of the display frames. */\n  resume() {\n    this._animationRequestHandle = window.requestAnimationFrame(this.update);\n  }\n\n  /** @private */\n  update(now) {\n    this._animationRequestHandle = window.requestAnimationFrame(this.update);\n    this.updateCanvasSize(false);\n    const deltaTime = now - this._prevAnimationFrameTime;\n    this._prevAnimationFrameTime = now;\n\n    // NOTE: For debugging purposes...\n    if (this._debug) {\n      // Update FPS...\n      const frames =\n        deltaTime <= 0\n          ? '--'\n          : String(Math.round(1000 / deltaTime)).padStart(2, '0');\n      if (this._fpsElement.textContent !== frames) {\n        this._fpsElement.textContent = frames;\n      }\n\n      // Update dimensions...\n      const mode = this.mode;\n      if (mode === MODE_NOSCALE) {\n        let result = `${this._width}x${this._height}`;\n        if (this._dimensionElement.textContent !== result) {\n          this._dimensionElement.textContent = result;\n        }\n      } else {\n        let result = `${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;\n        if (this._dimensionElement.textContent !== result) {\n          this._dimensionElement.textContent = result;\n        }\n      }\n    }\n\n    let event = this._frameEvent;\n    let detail = event.detail;\n    detail.now = now;\n    detail.prevTime = this._prevAnimationFrameTime;\n    detail.deltaTime = deltaTime;\n    this.dispatchEvent(this._frameEvent);\n  }\n\n  /** @private */\n  onDelayCanvasResize() {\n    this._resizeTimeoutHandle = null;\n    this.updateCanvasSize(true);\n  }\n\n  delayCanvasResize(canvasWidth, canvasHeight) {\n    if (\n      canvasWidth !== this._resizeCanvasWidth ||\n      canvasHeight !== this._resizeCanvasHeight\n    ) {\n      // Only call onDelayCanvasResize, if new canvas size actually changed since last time.\n      this._resizeCanvasWidth = canvasWidth;\n      this._resizeCanvasHeight = canvasHeight;\n      if (this._resizeTimeoutHandle) {\n        window.clearTimeout(this._resizeTimeoutHandle);\n      }\n      this._resizeTimeoutHandle = window.setTimeout(\n        this.onDelayCanvasResize,\n        DELAYED_RESIZE_MILLIS\n      );\n    }\n  }\n\n  /** @private */\n  updateCanvasSize(force = true) {\n    const clientRect = this.shadowRoot.host.getBoundingClientRect();\n    const clientWidth = clientRect.width;\n    const clientHeight = clientRect.height;\n\n    let canvas = this._canvasElement;\n    let canvasWidth = this._width;\n    let canvasHeight = this._height;\n\n    const mode = this.mode;\n    if (mode === MODE_STRETCH || mode === MODE_FILL) {\n      canvasWidth = clientWidth;\n      canvasHeight = clientHeight;\n    } else if (mode !== MODE_NOSCALE) {\n      if (\n        clientWidth < canvasWidth ||\n        clientHeight < canvasHeight ||\n        mode === MODE_FIT ||\n        mode == MODE_SCALE\n      ) {\n        let ratioX = clientWidth / canvasWidth;\n        let ratioY = clientHeight / canvasHeight;\n\n        if (ratioX < ratioY) {\n          canvasWidth = clientWidth;\n          canvasHeight = canvasHeight * ratioX;\n        } else {\n          canvasWidth = canvasWidth * ratioY;\n          canvasHeight = clientHeight;\n        }\n      }\n    }\n\n    canvasWidth = Math.floor(canvasWidth);\n    canvasHeight = Math.floor(canvasHeight);\n\n    if (typeof force === 'undefined') {\n      force =\n        canvas.clientWidth !== canvasWidth ||\n        canvas.clientHeight !== canvasHeight;\n    }\n\n    if (!force) {\n      this.delayCanvasResize(canvasWidth, canvasHeight);\n      return;\n    }\n\n    let fontSize =\n      Math.min(canvasWidth / this._width, canvasHeight / this._height) * 0.5;\n    // NOTE: Update the inner container for the default slotted children.\n    // To anchor children outside the canvas, use the slot named 'frame'.\n    this._innerElement.style.fontSize = `font-size: ${fontSize}em`;\n    if (force) {\n      if (mode === MODE_SCALE) {\n        canvas.width = this._width;\n        canvas.height = this._height;\n      } else if (mode !== MODE_STRETCH) {\n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n      }\n      let contentStyle = this._contentElement.style;\n      contentStyle.width = `${canvasWidth}px`;\n      contentStyle.height = `${canvasHeight}px`;\n\n      if (mode === MODE_FIT || mode === MODE_FILL) {\n        this._width = canvasWidth;\n        this._height = canvasHeight;\n      }\n\n      let event = this._resizeEvent;\n      let detail = event.detail;\n      detail.width = canvasWidth;\n      detail.height = canvasHeight;\n      this.dispatchEvent(this._resizeEvent);\n    }\n  }\n}\n\nfunction upgradeProperty(element, propertyName) {\n  if (Object.prototype.hasOwnProperty.call(element, propertyName)) {\n    let value = element[propertyName];\n    delete element[propertyName];\n    element[propertyName] = value;\n  }\n}\n","const INNER_HTML = /* html */`<div class=\"container\">\n  <div class=\"padding\"></div>\n  <div class=\"innerContainer\">\n    <div class=\"padding\"></div>\n    <slot><canvas>Oh no! Your browser does not support canvas.</canvas></slot>\n    <div class=\"padding\"></div>\n  </div>\n  <div class=\"padding\"></div>\n</div>`;\n\nconst INNER_STYLE = /* css */`\n:host {\n  display: inline-block;\n  flex: 1;\n  --width: 300px;\n  --height: 150px;\n}\n:host([scaling=\"noscale\"]) {\n  width: var(--width);\n  height: var(--height);\n}\n:host([sizing=\"viewport\"]) {\n    position: fixed;\n    top: 0;\n    left: 0;\n}\n.container {\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.innerContainer {\n  display: flex;\n  flex-direction: column;\n}\n.padding {\n  flex: 1;\n}`;\n\n/**\n * No scaling is applied. The canvas size maintains a\n * 1:1 pixel ratio to the defined display dimensions.\n */\nconst SCALING_NOSCALE = 'noscale';\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio. This will adjust\n * canvas resolution to fit the viewport dimensions.\n * In other words, the canvas pixel size remains\n * constant, but the number of pixels in the canvas\n * will increase or decrease to compensate. This is\n * the default scaling mode.\n */\nconst SCALING_FIT = 'fit';\n/**\n * Scales the canvas to fill the entire viewport and\n * maintains the same aspect ratio and pixel\n * resolution. This will upscale and downscale the\n * pixel size depending on the viewport dimentions\n * in order to preserve the canvas pixel count. In\n * other words, the number of pixels in the canvas\n * remain constant but appear larger or smaller to\n * compensate.\n */\nconst SCALING_SCALE = 'scale';\n/**\n * Resizes the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio nor pixel\n * count (adds and removes pixels to fill size). If you\n * care about aspect ratio but not pixel count, consider\n * using 'fit' mode instead.\n */\nconst SCALING_FILL = 'fill';\n/**\n * Scales the canvas to fill the entire viewport.\n * This does not maintain the aspect ratio but\n * does preserve pixel count (by stretching the pixel\n * size). If you care about aspect ratio and pixel\n * count, consider using 'scale' mode instead.\n */\nconst SCALING_STRETCH = 'stretch';\n\n/**\n * Sizes the canvas width and height.\n */\nconst SIZING_NONE = 'none';\n/**\n * Sizes to 100% of parent container.\n */\nconst SIZING_CONTAINER = 'conatiner';\n/**\n * Sizes to 100% of viewport.\n */\nconst SIZING_VIEWPORT = 'viewport';\n\n/**\n * The default display x dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_WIDTH = 300;\n/**\n * The default display y dimensions. This is\n * the same as the canvas element default.\n */\nconst DEFAULT_HEIGHT = 150;\n\n/**\n * @typedef {SIZING_NONE|SIZING_CONTAINER|SIZING_VIEWPORT|string} SizingMode\n */\n\n/**\n * @typedef {SCALING_NOSCALE|SCALING_SCALE|SCALING_FILL|SCALING_FIT|SCALING_STRETCH} ScalingMode\n */\n\n/**\n * A canvas wrapper to scale and stretch with respect to the aspect ratio to fill the viewport or container.\n */\nexport class FlexCanvas extends HTMLElement {\n\n    /**\n     * @param {object} [opts]\n     * @param {HTMLElement} [opts.root]\n     * @param {string} [opts.id]\n     * @param {ScalingMode} [opts.scaling]\n     * @param {SizingMode} [opts.sizing]\n     * @param {number} [opts.width]\n     * @param {number} [opts.height]\n     */\n    static create(opts = {}) {\n        const {\n            root = document.body,\n            id = undefined,\n            scaling = SCALING_SCALE,\n            sizing = SIZING_CONTAINER,\n            width = DEFAULT_WIDTH,\n            height = DEFAULT_HEIGHT,\n        } = opts || {};\n        if (!window.customElements.get('flex-canvas')) {\n            window.customElements.define('flex-canvas', FlexCanvas);\n        }\n        let result = new FlexCanvas();\n        result.id = id;\n        result.scaling = scaling;\n        result.sizing = sizing;\n        result.width = width;\n        result.height = height;\n        root.appendChild(result);\n        return result;\n    }\n\n    static define(customElements = window.customElements) {\n        customElements.define('flex-canvas', this);\n    }\n\n    /** @private */\n    static get [Symbol.for('templateNode')]() {\n        let t = document.createElement('template');\n        t.innerHTML = INNER_HTML;\n        Object.defineProperty(this, Symbol.for('templateNode'), { value: t });\n        return t;\n    }\n\n    /** @private */\n    static get [Symbol.for('styleNode')]() {\n        let t = document.createElement('style');\n        t.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, Symbol.for('styleNode'), { value: t });\n        return t;\n    }\n\n    /**\n     * @protected\n     * Override for web component.\n     */\n    static get observedAttributes() {\n        return [\n            'sizing',\n            'width',\n            'height',\n            'resize-delay',\n        ];\n    }\n\n    /**\n     * The scaling mode.\n     * - `noscale`: Do not perform scaling.\n     * - `fit`: Resize resolution to fill the entire viewport and maintains the aspect\n     * ratio. The pixel resolution is changed. This is the default behavior.\n     * - `fill`: Resize resolution to fill the entire viewport but does not maintain\n     * aspect ratio.\n     * - `stretch`: Perform scaling to fill the entire viewport but does not maintain\n     * aspect ratio.\n     * - `scale`: Perform scaling to fill the entire viewport and maintains the\n     * aspect ratio and resolution. The pixel resolution remains constant.\n     */\n    get scaling() {\n        return /** @type {ScalingMode} */ (this.getAttribute('scaling'));\n    }\n\n    set scaling(value) {\n        this.setAttribute('scaling', value);\n    }\n\n    /**\n     * The sizing mode.\n     * - `none`: Sizes to canvas.\n     * - `container`: Sizes to 100% of parent container.\n     * - `viewport`: Sizes to 100% of viewport.\n     */\n    get sizing() {\n        return /** @type {SizingMode} */ (this._sizing);\n    }\n\n    set sizing(value) {\n        this.setAttribute('sizing', String(value));\n    }\n\n    /**\n     * @returns {number}\n     */\n    get resizeDelay() {\n        return this._resizeDelay;\n    }\n\n    set resizeDelay(value) {\n        this.setAttribute('resize-delay', String(value));\n    }\n\n    /**\n     * The canvas width in pixels. This determines the aspect ratio and canvas buffer size.\n     * @returns {number}\n     */\n    get width() {\n        return this._width;\n    }\n\n    set width(value) {\n        this.setAttribute('width', String(value));\n    }\n\n    /**\n     * The canvas height in pixels. This determines the aspect ratio and canvas buffer size.\n     */\n    get height() {\n        return this._height;\n    }\n\n    set height(value) {\n        this.setAttribute('height', String(value));\n    }\n\n    get canvas() {\n        return this.canvasElement;\n    }\n\n    constructor() {\n        super();\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        shadowRoot.appendChild(this.constructor[Symbol.for('templateNode')].content.cloneNode(true));\n        shadowRoot.appendChild(this.constructor[Symbol.for('styleNode')].cloneNode(true));\n\n        /** @private */\n        this._sizing = 'none';\n        /** @private */\n        this._width = DEFAULT_WIDTH;\n        /** @private */\n        this._height = DEFAULT_HEIGHT;\n        /** @private */\n        this._resizeDelay = 0;\n\n        /** @private */\n        this.animationFrameHandle = 0;\n\n        /** @private */\n        this.resizeTimeoutHandle = 0;\n        /** @private */\n        this.resizeCanvasWidth = 0;\n        /** @private */\n        this.resizeCanvasHeight = 0;\n\n        /** @private */\n        this.canvasSlotElement = shadowRoot.querySelector('slot');\n        /** @private */\n        this.canvasElement = null;\n\n        /** @private */\n        this.onResize = this.onResize.bind(this);\n        /** @private */\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        /** @private */\n        this.onSlotChange = this.onSlotChange.bind(this);\n    }\n\n    /**\n     * @protected\n     * Override for web component.\n     */\n    connectedCallback() {\n        upgradeProperty(this, 'scaling');\n        upgradeProperty(this, 'sizing');\n        upgradeProperty(this, 'width');\n        upgradeProperty(this, 'height');\n        upgradeProperty(this, 'resize-delay');\n\n        // Scaling mode\n        if (!this.hasAttribute('scaling')) {\n            this.setAttribute('scaling', SCALING_SCALE);\n        }\n\n        // Allows this element to be focusable\n        if (!this.hasAttribute('tabindex')) {\n            this.setAttribute('tabindex', '0');\n        }\n\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n        this.canvasSlotElement.addEventListener('slotchange', this.onSlotChange);\n        if (!this.canvasElement) {\n            this.setCanvasElement(this.canvasSlotElement.querySelector('canvas'));\n        }\n    }\n\n    /**\n     * @protected\n     * Override for web component.\n     */\n    disconnectedCallback() {\n        cancelAnimationFrame(this.animationFrameHandle);\n        this.animationFrameHandle = null;\n        this.canvasSlotElement.removeEventListener('slotchange', this.onSlotChange);\n    }\n\n    /**\n     * @protected\n     * Override for web component.\n     */\n    attributeChangedCallback(attribute, prev, value) {\n        switch (attribute) {\n            case 'sizing':\n                {\n                    this._sizing = String(value);\n                    switch (this._sizing) {\n                        case 'none':\n                            this.style.removeProperty('width');\n                            this.style.removeProperty('height');\n                            break;\n                        case 'container':\n                            this.style.setProperty('width', '100%');\n                            this.style.setProperty('height', '100%');\n                            break;\n                        case 'viewport':\n                            this.style.setProperty('width', '100vw');\n                            this.style.setProperty('height', '100vh');\n                            break;\n                        default:\n                            let [x, y] = this._sizing.split(' ');\n                            if (x && y) {\n                                this.style.setProperty('width', x);\n                                this.style.setProperty('height', y);\n                            }\n                            break;\n                    }\n                }\n                break;\n            case 'width':\n                this._width = Number(value);\n                if (this.canvasElement) {\n                    this.canvasElement.width = this._width;\n                }\n                break;\n            case 'height':\n                this._height = Number(value);\n                if (this.canvasElement) {\n                    this.canvasElement.height = this._height;\n                }\n                break;\n            case 'resize-delay':\n                this._resizeDelay = Number(value);\n                break;\n        }\n    }\n\n    /**\n     * @private\n     * @param {number} now \n     */\n    onAnimationFrame(now) {\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n\n        if (this.clientWidth === this.resizeCanvasWidth && this.clientHeight === this.resizeCanvasHeight) {\n            // Only call onDebounceResize() if new canvas size actually changed since last time.\n            return;\n        }\n\n        this.resizeCanvasWidth = this.clientWidth;\n        this.resizeCanvasHeight = this.clientHeight;\n\n        if (this._resizeDelay > 0) {\n            if (!this.resizeTimeoutHandle) {\n                this.resizeTimeoutHandle = window.setTimeout(this.onResize, this._resizeDelay);\n            }\n        } else {\n            this.onResize();\n        }\n    }\n\n    /** @private */\n    onResize() {\n        window.clearTimeout(this.resizeTimeoutHandle);\n        this.resizeTimeoutHandle = null;\n\n        const canvas = this.canvasElement;\n        if (!canvas) {\n            return;\n        }\n\n        const scaling = this.scaling;\n        const clientRect = this.getBoundingClientRect();\n        const clientWidth = clientRect.width;\n        const clientHeight = clientRect.height;\n\n        let canvasWidth = this._width;\n        let canvasHeight = this._height;\n        let ratioX = clientWidth / canvasWidth;\n        let ratioY = clientHeight / canvasHeight;\n\n        // noscale\n        if (scaling === 'noscale') {\n            this.style.setProperty('--width', `${canvasWidth}px`);\n            this.style.setProperty('--height', `${canvasHeight}px`);\n        }\n\n        // scale\n        if (scaling === 'scale') {\n            if (ratioX < ratioY) {\n                canvas.style.setProperty('width', `${Math.floor(clientWidth)}px`);\n                canvas.style.setProperty('height', `${Math.floor(canvasHeight * ratioX)}px`);\n            } else {\n                canvas.style.setProperty('width', `${Math.floor(canvasWidth * ratioY)}px`);\n                canvas.style.setProperty('height', `${Math.floor(clientHeight)}px`);\n            }\n        }\n\n        // stretch\n        if (scaling === 'stretch') {\n            canvas.style.setProperty('width', `${Math.floor(clientWidth)}px`);\n            canvas.style.setProperty('height', `${Math.floor(clientHeight)}px`);\n        }\n\n        // fit\n        if (scaling === 'fit') {\n            if (ratioX < ratioY) {\n                canvasWidth = Math.floor(clientWidth);\n                canvasHeight = Math.floor(canvasHeight * ratioX);\n                canvas.style.setProperty('width', `${canvasWidth}px`);\n                canvas.style.setProperty('height', `${canvasHeight}px`);\n            } else {\n                canvasWidth = Math.floor(canvasWidth * ratioY);\n                canvasHeight = Math.floor(clientHeight);\n                canvas.style.setProperty('width', `${canvasWidth}px`);\n                canvas.style.setProperty('height', `${canvasHeight}px`);\n            }\n            if (canvas.width !== canvasWidth) {\n                canvas.width = canvasWidth;\n            }\n            if (canvas.height !== canvasHeight) {\n                canvas.height = canvasHeight;\n            }\n        }\n\n        // fill\n        if (scaling === 'fill') {\n            if (ratioX < ratioY) {\n                canvasWidth = Math.floor(clientWidth);\n                canvasHeight = Math.floor(clientHeight);\n                canvas.style.setProperty('width', `${canvasWidth}px`);\n                canvas.style.setProperty('height', `${canvasHeight}px`);\n            } else {\n                canvasWidth = Math.floor(clientWidth);\n                canvasHeight = Math.floor(clientHeight);\n                canvas.style.setProperty('width', `${canvasWidth}px`);\n                canvas.style.setProperty('height', `${canvasHeight}px`);\n            }\n            if (canvas.width !== canvasWidth) {\n                canvas.width = canvasWidth;\n            }\n            if (canvas.height !== canvasHeight) {\n                canvas.height = canvasHeight;\n            }\n        }\n    }\n\n    /**\n     * @private\n     * @param {Event} e \n     */\n    onSlotChange(e) {\n        const slot = /** @type {HTMLSlotElement} */ (e.target);\n        let children = slot.assignedElements({ flatten: true });\n        let canvas = /** @type {HTMLCanvasElement} */ (children.find(el => el instanceof HTMLCanvasElement));\n        if (canvas) {\n            this.setCanvasElement(canvas);\n        }\n    }\n\n    /**\n     * @private\n     * @param {HTMLCanvasElement} canvas \n     */\n    setCanvasElement(canvas) {\n        canvas.width = this._width;\n        canvas.height = this._height;\n        canvas.style.imageRendering = 'pixelated';\n        this.canvasElement = canvas;\n    }\n\n    /**\n     * @param {'2d'|'webgl'|'webgl2'} [contextId]\n     * @param {CanvasRenderingContext2DSettings} [options]\n     */\n    getContext(contextId = '2d', options = undefined) {\n        return this.canvasElement.getContext(contextId, options);\n    }\n}\n\nfunction upgradeProperty(element, propertyName) {\n    if (Object.prototype.hasOwnProperty.call(element, propertyName)) {\n        let value = element[propertyName];\n        delete element[propertyName];\n        element[propertyName] = value;\n    }\n}\n"],"names":["INNER_HTML","INNER_STYLE","DEFAULT_WIDTH","DEFAULT_HEIGHT","upgradeProperty"],"mappings":"AAAA,MAAMA,YAAU,aAAa,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,CAAC;AACR;AACA,MAAMC,atC;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,YAAY,GAAG,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAa,GAAG,GAAG,CAAC;AAC1B;AACA;AACA;AACA;AACA,MAAMC,gBAAc,GAAG,GAAG,CAAC;AAC3B;AACA;AACA,MAAM,YAAY,GAAG,QAAQ,CAAC;AAC9B;AACA;AACA,MAAM,qBAAqB,GAAG,GAAG,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,SAAS,WAAW,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,MAAM,CAAC,IAAI,GAAG,EAAE,EAAE;AAC3B,IAAI,MAAM;AACV,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI;AAC1B,MAAM,EAAE,GAAG,SAAS;AACpB,MAAM,IAAI,GAAG,YAAY;AACzB,MAAM,KAAK,GAAGD,eAAa;AAC3B,MAAM,MAAM,GAAGC,gBAAc;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"}