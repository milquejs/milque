{"version":3,"file":"index.js","sources":["../../../../node_modules/picomatch/lib/constants.js","../../../../node_modules/picomatch/lib/utils.js","../../../../node_modules/picomatch/lib/scan.js","../../../../node_modules/picomatch/lib/parse.js","../../../../node_modules/picomatch/lib/picomatch.js","../../../../node_modules/picomatch/index.js","../../src/GlobExp.js","../../src/local/LocalAssetStore.js","../../src/local/LocalAsset.js","../../src/Asset.js"],"sourcesContent":["'use strict';\n\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\nconst SEP = '/';\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR,\n  SEP\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`,\n  SEP: '\\\\'\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    __proto__: null,\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","/*global navigator*/\n'use strict';\n\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.isWindows = () => {\n  if (typeof navigator !== 'undefined' && navigator.platform) {\n    const platform = navigator.platform.toLowerCase();\n    return platform === 'win32' || platform === 'windows';\n  }\n\n  if (typeof process !== 'undefined' && process.platform) {\n    return process.platform === 'win32';\n  }\n\n  return false;\n};\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n\nexports.basename = (path, { windows } = {}) => {\n  const segs = path.split(windows ? /[\\\\/]/ : '/');\n  const last = segs[segs.length - 1];\n\n  if (last === '') {\n    return segs[segs.length - 2];\n  }\n\n  return last;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(opts.windows);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.output = (prev.output || prev.value) + tok.value;\n      prev.value += tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(opts.windows);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = opts.windows;\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(utils.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nconst pico = require('./lib/picomatch');\nconst utils = require('./lib/utils');\n\nfunction picomatch(glob, options, returnState = false) {\n  // default to os.platform()\n  if (options && (options.windows === null || options.windows === undefined)) {\n    // don't mutate the original options object\n    options = { ...options, windows: utils.isWindows() };\n  }\n\n  return pico(glob, options, returnState);\n}\n\nObject.assign(picomatch, pico);\nmodule.exports = picomatch;\n","import { makeRe } from 'picomatch';\n\nexport class GlobExp {\n  /**\n   * @param {string|GlobExp} pattern\n   */\n  constructor(pattern) {\n    let source;\n    if (typeof pattern === 'object' && pattern instanceof GlobExp) {\n      source = String(pattern.source);\n    } else {\n      source = String(pattern);\n    }\n    /** @type {string} */\n    this.source = source;\n\n    /** @private */\n    this.re = makeRe(source);\n  }\n\n  /**\n   * @param {string} string\n   * @returns {boolean}\n   */\n  test(string) {\n    return this.re.test(string);\n  }\n}\n","import { GlobExp } from '../GlobExp';\n\nexport function createStore() {\n  return {\n    /** @type {Record<string, any>} */\n    cached: {},\n    /** @type {Record<string, Loading>} */\n    loadings: {},\n    /** @type {Array<Fallback>} */\n    defaults: [],\n  };\n}\n\n/**\n * Load asset using a loader with the given filePath.\n * \n * @private\n * @template T\n * @template {object} Options\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n * @param {string} filePath\n * @param {import('../AssetTypes').AssetLoader<T, Options>} loader\n * @param {Options} opts\n * @param {number} timeout\n * @returns {Promise<T>}\n */\nexport async function loadThenCache(assets, uri, filePath, loader, opts, timeout) {\n  const { loadings } = assets;\n\n  /** @type {Loading} */\n  let loading;\n  if (uri in loadings) {\n    loading = loadings[uri];\n  } else {\n    loading = new Loading(timeout);\n    loadings[uri] = loading;\n  }\n\n  const attempt = Loading.nextAttempt(loading);\n\n  /** @type {Array<Promise<T|undefined>>} */\n  let promises = [loading.promise];\n  // Just load it\n  promises.push(\n    loader(filePath, opts, assets).then((value) => {\n      if (Loading.isCurrentAttempt(loading, attempt)) {\n        cacheAndResolve(assets, uri, value);\n        return value;\n      } else {\n        return undefined;\n      }\n    }),\n  );\n  let result = await Promise.race(promises);\n  if (!result) {\n    // It must be loading in a different attempt.\n    throw new Error('Failed to load asset - already loaded!');\n  }\n  return result;\n}\n\n/**\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets \n * @param {Array<import('../AssetTypes').AssetLike<?, ?>>} targets \n * @param {number} timeout\n */\nexport async function loadAll(assets, targets, timeout) {\n  await Promise.all(targets.map(target => loadThenCache(\n    assets, target.uri, target.uri, target.loader, target.opts, timeout)));\n}\n\n/**\n * @internal\n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n * @param {T} value\n */\nexport function cacheAndResolve(assets, uri, value) {\n  const { cached, loadings } = assets;\n  cached[uri] = value;\n  // Send asset to awaiting loaders...\n  if (uri in loadings) {\n    loadings[uri].resolve(value);\n    delete loadings[uri];\n  }\n}\n\n/**\n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string|GlobExp} glob\n * @param {T} value\n */\nexport function fallbackFor(assets, glob, value) {\n  const { defaults } = assets;\n  if (typeof glob === 'string') {\n    glob = new GlobExp(glob);\n  }\n  const uri = `__default://[${defaults.length}]`;\n  cacheAndResolve(assets, uri, value);\n  defaults.push(new Fallback(glob, uri));\n}\n\n/**\n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n */\nexport function deleteAndReject(assets, uri) {\n  const { cached } = assets;\n  cancelAndReject(assets, uri, \"Cancel loading since deleting asset.\");\n  if (uri in cached) {\n    delete cached[uri];\n  }\n}\n\n/**\n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string|GlobExp} glob\n */\nexport function deleteAndRejectByGlob(assets, glob) {\n  if (typeof glob === 'string') {\n    glob = new GlobExp(glob);\n  }\n  const { cached, loadings } = assets;\n  // Clear loadings\n  for (let uri of Object.keys(loadings)) {\n    if (glob.test(uri)) {\n      cancelAndReject(assets, uri, `Cancel loading since deleting all assets for \"${glob}\".`);\n    }\n  }\n  // Clear cache\n  for (let uri of Object.keys(cached)) {\n    if (glob.test(uri)) {\n      delete cached[uri];\n    }\n  }\n}\n\n/**\n * Cancel loading the uri, if loading. Otherwise, do nothing and return false.\n * \n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n * @param {string} [rejectMessage]\n */\nexport function cancelAndReject(assets, uri, rejectMessage = 'Cancel loading asset.') {\n  const { loadings } = assets;\n  if (uri in loadings) {\n    const loading = loadings[uri];\n    loading.reject(new Error(rejectMessage));\n    delete loadings[uri];\n    return true;\n  }\n  return false;\n}\n\n/**\n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets \n * @param {string} uri \n * @param {number} timeout\n * @returns {Promise<object>}\n */\nexport async function promiseWhenLoaded(assets, uri, timeout) {\n  const { loadings } = assets;\n  if (uri in loadings) {\n    return loadings[uri].promise;\n  } else {\n    let loading = new Loading(timeout);\n    loadings[uri] = loading;\n    return loading.promise;\n  }\n}\n\n/**\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n */\nexport function resetStore(assets) {\n  const { cached, loadings, defaults } = assets;\n  // Clear loadings\n  for (let uri of Object.keys(loadings)) {\n    cancelAndReject(assets, uri, \"Cancel loading asset - clearing all.\");\n  }\n  // Clear cache\n  for (let uri of Object.keys(cached)) {\n    delete cached[uri];\n  }\n  // Clear defaults\n  defaults.length = 0;\n}\n\n/**\n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n * @returns {Promise<object>}\n */\nexport function currentLoading(assets, uri) {\n  const { loadings } = assets;\n  if (uri in loadings) {\n    return loadings[uri].promise;\n  } else {\n    throw new Error(`No loading promise in store for uri \"${uri}\".`);\n  }\n}\n\n/**\n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n * @returns {object|null}\n */\nexport function currentFallback(assets, uri) {\n  const { defaults } = assets;\n  for (let def of defaults) {\n    if (def.glob.test(uri) && hasCurrentValue(assets, def.uri)) {\n      return currentValue(assets, def.uri);\n    }\n  }\n  return null;\n}\n\n/**\n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n * @returns {object}\n */\nexport function currentValue(assets, uri) {\n  if (uri in assets.cached) {\n    return assets.cached[uri];\n  } else {\n    throw new Error(`No current asset cached for uri \"${uri}\".`);\n  }\n}\n\n/**\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @returns {Array<string>}\n */\nexport function keys(assets) {\n  return Object.keys(assets.cached);\n}\n\n/**\n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n * @returns {boolean}\n */\nexport function hasCurrentValue(assets, uri) {\n  return uri in assets.cached;\n}\n\n/**\n * @internal\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {string} uri\n * @returns {boolean}\n */\nexport function isCurrentLoading(assets, uri) {\n  return uri in assets.loadings;\n}\n\nexport class Fallback {\n  /**\n   * @param {GlobExp} glob\n   * @param {string} uri\n   */\n  constructor(glob, uri) {\n    this.glob = glob;\n    this.uri = uri;\n  }\n}\n\nexport class Loading {\n  /**\n   * @param {Loading} loading\n   */\n  static nextAttempt(loading) {\n    return ++loading.promiseHandle;\n  }\n\n  /**\n   * @param {Loading} loading\n   * @param {number} attempt\n   */\n  static isCurrentAttempt(loading, attempt) {\n    return loading.promiseHandle === attempt;\n  }\n\n  /**\n   * @param {number} timeout\n   */\n  constructor(timeout) {\n    /**\n     * @private\n     * @type {((value: any) => void)|null}\n     */\n    this._resolve = null;\n    /**\n     * @private\n     * @type {((reason?: any) => void)|null}\n     */\n    this._reject = null;\n    /** @private */\n    this._reason = null;\n    /** @private */\n    this._value = null;\n\n    /** @private */\n    this.promiseHandle = 0;\n    /** @private */\n    this.timeoutHandle =\n      Number.isFinite(timeout) && timeout > 0\n        ? setTimeout(() => {\n            this.reject(`Asset loading exceeded timeout of ${timeout} ms.`);\n          }, timeout)\n        : null;\n    /**\n     * @readonly\n     */\n    this.promise = new Promise((resolve, reject) => {\n      if (this._value) {\n        resolve(this._value);\n      } else {\n        this._resolve = resolve;\n      }\n      if (this._reason) {\n        reject(this._reason);\n      } else {\n        this._reject = reject;\n      }\n    });\n  }\n\n  /**\n   * @param {any} value\n   */\n  resolve(value) {\n    if (this.timeoutHandle) {\n      clearTimeout(this.timeoutHandle);\n      this.timeoutHandle = null;\n    }\n    if (this._resolve) {\n      this._resolve(value);\n    } else {\n      this._value = value;\n    }\n  }\n\n  /**\n   * @param {any} reason\n   */\n  reject(reason) {\n    if (this.timeoutHandle) {\n      clearTimeout(this.timeoutHandle);\n      this.timeoutHandle = null;\n    }\n    if (this._reject) {\n      this._reject(reason);\n    } else {\n      this._reason = reason;\n    }\n  }\n}\n","import {\n  cacheAndResolve,\n  currentValue,\n  currentFallback,\n  currentLoading,\n  hasCurrentValue,\n  isCurrentLoading,\n  loadThenCache,\n  cancelAndReject,\n  deleteAndReject,\n} from './LocalAssetStore';\n\n/**\n * @template T\n * @template {object} Options\n * @param {string} uri\n * @param {import('../AssetTypes').AssetLoader<T, Options>} loader\n * @param {Options} [opts]\n */\nexport function create(uri, loader, opts = /** @type {any} */ ({})) {\n  return /** @type {const} */ ({\n    uri,\n    loader,\n    opts,\n  });\n}\n\n/**\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<any, any>} target\n * @returns {boolean}\n */\nexport function isCached(assets, target) {\n  return hasCurrentValue(assets, target.uri);\n}\n\n/**\n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n * @returns {T|null}\n */\nexport function getOrNull(assets, target) {\n  if (hasCurrentValue(assets, target.uri)) {\n    return /** @type {T} */ (currentValue(assets, target.uri));\n  }\n  const def = currentFallback(assets, target.uri);\n  if (def) {\n    return /** @type {T} */ (def);\n  }\n  return null;\n}\n\n/**\n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n * @returns {T}\n */\nexport function getOrThrow(assets, target) {\n  let result = getOrNull(assets, target);\n  if (result !== null) {\n    return result;\n  }\n  throw new Error(\n    `Trying to get value from asset not yet loaded \"${target.uri}\".`\n  );\n}\n\n/**\n * Pre-load target into cache ONLY if not yet loaded or loading. Otherwise, will throw.\n * \n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n * @param {number} timeout\n * @returns {Promise<T>}\n */\nexport async function preload(assets, target, timeout) {\n  if (hasCurrentValue(assets, target.uri)) {\n    throw new Error(`Asset already cached for \"${target.uri}\" - probably trying to load duplicate asset name!`);\n  } else if (isCurrentLoading(assets, target.uri)) {\n    throw new Error(`Asset already loading for \"${target.uri}\" - if this is intentional, use load() instead!`);\n  }\n  return await loadThenCache(\n    assets,\n    target.uri,\n    target.uri,\n    target.loader,\n    target.opts,\n    timeout\n  );\n}\n\n/**\n * Load target into cache if not yet loaded. Otherwise, return already cached value or loading promise.\n * \n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n * @param {number} timeout\n * @returns {Promise<T>}\n */\nexport async function load(assets, target, timeout) {\n  if (hasCurrentValue(assets, target.uri)) {\n    return /** @type {T} */ (currentValue(assets, target.uri));\n  } else if (isCurrentLoading(assets, target.uri)) {\n    return /** @type {T} */ (\n      await currentLoading(assets, target.uri)\n    );\n  }\n  return await loadThenCache(\n    assets,\n    target.uri,\n    target.uri,\n    target.loader,\n    target.opts,\n    timeout\n  );\n}\n\n/**\n * Re-load target into cache. Will always replace cached value.\n * \n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n * @param {number} timeout\n * @returns {Promise<T>}\n */\nexport async function reload(assets, target, timeout) {\n  return await loadThenCache(\n    assets,\n    target.uri,\n    target.uri,\n    target.loader,\n    target.opts,\n    timeout\n  );\n}\n\n/**\n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n * @returns {Promise<boolean>}\n */\nexport async function cancel(assets, target) {\n  return cancelAndReject(assets, target.uri);\n}\n\n/**\n * Cache target with value. Will always replace cached value.\n * \n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n * @param {T} value\n */\nexport async function cachePut(assets, target, value) {\n  cacheAndResolve(assets, target.uri, value);\n}\n\n/**\n * Cache target with value ONLY if not yet loaded or loading. Otherwise, will throw.\n * \n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n * @param {T} value\n */\nexport async function cacheSafely(assets, target, value) {\n  if (hasCurrentValue(assets, target.uri)) {\n    throw new Error(`Asset already cached for \"${target.uri}\" - probably trying to cache duplicate asset name!`);\n  } else if (isCurrentLoading(assets, target.uri)) {\n    throw new Error(`Asset already loading for \"${target.uri}\" - if this is intentional, use cachePut() instead!`);\n  }\n  cacheAndResolve(assets, target.uri, value);\n}\n\n/**\n * @template T\n * @param {import('./AssetStoreTypes').AssetStoreLike} assets\n * @param {import('../AssetTypes').AssetLike<T, any>} target\n */\nexport async function dispose(assets, target) {\n  deleteAndReject(assets, target.uri);\n}\n","import { LocalAsset, LocalAssetStore } from './local';\n\n/**\n * @template T\n * @template {object} Options\n * \n * A global reference to the resource by name and loader type.\n */\nexport class Asset {\n\n  /** The default timeout for loading assets. */\n  static DEFAULT_TIMEOUT = 5_000;\n  /** The global asset store. */\n  static globalCache = LocalAssetStore.createStore();\n\n  /**\n   * Create an asset to load target resource from uri. Assets with\n   * the same uri will share the same resource instance.\n   * \n   * @template T\n   * @template {object} Options\n   * @param {string} uri \n   * @param {import('./AssetTypes').AssetLoader<T, Options>} loader \n   * @param {Options} opts \n   */\n  static for(uri, loader, opts) {\n    return new Asset(uri, loader, opts);\n  }\n\n  /**\n   * @private\n   * @param {string} uri \n   * @param {import('./AssetTypes').AssetLoader<T, Options>} loader \n   * @param {Options} opts \n   */\n  constructor(uri, loader, opts) {\n    /** @readonly */\n    this.uri = uri;\n    /** @readonly */\n    this.loader = loader;\n    /** @readonly */\n    this.opts = opts;\n  }\n\n  /** Whether this asset has a loaded value in the global cache. */\n  isCached() {\n    return LocalAsset.isCached(Asset.globalCache, this);\n  }\n\n  /** Get the cached or default asset value. Returns null if not present. */\n  getOrNull() {\n    return LocalAsset.getOrNull(Asset.globalCache, this);\n  }\n\n  /** Get the cached or default asset value. Throws if not present. */\n  getOrThrow() {\n    return LocalAsset.getOrThrow(Asset.globalCache, this);\n  }\n\n  /** Try load and cache the result for this asset, only if not yet loaded. */\n  async load(timeout = Asset.DEFAULT_TIMEOUT) {\n    return await LocalAsset.load(Asset.globalCache, this, timeout);\n  }\n\n  /** Force load and cache the result for this asset, even if already exists. */\n  async reload(timeout = Asset.DEFAULT_TIMEOUT) {\n    return await LocalAsset.reload(Asset.globalCache, this, timeout);\n  }\n\n  /** Perform load and cache the result for this asset, throws if already exists. */\n  async preload(timeout = Asset.DEFAULT_TIMEOUT) {\n    return await LocalAsset.preload(Asset.globalCache, this, timeout);\n  }\n\n  /** Cancel any ongoing loading attempts for this asset. */\n  async cancel() {\n    return LocalAsset.cancel(Asset.globalCache, this);\n  }\n\n  /**\n   * Put and override value in cache even if loaded already.\n   * \n   * @param {T} value \n   */\n  async cachePut(value) {\n    LocalAsset.cachePut(Asset.globalCache, this, value);\n  }\n\n  /**\n   * Put value in cache only if never loaded.\n   * \n   * @param {T} value \n   */\n  async cacheSafely(value) {\n    LocalAsset.cacheSafely(Asset.globalCache, this, value);\n  }\n\n  /**\n   * Delete the value in cache for this asset, if already loaded.\n   */\n  async dispose() {\n    LocalAsset.dispose(Asset.globalCache, this);\n  }\n}\n"],"names":["require$$0","require$$1","require$$2","require$$3","picomatch_1","makeRe","LocalAssetStore.createStore","LocalAsset.isCached","LocalAsset.getOrNull","LocalAsset.getOrThrow","LocalAsset.load","LocalAsset.reload","LocalAsset.preload","LocalAsset.cancel","LocalAsset.cachePut","LocalAsset.cacheSafely","LocalAsset.dispose"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}