{"version":3,"file":"index.js","sources":["../../src/component/ComponentFactory.js","../../src/local/ComponentInstanceMap.js","../../src/local/LocalEntityPool.js","../../src/local/EntityId.js","../../src/match/MatchFactory.js","../../src/match/MatchQuery.js","../../src/archetype/Archetype.js"],"sourcesContent":["/**\n * @template T\n * @param {string} name\n * @param {() => T} newCallback \n * @param {(instance: T) => void} deleteCallback\n * @returns {import('./ComponentTypes').ComponentFactory<T>}\n */\nexport function create(name, newCallback, deleteCallback) {\n  return {\n    name,\n    new: newCallback,\n    delete: deleteCallback,\n  };\n}\n\n/**\n * @template T\n * @param {import('./ComponentTypes').ComponentClass<T>} componentClass \n */\nexport function newComponentInstance(componentClass) {\n  if ('new' in componentClass) {\n    return componentClass.new();\n  } else {\n    return new componentClass();\n  }\n}\n\n/**\n * @template T\n * @param {import('./ComponentTypes').ComponentClass<T>} componentClass \n * @param {T} instance \n */\nexport function deleteComponentInstance(componentClass, instance) {\n  if ('delete' in componentClass && typeof componentClass.delete === 'function') {\n    componentClass.delete(instance);\n  }\n}\n\n/**\n * @param {import('./ComponentTypes').ComponentClass<any>} componentClass \n * @param {import('./ComponentTypes').ComponentClass<any>} otherClass\n */\nexport function isSameComponentClass(componentClass, otherClass) {\n  return componentClass\n    && otherClass\n    && 'name' in componentClass\n    && 'name' in otherClass\n    && componentClass.name === otherClass.name;\n}\n","import { deleteComponentInstance, newComponentInstance } from '../component/ComponentFactory';\n\n/** @type {import('./EntityId').EntityId} */\nexport const MIN_ENTITY_ID = 1;\n/** @type {import('./EntityId').EntityId} */\nexport const MAX_ENTITY_ID = 4_294_967_295;\n\n/**\n * A sparse map of entityId-to-component instances (for a component class).\n *\n * @see https://skypjack.github.io/2019-03-07-ecs-baf-part-2/\n * @template T\n */\nexport class ComponentInstanceMap {\n  /**\n   * @param {import('../component').ComponentClass<T>} componentClass\n   * @param {number} [initialCapacity]\n   * @param {number} [maxCapacity]\n   */\n  constructor(componentClass, initialCapacity = 16, maxCapacity = 10_000) {\n    /**\n     * @readonly\n     * @type {import('../component').ComponentClass<T>}\n     */\n    this.componentClass = componentClass;\n\n    if (maxCapacity <= 0) {\n      throw new Error(\n        `Max capacity must be positive, but was \"${maxCapacity}\".`\n      );\n    }\n    if (initialCapacity > maxCapacity) {\n      throw new Error(`Cannot initialize capacity over max \"${maxCapacity}\".`);\n    }\n\n    const SparseTypedArray = typeOfUnsignedTypedArrayByMaxValue(maxCapacity);\n    const sparseBuffer = new ArrayBuffer(initialCapacity, {\n      maxByteLength: SparseTypedArray.BYTES_PER_ELEMENT * MAX_ENTITY_ID,\n    });\n    /**\n     * The sparse array of entityId-to-index\n     *\n     * @private\n     */\n    this.sparse = new SparseTypedArray(sparseBuffer);\n\n    const EntityIdTypedArray =\n      typeOfUnsignedTypedArrayByMaxValue(MAX_ENTITY_ID);\n    const entityIdBuffer = new ArrayBuffer(initialCapacity, {\n      maxByteLength: EntityIdTypedArray.BYTES_PER_ELEMENT * maxCapacity,\n    });\n    /**\n     * The dense array of index-to-entityId\n     * @private\n     */\n    this.entityIds = new EntityIdTypedArray(entityIdBuffer);\n    /** @private */\n    this.entityIdArrayType = EntityIdTypedArray;\n\n    /**\n     * The dense array of instance objects by index\n     *\n     * @private\n     * @type {Array<T>}\n     */\n    this.instances = new Array();\n\n    this.size = 0;\n\n    /** @readonly */\n    this.maxCapacity = maxCapacity;\n  }\n\n  get capacity() {\n    return Math.trunc(\n      this.entityIds.buffer.byteLength /\n        this.entityIdArrayType.BYTES_PER_ELEMENT\n    );\n  }\n\n  /**\n   * @param {number} newIndex\n   * @param {import('./EntityId').EntityId} newEntityId\n   */\n  ensureCapacity(newIndex, newEntityId) {\n    if (newEntityId >= this.sparse.length) {\n      const nearestByteLength = Math.pow(2, Math.ceil(Math.log2(newEntityId + 1)));\n      const currentByteLength = this.sparse.byteLength;\n      const byteLength = Math.min(\n        this.sparse.buffer.maxByteLength,\n        Math.max(this.sparse.BYTES_PER_ELEMENT, Math.max(currentByteLength * 2, nearestByteLength))\n      );\n      this.sparse.buffer.resize(byteLength);\n    }\n    const newSize = Math.max(this.size, newIndex + 1);\n    if (newSize > this.maxCapacity) {\n      throw new Error(\n        `Exceeded max capacity - cannot insert more objects than \"${this.maxCapacity}\".`\n      );\n    }\n    if (newSize > this.instances.length) {\n      this.size = newSize;\n      this.instances.length = newSize;\n    }\n    if (newSize >= this.entityIds.length) {\n      const nearestByteLength = Math.pow(2, Math.ceil(Math.log2(newSize)));\n      const currentByteLength = this.entityIds.byteLength;\n      const byteLength = Math.min(\n        this.entityIds.buffer.maxByteLength,\n        Math.max(this.entityIds.BYTES_PER_ELEMENT, Math.max(currentByteLength * 2, nearestByteLength))\n      );\n      this.entityIds.buffer.resize(byteLength);\n    }\n  }\n\n  /**\n   * @param {number} entityId\n   * @param {T} [instance]\n   */\n  insert(entityId, instance = undefined) {\n    if (typeof instance === 'undefined') {\n      instance = newComponentInstance(this.componentClass);\n    }\n    const prev = this.sparse[entityId];\n    if (prev >= 0 && this.entityIds[prev] === entityId) {\n      // This entity is already in this set, so just replace the instance.\n      this.instances[prev] = instance;\n      return instance;\n    }\n    // ...increase by 1 size...\n    const index = this.size;\n    this.ensureCapacity(index, entityId);\n    // ...and insert it at the end...\n    this.sparse[entityId] = index;\n    this.instances[index] = instance;\n    this.entityIds[index] = entityId;\n    return instance;\n  }\n\n  /**\n   * @param {number} entityId\n   */\n  delete(entityId) {\n    if (this.size <= 0) {\n      // Cannot delete from empty.\n      return false;\n    }\n    const prev = this.sparse[entityId];\n    if (!(prev >= 0 && this.entityIds[prev] === entityId)) {\n      // This entity is NOT in this set. Skip it.\n      return false;\n    }\n    let prevInstance = this.instances[prev];\n    this.sparse[entityId] = 0;\n    deleteComponentInstance(this.componentClass, prevInstance);\n    if (this.size > 1) {\n      const end = this.size - 1;\n      const endInstance = this.instances[end];\n      const endEntityId = this.entityIds[end];\n      // ...move last object to replace deleted entity...\n      this.sparse[endEntityId] = prev;\n      this.instances[prev] = endInstance;\n      this.entityIds[prev] = endEntityId;\n    }\n    // ...reduce by 1 size.\n    this.size -= 1;\n    this.instances.length = this.size;\n    return true;\n  }\n\n  clear() {\n    let result = Array.from(this.entityIds);\n    for(let entityId of result) {\n      this.delete(entityId);\n    }\n  }\n\n  /**\n   * Assumes the entity id exists in this map, otherwise you must check has() before this call.\n   * \n   * @param {number} entityId\n   */\n  lookup(entityId) {\n    return this.instances[this.sparse[entityId]];\n  }\n\n  /**\n   * @param {T} instance \n   * @returns {import('./EntityId').EntityId}\n   */\n  keyOf(instance) {\n    return this.entityIds[this.instances.indexOf(instance)];\n  }\n\n  /**\n   * @param {number} entityId\n   */\n  has(entityId) {\n    return this.entityIds[this.sparse[entityId]] === entityId;\n  }\n\n  /** @returns {Iterable<import('./EntityId').EntityId> & ArrayLike<import('./EntityId').EntityId>} Iterable of entity ids */\n  keys() {\n    return this.createEntityIdBufferView();\n  }\n\n  /** @returns {Iterable<T> & ArrayLike<T>} Iterable of component instances */\n  values() {\n    return this.instances;\n  }\n\n  /** @private */\n  createEntityIdBufferView() {\n    const TypedArray = this.entityIdArrayType;\n    return new TypedArray(this.entityIds.buffer, 0, this.size);\n  }\n}\n\n/**\n * @param {number} maxValue\n */\nfunction typeOfUnsignedTypedArrayByMaxValue(maxValue) {\n  if (maxValue <= 256) {\n    return Uint8Array;\n  } else if (maxValue <= 65_536) {\n    return Uint16Array;\n  } else if (maxValue <= 4_294_967_296) {\n    return Uint32Array;\n  } else {\n    throw new Error(\n      `Max value is too big - no typed uint array big enough for value \"${maxValue}\".`\n    );\n  }\n}\n","import { ComponentInstanceMap } from './ComponentInstanceMap';\n\n/** @returns {import('./EntityTypes').EntityPoolLike} */\nexport function createPool() {\n  return {\n    components: {},\n    nextAvailableEntityId: 1,\n    unclaimedEntityIds: [],\n    deadEntityIds: [],\n  };\n}\n\n/**\n * @param {import('./EntityTypes').EntityPoolLike} entityPool\n */\nexport function resetPool(entityPool) {\n  for(let instanceMap of Object.values(entityPool.components)) {\n    instanceMap.clear();\n  }\n  entityPool.nextAvailableEntityId = 1;\n  entityPool.unclaimedEntityIds.length = 0;\n  entityPool.deadEntityIds.length = 0;\n}\n\n/**\n * @param {import('./EntityTypes').EntityPoolLike} entityPool\n * @returns {import('./EntityId').EntityId}\n */\nexport function newEntity(entityPool) {\n  let result = entityPool.unclaimedEntityIds.pop();\n  if (typeof result === 'undefined') {\n    result = entityPool.nextAvailableEntityId;\n    entityPool.nextAvailableEntityId += 1;\n  }\n  return result;\n}\n\n/**\n * @param {import('./EntityTypes').EntityPoolLike} entityPool \n * @param {import('./EntityId').EntityId} entityId \n */\nexport function deleteEntity(entityPool, entityId) {\n  entityPool.deadEntityIds.push(entityId);\n  for (let instanceMap of Object.values(entityPool.components)) {\n    instanceMap.delete(entityId);\n  }\n  entityPool.deadEntityIds.splice(entityPool.deadEntityIds.indexOf(entityId), 1);\n  entityPool.unclaimedEntityIds.push(entityId);\n}\n\n/**\n * @template T\n * @param {import('./EntityTypes').EntityPoolLike} entityPool \n * @param {import('./EntityId').EntityId} entityId\n * @param {import('../component').ComponentClass<T>} componentClass\n * @returns {T}\n */\nexport function attachComponent(entityPool, entityId, componentClass) {\n  if (entityPool.deadEntityIds.includes(entityId)) {\n    // NOTE: This makes sure that when executing clean-up code, we don't re-add anything back in.\n    throw new Error('Cannot attach components to a dead entity.');\n  }\n  if (!(componentClass.name in entityPool.components)) {\n    let result = new ComponentInstanceMap(componentClass);\n    entityPool.components[componentClass.name] = /** @type {any} */ (result);\n  }\n  return entityPool.components[componentClass.name].insert(entityId);\n}\n\n/**\n * @template T\n * @param {import('./EntityTypes').EntityPoolLike} entityPool \n * @param {import('./EntityId').EntityId} entityId\n * @param {import('../component').ComponentClass<T>} componentClass\n */\nexport function detachComponent(entityPool, entityId, componentClass) {\n  if (!(componentClass.name in entityPool.components)) {\n    throw new Error(`Cannot detach component - no mapping exists for component class \"${componentClass.name}\".`);\n  }\n  return entityPool.components[componentClass.name].delete(entityId);\n}\n\n/**\n * @template T\n * @param {import('./EntityTypes').EntityPoolLike} entityPool \n * @param {import('./EntityId').EntityId} entityId\n * @param {import('../component').ComponentClass<T>} componentClass\n * @returns {T|null}\n */\nexport function lookupComponent(entityPool, entityId, componentClass) {\n  let instanceMap = entityPool.components[componentClass.name];\n  if (!instanceMap?.has(entityId)) {\n    return null;\n  }\n  return instanceMap.lookup(entityId);\n}\n\n/**\n * @template T\n * @param {import('./EntityTypes').EntityPoolLike} entityPool \n * @param {import('../component').ComponentClass<T>} componentClass\n * @param {T} componentInstance\n * @returns {import('./EntityId').EntityId}\n */\nexport function lookupEntity(entityPool, componentClass, componentInstance) {\n  let instanceMap = entityPool.components[componentClass.name];\n  return instanceMap.keyOf(componentInstance);\n}\n\n/**\n * @template T\n * @param {import('./EntityTypes').EntityPoolLike} entityPool \n * @param {import('../component').ComponentClass<T>} componentClass \n * @returns {Iterable<T>}\n */\nexport function values(entityPool, componentClass) {\n  return entityPool.components[componentClass.name]?.values() ?? [];\n}\n","\n/** @typedef {number} EntityId */\n\n/**\n * Used to match for entity id in query result.\n * \n * @param {number} [value]\n */\nexport function EntityId(value) {\n  return /** @type {EntityId} */ (Math.trunc(Number(value ?? 0)));\n}\n\nEntityId.NONE = EntityId(0);\n","import { EntityId } from '../local';\n\n/**\n * @template {Record<string, import('./MatchTypes').MatchClass<any>>} T\n * @param {T} template\n * @returns {import('./MatchTypes').Match<T>}\n */\nexport function createMatch(template) {\n  /** @type {Array<import('./MatchTypes').MatchClass<any>>} */\n  const all = [];\n  /** @type {Array<import('./MatchTypes').MatchClass<any>>} */\n  const any = [];\n  /** @type {Array<import('./MatchTypes').MatchClass<any>>} */\n  const none = [];\n  /** @type {Array<import('./MatchTypes').MatchClass<any>>} */\n  const maybe = [];\n\n  for (let [_, value] of Object.entries(template)) {\n    // TODO: For now, everything is AND'ed together.\n    all.push(value);\n  }\n\n  if (all.length === 1 && all[0].name === EntityId.name) {\n    throw new Error(\n      'Cannot match only for EntityId, must include at least 1 other component class!'\n    );\n  }\n\n  const matchId = matchIdFrom(all, any, none);\n  return {\n    matchId,\n    template,\n    all,\n    any,\n    none,\n    maybe,\n  };\n}\n\n/**\n * @param {Array<import('./MatchTypes').MatchClass<any>>} all\n * @param {Array<import('./MatchTypes').MatchClass<any>>} any\n * @param {Array<import('./MatchTypes').MatchClass<any>>} none\n */\nfunction matchIdFrom(all, any, none) {\n  return [\n    ...all.map((c) => `&${c.name}`),\n    ...any.map((c) => `|${c.name}`),\n    ...none.map((c) => `~${c.name}`),\n  ].sort().join('');\n}\n","import { EntityId } from '../local';\n\n/**\n * @template {object} T\n * @param {import('../local').EntityPoolLike} entityPool\n * @param {import('./MatchTypes').Match<T>} match\n * @param {EntityId} [entityId]\n * @returns {import('./MatchTypes').MatchResult<T>|null}\n */\nexport function queryMatch(entityPool, match, entityId = undefined) {\n  const template = match.template;\n  const templateEntries = Object.entries(template);\n  const templateValues = Object.values(template);\n  if (templateValues.length <= 0) {\n    return null;\n  }\n  const smallest = findSmallestComponentClassByMapSize(\n    entityPool,\n    templateValues\n  );\n  if (!smallest) {\n    return null;\n  }\n  if (typeof entityId === 'undefined') {\n    entityId = entityPool.components[smallest.name]?.keys()[0];\n  }\n  /** @type {any} */\n  let result = {};\n  for (let [key, componentClass] of templateEntries) {\n    const componentName = componentClass.name;\n    if (componentName === EntityId.name) {\n      result[key] = entityId;\n      continue;\n    }\n    const instanceMap = entityPool.components[componentName];\n    if (!instanceMap.has(entityId)) {\n      // This is not a matching entity :(\n      return null;\n    }\n    result[key] = instanceMap.lookup(entityId);\n  }\n  return asMatchResult(result);\n}\n\n/**\n * @template {object} T\n * @param {import('../local').EntityPoolLike} entityPool\n * @param {import('./MatchTypes').Match<T>} match\n * @returns {Generator<import('./MatchTypes').MatchResult<T>>}\n */\nexport function* queryMatchAll(entityPool, match) {\n  const template = match.template;\n  const templateEntries = Object.entries(template);\n  const templateValues = Object.values(template);\n  if (templateValues.length <= 0) {\n    return;\n  }\n  const smallest = findSmallestComponentClassByMapSize(\n    entityPool,\n    templateValues\n  );\n  if (!smallest) {\n    return;\n  }\n  for (let entityId of entityPool.components[smallest.name]?.keys()) {\n    /** @type {any} */\n    let result = {};\n    for (let [key, componentClass] of templateEntries) {\n      const componentName = componentClass.name;\n      if (componentName === EntityId.name) {\n        result[key] = entityId;\n        continue;\n      }\n      const instanceMap = entityPool.components[componentName];\n      if (!instanceMap.has(entityId)) {\n        // This is not a matching entity :(\n        continue;\n      }\n      result[key] = instanceMap.lookup(entityId);\n    }\n    yield asMatchResult(result);\n  }\n}\n\n/**\n * @param {import('../local').EntityPoolLike} entityPool\n * @param {Array<import('../component').ComponentClass<any>>} componentClasses\n */\nfunction findSmallestComponentClassByMapSize(\n  entityPool,\n  componentClasses\n) {\n  let smallest = null;\n  let smallestSize = Number.POSITIVE_INFINITY;\n  for (let nextClass of componentClasses) {\n    const nextClassName = nextClass.name;\n    if (nextClassName === EntityId.name) {\n      continue;\n    }\n    let instanceMap = entityPool.components[nextClassName];\n    if (!instanceMap) {\n      // NOTE: There's a component class with NO entities. This query will never succeed with results.\n      return null;\n    }\n    let nextSize = instanceMap.size;\n    if (nextSize < smallestSize) {\n      smallest = nextClass;\n      smallestSize = nextSize;\n    }\n  }\n  if (!smallest) {\n    // This was an empty or only-entity-id query. This should not happen since we checked during construction.\n    throw new Error(\n      'Cannot find any non-EntityId component class to match for query.'\n    );\n  }\n  return smallest;\n}\n\n/**\n * @template {object} T\n * @param {Record<string, any>} out\n * @returns {import('./MatchTypes').MatchResult<T>}\n */\nfunction asMatchResult(out) {\n  return /** @type {import('./MatchTypes').MatchResult<any>} */ (out);\n}\n","import { EntityId, LocalEntityPool } from '../local';\nimport { MatchFactory, queryMatch, queryMatchAll } from '../match';\n\n/**\n * @template {import('../match').MatchTemplate} T\n */\nexport class Archetype {\n\n  /**\n   * @template {import('../match').MatchTemplate} T\n   * @param {T} components\n   */\n  static from(components) {\n    return new Archetype(components);\n  }\n\n  /**\n   * @private\n   * @param {T} components\n   */\n  constructor(components) {\n    /** @private */\n    this.components = components;\n    this.match = MatchFactory.createMatch(components);\n  }\n\n  /**\n   * @param {import('../local').EntityPoolLike} entityPool\n   * @returns {import('../match').MatchResult<T>}\n   */\n  newEntity(entityPool) {\n    let entityId = LocalEntityPool.newEntity(entityPool);\n    /** @type {any} */\n    let result = {};\n    for(let [key, componentClass] of Object.entries(this.components)) {\n      const componentName = componentClass.name;\n      if (componentName === EntityId.name) {\n        result[key] = entityId;\n        continue;\n      }\n      result[key] = LocalEntityPool.attachComponent(entityPool, entityId, componentClass);\n    }\n    return result;\n  }\n\n  /**\n   * @param {import('../local').EntityPoolLike} entityPool\n   * @param {EntityId} [entityId] \n   */\n  query(entityPool, entityId = undefined) {\n    return queryMatch(entityPool, this.match, entityId);\n  }\n\n  /**\n   * @param {import('../local').EntityPoolLike} entityPool\n   */\n  queryAll(entityPool) {\n    return queryMatchAll(entityPool, this.match);\n  }\n\n  asMatch() {\n    return this.match;\n  }\n}\n"],"names":["MatchFactory.createMatch","LocalEntityPool.newEntity","LocalEntityPool.attachComponent"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,cAAc,EAAE;AAC1D,EAAE,OAAO;AACT,IAAI,IAAI;AACR,IAAI,GAAG,EAAE,WAAW;AACpB,IAAI,MAAM,EAAE,cAAc;AAC1B,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACO,SAAS,oBAAoB,CAAC,cAAc,EAAE;AACrD,EAAE,IAAI,KAAK,IAAI,cAAc,EAAE;AAC/B,IAAI,OAAO,cAAc,CAAC,GAAG,EAAE;AAC/B,EAAE,CAAC,MAAM;AACT,IAAI,OAAO,IAAI,cAAc,EAAE;AAC/B,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS,uBAAuB,CAAC,cAAc,EAAE,QAAQ,EAAE;AAClE,EAAE,IAAI,QAAQ,IAAI,cAAc,IAAI,OAAO,cAAc,CAAC,MAAM,KAAK,UAAU,EAAE;AACjF,IAAI,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC;AACnC,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACO,SAAS,oBAAoB,CAAC,cAAc,EAAE,UAAU,EAAE;AACjE,EAAE,OAAO;AACT,OAAO;AACP,OAAO,MAAM,IAAI;AACjB,OAAO,MAAM,IAAI;AACjB,OAAO,cAAc,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI;AAC9C;;;;;;;;;;AC5CA;AACO,MAAM,aAAa,GAAG,aAAa;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,oBAAoB,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,cAAc,EAAE,eAAe,GAAG,EAAE,EAAE,WAAW,GAAG,MAAM,EAAE;AAC1E;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,cAAc,GAAG,cAAc;;AAExC,IAAI,IAAI,WAAW,IAAI,CAAC,EAAE;AAC1B,MAAM,MAAM,IAAI,KAAK;AACrB,QAAQ,CAAC,wCAAwC,EAAE,WAAW,CAAC,EAAE;AACjE,OAAO;AACP,IAAI;AACJ,IAAI,IAAI,eAAe,GAAG,WAAW,EAAE;AACvC,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;AAC9E,IAAI;;AAEJ,IAAI,MAAM,gBAAgB,GAAG,kCAAkC,CAAC,WAAW,CAAC;AAC5E,IAAI,MAAM,YAAY,GAAG,IAAI,WAAW,CAAC,eAAe,EAAE;AAC1D,MAAM,aAAa,EAAE,gBAAgB,CAAC,iBAAiB,GAAG,aAAa;AACvE,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,gBAAgB,CAAC,YAAY,CAAC;;AAEpD,IAAI,MAAM,kBAAkB;AAC5B,MAAM,kCAAkC,CAAC,aAAa,CAAC;AACvD,IAAI,MAAM,cAAc,GAAG,IAAI,WAAW,CAAC,eAAe,EAAE;AAC5D,MAAM,aAAa,EAAE,kBAAkB,CAAC,iBAAiB,GAAG,WAAW;AACvE,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,kBAAkB,CAAC,cAAc,CAAC;AAC3D;AACA,IAAI,IAAI,CAAC,iBAAiB,GAAG,kBAAkB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE;;AAEhC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC;;AAEjB;AACA,IAAI,IAAI,CAAC,WAAW,GAAG,WAAW;AAClC,EAAE;;AAEF,EAAE,IAAI,QAAQ,GAAG;AACjB,IAAI,OAAO,IAAI,CAAC,KAAK;AACrB,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;AACtC,QAAQ,IAAI,CAAC,iBAAiB,CAAC;AAC/B,KAAK;AACL,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE,cAAc,CAAC,QAAQ,EAAE,WAAW,EAAE;AACxC,IAAI,IAAI,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AAC3C,MAAM,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;AAClF,MAAM,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU;AACtD,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG;AACjC,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa;AACxC,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,EAAE,iBAAiB,CAAC;AAClG,OAAO;AACP,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;AAC3C,IAAI;AACJ,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,CAAC;AACrD,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE;AACpC,MAAM,MAAM,IAAI,KAAK;AACrB,QAAQ,CAAC,yDAAyD,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;AACvF,OAAO;AACP,IAAI;AACJ,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACzC,MAAM,IAAI,CAAC,IAAI,GAAG,OAAO;AACzB,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,OAAO;AACrC,IAAI;AACJ,IAAI,IAAI,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AAC1C,MAAM,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAC1E,MAAM,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU;AACzD,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG;AACjC,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa;AAC3C,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,EAAE,iBAAiB,CAAC;AACrG,OAAO;AACP,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;AAC9C,IAAI;AACJ,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE,MAAM,CAAC,QAAQ,EAAE,QAAQ,GAAG,SAAS,EAAE;AACzC,IAAI,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;AACzC,MAAM,QAAQ,GAAG,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC;AAC1D,IAAI;AACJ,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACtC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;AACxD;AACA,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,QAAQ;AACrC,MAAM,OAAO,QAAQ;AACrB,IAAI;AACJ;AACA,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI;AAC3B,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC;AACxC;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK;AACjC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,QAAQ;AACpC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,QAAQ;AACpC,IAAI,OAAO,QAAQ;AACnB,EAAE;;AAEF;AACA;AACA;AACA,EAAE,MAAM,CAAC,QAAQ,EAAE;AACnB,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;AACxB;AACA,MAAM,OAAO,KAAK;AAClB,IAAI;AACJ,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACtC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,EAAE;AAC3D;AACA,MAAM,OAAO,KAAK;AAClB,IAAI;AACJ,IAAI,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAC3C,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;AAC7B,IAAI,uBAAuB,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC;AAC9D,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;AACvB,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;AAC/B,MAAM,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AAC7C,MAAM,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AAC7C;AACA,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,IAAI;AACrC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,WAAW;AACxC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,WAAW;AACxC,IAAI;AACJ;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAClB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI;AACrC,IAAI,OAAO,IAAI;AACf,EAAE;;AAEF,EAAE,KAAK,GAAG;AACV,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAC3C,IAAI,IAAI,IAAI,QAAQ,IAAI,MAAM,EAAE;AAChC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC3B,IAAI;AACJ,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,CAAC,QAAQ,EAAE;AACnB,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChD,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE,KAAK,CAAC,QAAQ,EAAE;AAClB,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC3D,EAAE;;AAEF;AACA;AACA;AACA,EAAE,GAAG,CAAC,QAAQ,EAAE;AAChB,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,QAAQ;AAC7D,EAAE;;AAEF;AACA,EAAE,IAAI,GAAG;AACT,IAAI,OAAO,IAAI,CAAC,wBAAwB,EAAE;AAC1C,EAAE;;AAEF;AACA,EAAE,MAAM,GAAG;AACX,IAAI,OAAO,IAAI,CAAC,SAAS;AACzB,EAAE;;AAEF;AACA,EAAE,wBAAwB,GAAG;AAC7B,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB;AAC7C,IAAI,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;AAC9D,EAAE;AACF;;AAEA;AACA;AACA;AACA,SAAS,kCAAkC,CAAC,QAAQ,EAAE;AACtD,EAAE,IAAI,QAAQ,IAAI,GAAG,EAAE;AACvB,IAAI,OAAO,UAAU;AACrB,EAAE,CAAC,MAAM,IAAI,QAAQ,IAAI,MAAM,EAAE;AACjC,IAAI,OAAO,WAAW;AACtB,EAAE,CAAC,MAAM,IAAI,QAAQ,IAAI,aAAa,EAAE;AACxC,IAAI,OAAO,WAAW;AACtB,EAAE,CAAC,MAAM;AACT,IAAI,MAAM,IAAI,KAAK;AACnB,MAAM,CAAC,iEAAiE,EAAE,QAAQ,CAAC,EAAE;AACrF,KAAK;AACL,EAAE;AACF;;ACvOA;AACO,SAAS,UAAU,GAAG;AAC7B,EAAE,OAAO;AACT,IAAI,UAAU,EAAE,EAAE;AAClB,IAAI,qBAAqB,EAAE,CAAC;AAC5B,IAAI,kBAAkB,EAAE,EAAE;AAC1B,IAAI,aAAa,EAAE,EAAE;AACrB,GAAG;AACH;;AAEA;AACA;AACA;AACO,SAAS,SAAS,CAAC,UAAU,EAAE;AACtC,EAAE,IAAI,IAAI,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;AAC/D,IAAI,WAAW,CAAC,KAAK,EAAE;AACvB,EAAE;AACF,EAAE,UAAU,CAAC,qBAAqB,GAAG,CAAC;AACtC,EAAE,UAAU,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC;AAC1C,EAAE,UAAU,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACO,SAAS,SAAS,CAAC,UAAU,EAAE;AACtC,EAAE,IAAI,MAAM,GAAG,UAAU,CAAC,kBAAkB,CAAC,GAAG,EAAE;AAClD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACrC,IAAI,MAAM,GAAG,UAAU,CAAC,qBAAqB;AAC7C,IAAI,UAAU,CAAC,qBAAqB,IAAI,CAAC;AACzC,EAAE;AACF,EAAE,OAAO,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,UAAU,EAAE,QAAQ,EAAE;AACnD,EAAE,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;AACzC,EAAE,KAAK,IAAI,WAAW,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;AAChE,IAAI,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;AAChC,EAAE;AACF,EAAE,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAChF,EAAE,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe,CAAC,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE;AACtE,EAAE,IAAI,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACnD;AACA,IAAI,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;AACjE,EAAE;AACF,EAAE,IAAI,EAAE,cAAc,CAAC,IAAI,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;AACvD,IAAI,IAAI,MAAM,GAAG,IAAI,oBAAoB,CAAC,cAAc,CAAC;AACzD,IAAI,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,MAAM,CAAC;AAC5E,EAAE;AACF,EAAE,OAAO,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe,CAAC,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE;AACtE,EAAE,IAAI,EAAE,cAAc,CAAC,IAAI,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;AACvD,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,iEAAiE,EAAE,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChH,EAAE;AACF,EAAE,OAAO,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe,CAAC,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE;AACtE,EAAE,IAAI,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC;AAC9D,EAAE,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE;AACnC,IAAI,OAAO,IAAI;AACf,EAAE;AACF,EAAE,OAAO,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,UAAU,EAAE,cAAc,EAAE,iBAAiB,EAAE;AAC5E,EAAE,IAAI,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC;AAC9D,EAAE,OAAO,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,MAAM,CAAC,UAAU,EAAE,cAAc,EAAE;AACnD,EAAE,OAAO,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;AACnE;;;;;;;;;;;;;;;ACpHA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,KAAK,EAAE;AAChC,EAAE,gCAAgC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;AAChE;;AAEA,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;;ACV3B;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,QAAQ,EAAE;AACtC;AACA,EAAE,MAAM,GAAG,GAAG,EAAE;AAChB;AACA,EAAE,MAAM,GAAG,GAAG,EAAE;AAChB;AACA,EAAE,MAAM,IAAI,GAAG,EAAE;AACjB;AACA,EAAE,MAAM,KAAK,GAAG,EAAE;;AAElB,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AACnD;AACA,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;AACnB,EAAE;;AAEF,EAAE,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE;AACzD,IAAI,MAAM,IAAI,KAAK;AACnB,MAAM;AACN,KAAK;AACL,EAAE;;AAEF,EAAE,MAAM,OAAO,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;AAC7C,EAAE,OAAO;AACT,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,IAAI,GAAG;AACP,IAAI,GAAG;AACP,IAAI,IAAI;AACR,IAAI,KAAK;AACT,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACrC,EAAE,OAAO;AACT,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;AACnB;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,GAAG,SAAS,EAAE;AACpE,EAAE,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ;AACjC,EAAE,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;AAClD,EAAE,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;AAChD,EAAE,IAAI,cAAc,CAAC,MAAM,IAAI,CAAC,EAAE;AAClC,IAAI,OAAO,IAAI;AACf,EAAE;AACF,EAAE,MAAM,QAAQ,GAAG,mCAAmC;AACtD,IAAI,UAAU;AACd,IAAI;AACJ,GAAG;AACH,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAO,IAAI;AACf,EAAE;AACF,EAAE,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;AACvC,IAAI,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC9D,EAAE;AACF;AACA,EAAE,IAAI,MAAM,GAAG,EAAE;AACjB,EAAE,KAAK,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,eAAe,EAAE;AACrD,IAAI,MAAM,aAAa,GAAG,cAAc,CAAC,IAAI;AAC7C,IAAI,IAAI,aAAa,KAAK,QAAQ,CAAC,IAAI,EAAE;AACzC,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ;AAC5B,MAAM;AACN,IAAI;AACJ,IAAI,MAAM,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC;AAC5D,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACpC;AACA,MAAM,OAAO,IAAI;AACjB,IAAI;AACJ,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC9C,EAAE;AACF,EAAE,OAAO,aAAa,CAAC,MAAM,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,UAAU,aAAa,CAAC,UAAU,EAAE,KAAK,EAAE;AAClD,EAAE,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ;AACjC,EAAE,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;AAClD,EAAE,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;AAChD,EAAE,IAAI,cAAc,CAAC,MAAM,IAAI,CAAC,EAAE;AAClC,IAAI;AACJ,EAAE;AACF,EAAE,MAAM,QAAQ,GAAG,mCAAmC;AACtD,IAAI,UAAU;AACd,IAAI;AACJ,GAAG;AACH,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI;AACJ,EAAE;AACF,EAAE,KAAK,IAAI,QAAQ,IAAI,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE;AACrE;AACA,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,KAAK,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,eAAe,EAAE;AACvD,MAAM,MAAM,aAAa,GAAG,cAAc,CAAC,IAAI;AAC/C,MAAM,IAAI,aAAa,KAAK,QAAQ,CAAC,IAAI,EAAE;AAC3C,QAAQ,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ;AAC9B,QAAQ;AACR,MAAM;AACN,MAAM,MAAM,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC;AAC9D,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACtC;AACA,QAAQ;AACR,MAAM;AACN,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;AAChD,IAAI;AACJ,IAAI,MAAM,aAAa,CAAC,MAAM,CAAC;AAC/B,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,SAAS,mCAAmC;AAC5C,EAAE,UAAU;AACZ,EAAE;AACF,EAAE;AACF,EAAE,IAAI,QAAQ,GAAG,IAAI;AACrB,EAAE,IAAI,YAAY,GAAG,MAAM,CAAC,iBAAiB;AAC7C,EAAE,KAAK,IAAI,SAAS,IAAI,gBAAgB,EAAE;AAC1C,IAAI,MAAM,aAAa,GAAG,SAAS,CAAC,IAAI;AACxC,IAAI,IAAI,aAAa,KAAK,QAAQ,CAAC,IAAI,EAAE;AACzC,MAAM;AACN,IAAI;AACJ,IAAI,IAAI,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC;AAC1D,IAAI,IAAI,CAAC,WAAW,EAAE;AACtB;AACA,MAAM,OAAO,IAAI;AACjB,IAAI;AACJ,IAAI,IAAI,QAAQ,GAAG,WAAW,CAAC,IAAI;AACnC,IAAI,IAAI,QAAQ,GAAG,YAAY,EAAE;AACjC,MAAM,QAAQ,GAAG,SAAS;AAC1B,MAAM,YAAY,GAAG,QAAQ;AAC7B,IAAI;AACJ,EAAE;AACF,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB;AACA,IAAI,MAAM,IAAI,KAAK;AACnB,MAAM;AACN,KAAK;AACL,EAAE;AACF,EAAE,OAAO,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,GAAG,EAAE;AAC5B,EAAE,+DAA+D,GAAG;AACpE;;AC3HA;AACA;AACA;AACO,MAAM,SAAS,CAAC;;AAEvB;AACA;AACA;AACA;AACA,EAAE,OAAO,IAAI,CAAC,UAAU,EAAE;AAC1B,IAAI,OAAO,IAAI,SAAS,CAAC,UAAU,CAAC;AACpC,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,UAAU,EAAE;AAC1B;AACA,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU;AAChC,IAAI,IAAI,CAAC,KAAK,GAAGA,WAAwB,CAAC,UAAU,CAAC;AACrD,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE,SAAS,CAAC,UAAU,EAAE;AACxB,IAAI,IAAI,QAAQ,GAAGC,SAAyB,CAAC,UAAU,CAAC;AACxD;AACA,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACtE,MAAM,MAAM,aAAa,GAAG,cAAc,CAAC,IAAI;AAC/C,MAAM,IAAI,aAAa,KAAK,QAAQ,CAAC,IAAI,EAAE;AAC3C,QAAQ,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ;AAC9B,QAAQ;AACR,MAAM;AACN,MAAM,MAAM,CAAC,GAAG,CAAC,GAAGC,eAA+B,CAAC,UAAU,EAAE,QAAQ,EAAE,cAAc,CAAC;AACzF,IAAI;AACJ,IAAI,OAAO,MAAM;AACjB,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE,KAAK,CAAC,UAAU,EAAE,QAAQ,GAAG,SAAS,EAAE;AAC1C,IAAI,OAAO,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;AACvD,EAAE;;AAEF;AACA;AACA;AACA,EAAE,QAAQ,CAAC,UAAU,EAAE;AACvB,IAAI,OAAO,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC;AAChD,EAAE;;AAEF,EAAE,OAAO,GAAG;AACZ,IAAI,OAAO,IAAI,CAAC,KAAK;AACrB,EAAE;AACF;;;;"}