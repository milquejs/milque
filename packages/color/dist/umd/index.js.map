{"version":3,"file":"index.js","sources":["../../src/rgba.js","../../src/grayscale.js"],"sourcesContent":["/** @returns {import('./ColorTypes').Rgba} */\nexport function create() {\n  return 0x0;\n}\n\n/**\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {number} [alpha]\n */\nexport function fromBytes(red, green, blue, alpha = 0xff) {\n  return (\n    ((alpha & 0xff) << 24) | ((red & 0xff) << 16) | ((green & 0xff) << 8) | (blue & 0xff)\n  );\n}\n\n/**\n * @param {number} redf\n * @param {number} greenf\n * @param {number} bluef\n * @param {number} alphaf\n */\nexport function fromFloats(redf, greenf, bluef, alphaf = 1.0) {\n  let r = Math.floor(Math.max(Math.min(redf, 1), 0) * 255);\n  let g = Math.floor(Math.max(Math.min(greenf, 1), 0) * 255);\n  let b = Math.floor(Math.max(Math.min(bluef, 1), 0) * 255);\n  let a = Math.floor(Math.max(Math.min(alphaf, 1), 0) * 255);\n  return fromBytes(r, g, b, a);\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function red(hexValue) {\n  return (hexValue >> 16) & 0xff;\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function redf(hexValue) {\n  return ((hexValue >> 16) & 0xff) / 255.0;\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function green(hexValue) {\n  return (hexValue >> 8) & 0xff;\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function greenf(hexValue) {\n  return ((hexValue >> 8) & 0xff) / 255.0;\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function blue(hexValue) {\n  return hexValue & 0xff;\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function bluef(hexValue) {\n  return (hexValue & 0xff) / 255.0;\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function alpha(hexValue) {\n  let result = (hexValue >> 24) & 0xff;\n  if (result === 0x00) {\n    return 0xff;\n  }\n  return result;\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function alphaf(hexValue) {\n  return alpha(hexValue) / 255.0;\n}\n\nconst OPACITY_EPSILON = 0.01;\n\n/**\n * @param {import('./ColorTypes').Rgba} from\n * @param {import('./ColorTypes').Rgba} to\n * @param {number} delta\n */\nexport function mix(from = 0x000000, to = 0xffffff, delta = 0.5) {\n  const rm = redf(from);\n  const gm = greenf(from);\n  const bm = bluef(from);\n  const am = alphaf(from);\n  const rf = (redf(to) - rm) * delta + rm;\n  const gf = (greenf(to) - gm) * delta + gm;\n  const bf = (bluef(to) - bm) * delta + bm;\n  /** @type {number|undefined} */\n  let af = (alphaf(to) - am) * delta + am;\n  if (af < OPACITY_EPSILON) {\n    af = undefined;\n  }\n  return fromFloats(rf, gf, bf, af);\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function toCSSColorString(hexValue) {\n  if (typeof hexValue !== 'number') {\n    throw new Error('Not a valid number for hex color value.');\n  }\n  let r = red(hexValue).toString(16).padStart(2, '0');\n  let g = green(hexValue).toString(16).padStart(2, '0');\n  let b = blue(hexValue).toString(16).padStart(2, '0');\n  return `#${r}${g}${b}`;\n}\n\n/**\n * @param {import('./ColorTypes').Rgba} hexValue\n */\nexport function toFloatVector(hexValue) {\n  if (typeof hexValue !== 'number') {\n    throw new Error('Not a valid number for hex color value.');\n  }\n  return [redf(hexValue), greenf(hexValue), bluef(hexValue), alphaf(hexValue)];\n}\n","/**\n * @returns {import('./ColorTypes').Grayscale}\n */\nexport function create() {\n  return 0x0;\n}\n\n/**\n * @param {number} gray\n * @param {number} alpha\n */\nexport function fromBytes(gray, alpha = 0xff) {\n  return (\n    ((alpha & 0xff) << 8) | (gray & 0xff)\n  );\n}\n\n/**\n * @param {number} grayf\n * @param {number} alphaf\n */\nexport function fromFloats(grayf, alphaf = 1.0) {\n  let g = Math.floor(Math.max(Math.min(grayf, 1), 0) * 255);\n  let a = Math.floor(Math.max(Math.min(alphaf, 1), 0) * 255);\n  return fromBytes(g, a);\n}\n\n/**\n * @param {import('./ColorTypes').Grayscale} hexValue\n */\nexport function gray(hexValue) {\n  return hexValue & 0xff;\n}\n\n/**\n * @param {import('./ColorTypes').Grayscale} hexValue\n */\nexport function grayf(hexValue) {\n  return (hexValue & 0xff) / 255.0;\n}\n\n/**\n * @param {import('./ColorTypes').Grayscale} hexValue\n */\nexport function alpha(hexValue) {\n  let result = (hexValue >> 8) & 0xff;\n  if (result === 0x00) {\n    return 0xff;\n  }\n  return result;\n}\n\n/**\n * @param {import('./ColorTypes').Grayscale} hexValue\n */\nexport function alphaf(hexValue) {\n  return alpha(hexValue) / 255.0;\n}\n\nconst OPACITY_EPSILON = 0.01;\n\n/**\n * @param {import('./ColorTypes').Grayscale} from\n * @param {import('./ColorTypes').Grayscale} to\n * @param {number} delta\n */\nexport function mix(from = 0x0000, to = 0xffff, delta = 0.5) {\n  const gm = grayf(from);\n  const am = alphaf(from);\n  const gf = (grayf(to) - gm) * delta + gm;\n  /** @type {number|undefined} */\n  let af = (alphaf(to) - am) * delta + am;\n  if (af < OPACITY_EPSILON) {\n    af = undefined;\n  }\n  return fromFloats(gf, af);\n}\n\n/**\n * @param {import('./ColorTypes').Grayscale} hexValue\n */\nexport function toCSSColorString(hexValue) {\n  if (typeof hexValue !== 'number') {\n    throw new Error('Not a valid number for hex color value.');\n  }\n  let g = gray(hexValue).toString(16).padStart(2, '0');\n  return `#${g}${g}${g}`;\n}\n\n/**\n * @param {import('./ColorTypes').Grayscale} hexValue\n */\nexport function toFloatVector(hexValue) {\n  if (typeof hexValue !== 'number') {\n    throw new Error('Not a valid number for hex color value.');\n  }\n  return [grayf(hexValue), alphaf(hexValue)];\n}\n"],"names":["fromBytes","red","green","blue","alpha","fromFloats","redf","greenf","bluef","alphaf","Math","floor","max","min","hexValue","result","from","to","delta","rm","gm","bm","am","rf","gf","bf","af","undefined","Error","toString","padStart","gray","grayf","g"],"mappings":"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"}