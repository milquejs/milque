!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((t="undefined"!=typeof globalThis?globalThis:t||self).Milque={})}(this,(function(t){"use strict";function r(t,r,n,o=255){return(255&o)<<24|(255&t)<<16|(255&r)<<8|255&n}function n(t,n,o,e=1){return r(Math.floor(255*Math.max(Math.min(t,1),0)),Math.floor(255*Math.max(Math.min(n,1),0)),Math.floor(255*Math.max(Math.min(o,1),0)),Math.floor(255*Math.max(Math.min(e,1),0)))}function o(t){return t>>16&255}function e(t){return(t>>16&255)/255}function u(t){return t>>8&255}function a(t){return(t>>8&255)/255}function f(t){return 255&t}function i(t){return(255&t)/255}function l(t){let r=t>>24&255;return 0===r?255:r}function c(t){return l(t)/255}var h=Object.freeze({__proto__:null,alpha:l,alphaf:c,blue:f,bluef:i,create:function(){return 0},fromBytes:r,fromFloats:n,green:u,greenf:a,mix:function(t=0,r=16777215,o=.5){const u=e(t),f=a(t),l=i(t),h=c(t),m=(e(r)-u)*o+u,d=(a(r)-f)*o+f,p=(i(r)-l)*o+l;let M=(c(r)-h)*o+h;return M<.01&&(M=void 0),n(m,d,p,M)},red:o,redf:e,toCSSColorString:function(t){if("number"!=typeof t)throw new Error("Not a valid number for hex color value.");return`#${o(t).toString(16).padStart(2,"0")}${u(t).toString(16).padStart(2,"0")}${f(t).toString(16).padStart(2,"0")}`},toFloatVector:function(t){if("number"!=typeof t)throw new Error("Not a valid number for hex color value.");return[e(t),a(t),i(t),c(t)]}});function m(t,r=255){return(255&r)<<8|255&t}function d(t,r=1){return m(Math.floor(255*Math.max(Math.min(t,1),0)),Math.floor(255*Math.max(Math.min(r,1),0)))}function p(t){return 255&t}function M(t){return(255&t)/255}function b(t){let r=t>>8&255;return 0===r?255:r}function s(t){return b(t)/255}var x=Object.freeze({__proto__:null,alpha:b,alphaf:s,create:function(){return 0},fromBytes:m,fromFloats:d,gray:p,grayf:M,mix:function(t=0,r=65535,n=.5){const o=M(t),e=s(t),u=(M(r)-o)*n+o;let a=(s(r)-e)*n+e;return a<.01&&(a=void 0),d(u,a)},toCSSColorString:function(t){if("number"!=typeof t)throw new Error("Not a valid number for hex color value.");let r=p(t).toString(16).padStart(2,"0");return`#${r}${r}${r}`},toFloatVector:function(t){if("number"!=typeof t)throw new Error("Not a valid number for hex color value.");return[M(t),s(t)]}});t.grayscale=x,t.rgba=h}));
//# sourceMappingURL=index.js.map
