{"version":3,"file":"index.js","sources":["../../src/ByteReader.js","../../../color/dist/esm/index.js","../../src/AsepriteBytesHelper.js","../../src/AsepriteChunkPalette.js","../../src/AsepriteChunkLayer.js","../../src/AsepritePixelFormats.js","../../src/AsepriteChunkCel.js","../../src/AsepriteChunkCelExtra.js","../../src/AsepriteChunkColorProfile.js","../../src/AsepriteChunkExternalFiles.js","../../src/AsepriteChunkTags.js","../../src/AsepriteChunkUserData.js","../../src/AsepriteChunkSlice.js","../../src/AsepriteChunkTileset.js","../../src/AsepriteChunkTypes.js","../../src/AsepriteChunks.js","../../src/AsepriteFile.js","../../src/Aseprite.js"],"sourcesContent":["export class ByteReader {\n\n  /**\n   * @param {ArrayBuffer} arrayBuffer\n   * @param {number} [byteOffset]\n   * @param {number} [byteLength]\n   * @param {boolean} [littleEndian]\n   */\n  constructor(arrayBuffer, byteOffset = 0, byteLength = arrayBuffer.byteLength, littleEndian = true) {\n    /** @readonly */\n    this.buffer = arrayBuffer;\n    /** @readonly */\n    this.view = new DataView(arrayBuffer, byteOffset, byteLength);\n    /** @readonly */\n    this.littleEndian = littleEndian;\n\n    /** @protected */\n    this.offset = 0;\n  }\n\n  /**\n   * @param {number} numBytes \n   */\n  skipBytes(numBytes) {\n    this.offset += numBytes;\n  }\n\n  /**\n   * The next 8-bit unsigned value.\n   */\n  nextByte() {\n    let result = this.view.getUint8(this.offset);\n    this.offset += 1;\n    return result;\n  }\n\n  /**\n   * The next 16-bit unsigned value.\n   */\n  nextWord() {\n    let result = this.view.getUint16(this.offset, this.littleEndian);\n    this.offset += 2;\n    return result;\n  }\n\n  /**\n   * The next 16-bit signed value.\n   */\n  nextShort() {\n    let result = this.view.getInt16(this.offset, this.littleEndian);\n    this.offset += 2;\n    return result;\n  }\n\n  /**\n   * The next 32-bit unsigned value.\n   */\n  nextDoubleWord() {\n    let result = this.view.getUint32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return result;\n  }\n\n  /**\n   * The next 32-bit signed value.\n   */\n  nextLong() {\n    let result = this.view.getInt32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return result;\n  }\n\n  /**\n   * The next 64-bit signed value.\n   */\n  nextDoubleLong() {\n    let result = this.view.getBigInt64(this.offset, this.littleEndian);\n    this.offset += 8;\n    return result;\n  }\n\n  /**\n   * The next 64-bit unsigned value.\n   */\n  nextQuadWord() {\n    let result = this.view.getBigUint64(this.offset, this.littleEndian);\n    this.offset += 8;\n    return result;\n  }\n\n  /**\n   * The next 32-bit fixed-point 16.16 value.\n   */\n  nextFixed() {\n    // TODO: Today, this is the same as getting a float32.\n    const fixed = this.view.getFloat32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return fixed;\n  }\n\n  /**\n   * The next 32-bit single-precision value.\n   */\n  nextFloat() {\n    const result = this.view.getFloat32(this.offset, this.littleEndian);\n    this.offset += 4;\n    return result;\n  }\n\n  /**\n   * The next 64-bit double-precision value.\n   */\n  nextDouble() {\n    const result = this.view.getFloat64(this.offset, this.littleEndian);\n    this.offset += 8;\n    return result;\n  }\n\n  /**\n   * A slice of the next N-bytes.\n   * \n   * @param {number} numBytes \n   */\n  nextBytes(numBytes) {\n    let result = this.buffer.slice(this.offset, this.offset + numBytes);\n    this.offset += numBytes;\n    return result;\n  }\n\n  /**\n   * A slice of all remaining bytes in view.\n   */\n  remainingBytes() {\n    let numBytes = this.view.byteLength - this.offset;\n    return this.nextBytes(numBytes);\n  }\n}\n","/**\n * @typedef {ReturnType<create>} RGBA\n */\n\nfunction create$1() {\n  return 0x0;\n}\n\n/**\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {number} [alpha]\n */\nfunction fromBytes$1(red, green, blue, alpha = 0xff) {\n  return (\n    ((alpha & 0xff) << 24) | ((red & 0xff) << 16) | ((green & 0xff) << 8) | (blue & 0xff)\n  );\n}\n\n/**\n * @param {number} redf\n * @param {number} greenf\n * @param {number} bluef\n * @param {number} alphaf\n */\nfunction fromFloats$1(redf, greenf, bluef, alphaf = 1.0) {\n  let r = Math.floor(Math.max(Math.min(redf, 1), 0) * 255);\n  let g = Math.floor(Math.max(Math.min(greenf, 1), 0) * 255);\n  let b = Math.floor(Math.max(Math.min(bluef, 1), 0) * 255);\n  let a = Math.floor(Math.max(Math.min(alphaf, 1), 0) * 255);\n  return fromBytes$1(r, g, b, a);\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction red(hexValue) {\n  return (hexValue >> 16) & 0xff;\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction redf(hexValue) {\n  return ((hexValue >> 16) & 0xff) / 255.0;\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction green(hexValue) {\n  return (hexValue >> 8) & 0xff;\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction greenf(hexValue) {\n  return ((hexValue >> 8) & 0xff) / 255.0;\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction blue(hexValue) {\n  return hexValue & 0xff;\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction bluef(hexValue) {\n  return (hexValue & 0xff) / 255.0;\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction alpha$1(hexValue) {\n  let result = (hexValue >> 24) & 0xff;\n  if (result === 0x00) {\n    return 0xff;\n  }\n  return result;\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction alphaf$1(hexValue) {\n  return alpha$1(hexValue) / 255.0;\n}\n\nconst OPACITY_EPSILON$1 = 0.01;\n\n/**\n * @param {RGBA} from\n * @param {RGBA} to\n * @param {number} delta\n */\nfunction mix$1(from = 0x000000, to = 0xffffff, delta = 0.5) {\n  const rm = redf(from);\n  const gm = greenf(from);\n  const bm = bluef(from);\n  const am = alphaf$1(from);\n  const rf = (redf(to) - rm) * delta + rm;\n  const gf = (greenf(to) - gm) * delta + gm;\n  const bf = (bluef(to) - bm) * delta + bm;\n  /** @type {number|undefined} */\n  let af = (alphaf$1(to) - am) * delta + am;\n  if (af < OPACITY_EPSILON$1) {\n    af = undefined;\n  }\n  return fromFloats$1(rf, gf, bf, af);\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction toCSSColorString$1(hexValue) {\n  if (typeof hexValue !== 'number') {\n    throw new Error('Not a valid number for hex color value.');\n  }\n  let r = red(hexValue).toString(16).padStart(2, '0');\n  let g = green(hexValue).toString(16).padStart(2, '0');\n  let b = blue(hexValue).toString(16).padStart(2, '0');\n  return `#${r}${g}${b}`;\n}\n\n/**\n * @param {RGBA} hexValue\n */\nfunction toFloatVector$1(hexValue) {\n  if (typeof hexValue !== 'number') {\n    throw new Error('Not a valid number for hex color value.');\n  }\n  return [redf(hexValue), greenf(hexValue), bluef(hexValue), alphaf$1(hexValue)];\n}\n\nvar rgba = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  alpha: alpha$1,\n  alphaf: alphaf$1,\n  blue: blue,\n  bluef: bluef,\n  create: create$1,\n  fromBytes: fromBytes$1,\n  fromFloats: fromFloats$1,\n  green: green,\n  greenf: greenf,\n  mix: mix$1,\n  red: red,\n  redf: redf,\n  toCSSColorString: toCSSColorString$1,\n  toFloatVector: toFloatVector$1\n});\n\n/**\n * @typedef {ReturnType<create>} Grayscale\n */\n\nfunction create() {\n  return 0x0;\n}\n\n/**\n * @param {number} gray\n * @param {number} alpha\n */\nfunction fromBytes(gray, alpha = 0xff) {\n  return (\n    ((alpha & 0xff) << 8) | (gray & 0xff)\n  );\n}\n\n/**\n * @param {number} grayf\n * @param {number} alphaf\n */\nfunction fromFloats(grayf, alphaf = 1.0) {\n  let g = Math.floor(Math.max(Math.min(grayf, 1), 0) * 255);\n  let a = Math.floor(Math.max(Math.min(alphaf, 1), 0) * 255);\n  return fromBytes(g, a);\n}\n\n/**\n * @param {Grayscale} hexValue\n */\nfunction gray(hexValue) {\n  return hexValue & 0xff;\n}\n\n/**\n * @param {Grayscale} hexValue\n */\nfunction grayf(hexValue) {\n  return (hexValue & 0xff) / 255.0;\n}\n\n/**\n * @param {Grayscale} hexValue\n */\nfunction alpha(hexValue) {\n  let result = (hexValue >> 8) & 0xff;\n  if (result === 0x00) {\n    return 0xff;\n  }\n  return result;\n}\n\n/**\n * @param {Grayscale} hexValue\n */\nfunction alphaf(hexValue) {\n  return alpha(hexValue) / 255.0;\n}\n\nconst OPACITY_EPSILON = 0.01;\n\n/**\n * @param {Grayscale} from\n * @param {Grayscale} to\n * @param {number} delta\n */\nfunction mix(from = 0x0000, to = 0xffff, delta = 0.5) {\n  const gm = grayf(from);\n  const am = alphaf(from);\n  const gf = (grayf(to) - gm) * delta + gm;\n  /** @type {number|undefined} */\n  let af = (alphaf(to) - am) * delta + am;\n  if (af < OPACITY_EPSILON) {\n    af = undefined;\n  }\n  return fromFloats(gf, af);\n}\n\n/**\n * @param {Grayscale} hexValue\n */\nfunction toCSSColorString(hexValue) {\n  if (typeof hexValue !== 'number') {\n    throw new Error('Not a valid number for hex color value.');\n  }\n  let g = gray(hexValue).toString(16).padStart(2, '0');\n  return `#${g}${g}${g}`;\n}\n\n/**\n * @param {Grayscale} hexValue\n */\nfunction toFloatVector(hexValue) {\n  if (typeof hexValue !== 'number') {\n    throw new Error('Not a valid number for hex color value.');\n  }\n  return [grayf(hexValue), alphaf(hexValue)];\n}\n\nvar grayscale = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  alpha: alpha,\n  alphaf: alphaf,\n  create: create,\n  fromBytes: fromBytes,\n  fromFloats: fromFloats,\n  gray: gray,\n  grayf: grayf,\n  mix: mix,\n  toCSSColorString: toCSSColorString,\n  toFloatVector: toFloatVector\n});\n\nexport { grayscale, rgba };\n//# sourceMappingURL=index.js.map\n","import { grayscale, rgba } from '@milquejs/color';\n\nimport { ByteReader } from './ByteReader';\n\n/**\n * @param {ByteReader} data\n * @param {TextDecoder} textDecoder \n */\nexport function readAsepriteStringBytes(data, textDecoder) {\n  const numBytes = data.nextWord();\n  const stringBuffer = data.nextBytes(numBytes);\n  return textDecoder.decode(stringBuffer);\n}\n\n/**\n * @param {ByteReader} data\n */\nexport function readAsepriteRGBAPixelBytes(data) {\n  const red = data.nextByte();\n  const green = data.nextByte();\n  const blue = data.nextByte();\n  const alpha = data.nextByte();\n  return rgba.fromBytes(red, green, blue, alpha);\n}\n\n/**\n * @param {ByteReader} data\n */\nexport function readAsepriteGrayscalePixelBytes(data) {\n  const gray = data.nextByte();\n  const alpha = data.nextByte();\n  return grayscale.fromBytes(gray, alpha);\n}\n\n/**\n * @param {ByteReader} data\n */\nexport function readAsepriteIndexedPixelBytes(data) {\n  const index = data.nextByte();\n  return index;\n}\n","import { rgba } from '@milquejs/color';\nimport { readAsepriteStringBytes } from './AsepriteBytesHelper';\nimport { ByteReader } from './ByteReader';\n\n/**\n * @param {ByteReader} data \n * @param {TextDecoder} textDecoder\n */\nexport function readAsepriteChunkPalette(data, textDecoder) {\n  /** @type {Array<AsepritePaletteColor>} */\n  let colors = [];\n  const paletteSize = data.nextDoubleWord();\n  const firstColor = data.nextDoubleWord();\n  const lastColor = data.nextDoubleWord();\n  data.skipBytes(8); // Zeroes (for future)\n  for(let i = 0; i < paletteSize; ++i) {\n    const flags = data.nextWord();\n    const red = data.nextByte();\n    const green = data.nextByte();\n    const blue = data.nextByte();\n    const alpha = data.nextByte();\n    let name;\n    if (flags === 1) {\n      name = readAsepriteStringBytes(data, textDecoder);\n    }\n    let color = createAsepritePaletteColor(red, green, blue, alpha, name);\n    colors.push(color);\n  }\n  return {\n    /** Number of color entries. */\n    paletteSize,\n    /** Index of the first color to change. */\n    firstColor,\n    /** Index of the last color to change. */\n    lastColor,\n    colors,\n  };\n}\n\n/** @typedef {ReturnType<createAsepritePaletteColor>} AsepritePaletteColor */\n\n/**\n * @param {number} red\n * @param {number} green \n * @param {number} blue\n * @param {number} alpha\n * @param {string} [name]\n */\nfunction createAsepritePaletteColor(red, green, blue, alpha, name = 'none') {\n  return {\n    name,\n    value: rgba.fromBytes(red, green, blue, alpha),\n  };\n}\n","import { readAsepriteStringBytes } from './AsepriteBytesHelper';\nimport { ByteReader } from './ByteReader';\n\n/** @typedef {AsepriteBlendModes[keyof AsepriteBlendModes]} AsepriteBlendMode */\n\nexport const AsepriteBlendModes = /** @type {const} */ ({\n  NORMAL: 0,\n  MULTIPLY: 1,\n  SCREEN: 2,\n  OVERLAY: 3,\n  DARKEN: 4,\n  LIGHTEN: 5,\n  COLOR_DODGE: 6,\n  COLOR_BURN: 7,\n  HARD_LIGHT: 8,\n  SOFT_LIGHT: 9,\n  DIFFERENCE: 10,\n  EXCLUSION: 11,\n  HUE: 12,\n  SATURATION: 13,\n  COLOR: 14,\n  LUMINOSITY: 15,\n  ADDITION: 16,\n  SUBTRACT: 17,\n  DIVIDE: 18\n});\n\nexport const AsepriteLayerFlags = /** @type {const} */ ({\n  VISIBLE: 1,\n  EDITABLE: 2,\n  LOCK_MOVEMENT: 4,\n  BACKGROUND: 8,\n  PREFER_LINKED_CELS: 16,\n  COLLAPSED_LAYER_GROUP: 32,\n  IS_REFERENCE_LAYER: 64\n});\n\n/**\n * @param {ByteReader} data \n * @param {TextDecoder} textDecoder\n */\nexport function readAsepriteChunkLayer(data, textDecoder) {\n  const flags = data.nextWord();\n  const layerType = data.nextWord();\n  const childLevel = data.nextWord();\n  data.nextWord(); // Ignored (default layer width in pixels)\n  data.nextWord(); // Ignored (default layer height in pixels)\n  const blendMode = /** @type {AsepriteBlendMode} */ (data.nextWord());\n  const opacity = data.nextByte();\n  data.skipBytes(3); // Zeroes (for future)\n  const layerName = readAsepriteStringBytes(data, textDecoder);\n  let tilesetIndex = 0;\n  if (layerType === 2) {\n    tilesetIndex = data.nextDoubleWord();\n  }\n  return {\n    flags,\n    layerType,\n    childLevel,\n    blendMode,\n    opacity,\n    layerName,\n    tilesetIndex,\n  };\n}\n","/** @typedef {AsepritePixelFormats[keyof AsepritePixelFormats]} AsepritePixelFormat */\n\nexport const AsepritePixelFormats = /** @type {const} */ ({\n  RGBA: 1,\n  GRAYSCALE: 2,\n  INDEXED: 3,\n});\n\n/**\n * @param {import('./AsepritePixelFormats').AsepritePixelFormat} pixelFormat\n */\nexport function countPixelFormatBytesPerPixel(pixelFormat) {\n  switch(pixelFormat) {\n    case AsepritePixelFormats.RGBA:\n      return 4;\n    case AsepritePixelFormats.GRAYSCALE:\n      return 2;\n    case AsepritePixelFormats.INDEXED:\n      return 1;\n    default:\n      throw new Error(`Unsupported image pixel format \"${pixelFormat}\".`);\n  }\n}\n\n/**\n * @param {number} colorDepth\n */\nexport function getPixelFormatFromColorDepth(colorDepth) {\n  if (colorDepth === 32) return AsepritePixelFormats.RGBA;\n  if (colorDepth === 16) return AsepritePixelFormats.GRAYSCALE;\n  if (colorDepth === 8) return AsepritePixelFormats.INDEXED;\n  throw new Error(`Unsupported color depth \"${colorDepth}\" for image pixel format.`);\n}\n","import { countPixelFormatBytesPerPixel } from './AsepritePixelFormats';\nimport { ByteReader } from './ByteReader';\n\n/** @typedef {AsepriteCelTypes[keyof AsepriteCelTypes]} AsepriteCelType */\n\nexport const AsepriteCelTypes = /** @type {const} */ ({\n  RAW_IMAGE_DATA: 0,\n  LINKED_CEL: 1,\n  COMPRESSED_IMAGE: 2,\n  COMPRESSED_TILEMAP: 3\n});\n\n/** @typedef {ReturnType<readAsepriteChunkCel>} AsepriteChunkCel */\n\n/**\n * @param {ByteReader} data \n * @param {import('./AsepritePixelFormats').AsepritePixelFormat} pixelFormat\n */\nexport function readAsepriteChunkCel(data, pixelFormat) {\n  const layerIndex = data.nextWord();\n  const posX = data.nextShort();\n  const posY = data.nextShort();\n  const opacityLevel = data.nextByte();\n  const celType = /** @type {AsepriteCelType} */ (data.nextWord());\n  const zIndex = data.nextShort();\n  data.skipBytes(5); // Zeroes (for future)\n  /** @type {AsepriteRawImageData|AsepriteLinkedCel|AsepriteCompressedImage|AsepriteCompressedTilemap} */\n  let celData;\n  switch(celType) {\n    case AsepriteCelTypes.RAW_IMAGE_DATA:\n      celData = readAsepriteChunkCelRawImageData(data, pixelFormat);\n      break;\n    case AsepriteCelTypes.LINKED_CEL:\n      celData = readAsepriteChunkCelLinkedCel(data);\n      break;\n    case AsepriteCelTypes.COMPRESSED_IMAGE:\n      celData = readAsepriteChunkCelCompressedImage(data);\n      break;\n    case AsepriteCelTypes.COMPRESSED_TILEMAP:\n      celData = readAsepriteChunkCelCompressedTilemap(data);\n      break;\n    default:\n      throw new Error(`Unsupported cel type \"${celType}\".`);\n  }\n  return {\n    layerIndex,\n    posX,\n    posY,\n    opacityLevel,\n    celType,\n    zIndex,\n    celData,\n  };\n}\n\n/** @typedef {ReturnType<readAsepriteChunkCelRawImageData>} AsepriteRawImageData */\n\n/**\n * @param {ByteReader} data \n * @param {import('./AsepritePixelFormats').AsepritePixelFormat} pixelFormat \n */\nfunction readAsepriteChunkCelRawImageData(data, pixelFormat) {\n  const width = data.nextWord();\n  const height = data.nextWord();\n  const length = width * height;\n  const bytesPerPixel = countPixelFormatBytesPerPixel(pixelFormat);\n  const numBytes = bytesPerPixel * length;\n  const pixelData = data.nextBytes(numBytes);\n  return {\n    width,\n    height,\n    length,\n    pixelFormat,\n    pixelData,\n  };\n}\n\n/** @typedef {ReturnType<readAsepriteChunkCelLinkedCel>} AsepriteLinkedCel */\n\n/**\n * @param {ByteReader} data\n */\nfunction readAsepriteChunkCelLinkedCel(data) {\n  const linkedFrame = data.nextWord();\n  return {\n    linkedFrame\n  };\n}\n\n/** @typedef {Awaited<ReturnType<readAsepriteChunkCelCompressedImage>>} AsepriteCompressedImage */\n\n/**\n * @param {ByteReader} data\n */\nfunction readAsepriteChunkCelCompressedImage(data) {\n  const width = data.nextWord();\n  const height = data.nextWord();\n  const compressedPixels = data.remainingBytes(); // zlib compressed.\n  return {\n    width,\n    height,\n    compressedPixels,\n  };\n}\n\n/** @typedef {ReturnType<readAsepriteChunkCelCompressedTilemap>} AsepriteCompressedTilemap */\n\n/**\n * @param {ByteReader} data\n */\nfunction readAsepriteChunkCelCompressedTilemap(data) {\n  const width = data.nextWord();\n  const height = data.nextWord();\n  const bitsPerTile = data.nextWord(); // Always 32-bits, at the moment.\n  const bitmaskForTileId = data.nextDoubleWord();\n  const bitmaskForFlipX = data.nextDoubleWord();\n  const bitmaskForFlipY = data.nextDoubleWord();\n  const bitmaskForDiagonalFlip = data.nextDoubleWord();\n  data.skipBytes(10); // Reserved bytes.\n  const compressedTiles = data.remainingBytes(); // zlib compressed.\n  return {\n    width,\n    height,\n    bitsPerTile,\n    bitmaskForTileId,\n    bitmaskForFlipX,\n    bitmaskForFlipY,\n    bitmaskForDiagonalFlip,\n    compressedTiles,\n  };\n}\n","import { ByteReader } from './ByteReader';\n\n/**\n * @param {ByteReader} data\n */\nexport function readAsepriteChunkCelExtra(data) {\n  const flags = data.nextDoubleWord();\n  const posX = data.nextFixed(); // precision float\n  const posY = data.nextFixed(); // precision float\n  const celWidth = data.nextFixed();\n  const celHeight = data.nextFixed();\n  data.skipBytes(16); // Zeroes (for future)\n  return {\n    flags,\n    posX,\n    posY,\n    celWidth,\n    celHeight,\n  };\n}\n","import { ByteReader } from './ByteReader';\n\n/** @typedef {AsepriteColorProfiles[keyof AsepriteColorProfiles]} AsepriteColorProfile */\n\nexport const AsepriteColorProfiles = /** @type {const} */ ({\n  NONE: 0,\n  SRGB: 1,\n  ICC: 2,\n});\n\n/**\n * @param {ByteReader} data\n */\nexport function readAsepriteChunkColorProfile(data) {\n  const profileType = /** @type {AsepriteColorProfile} */ (data.nextWord());\n  const flags = data.nextWord();\n  const fixedGamma = data.nextFixed();\n  data.skipBytes(8); // Zeroes (reserved)\n  let iccProfile = null;\n  if (profileType === AsepriteColorProfiles.ICC) {\n    const iccProfileLength = data.nextDoubleWord();\n    iccProfile = data.nextBytes(iccProfileLength); // http://www.color.org/ICC1V42.pdf\n  }\n  return {\n    profileType,\n    flags,\n    fixedGamma,\n    iccProfile,\n  };\n}\n","import { readAsepriteStringBytes } from './AsepriteBytesHelper';\nimport { ByteReader } from './ByteReader';\n\n/** @typedef {AsepriteExternalFileEntryTypes[keyof AsepriteExternalFileEntryTypes]} AsepriteExternalFileEntryType */\n\nexport const AsepriteExternalFileEntryTypes = /** @type {const} */ ({\n  EXTERNAL_PALETTE: 0,\n  EXTERNAL_TILESET: 1,\n  PROPERTIES_EXTENSION_NAME: 2,\n  TILE_MANAGER_EXTENSION_NAME: 3,\n});\n\n/**\n * @param {ByteReader} data\n * @param {TextDecoder} textDecoder\n */\nexport function readAsepriteChunkExternalFiles(data, textDecoder) {\n  /** @type {Array<AsepriteExternalFileEntry>} */\n  let entries = [];\n  const numEntries = data.nextDoubleWord();\n  data.skipBytes(8); // Zeroes (reserved)\n  for(let i = 0; i < numEntries; ++i) {\n    const entryId = data.nextDoubleWord();\n    const entryType = /** @type {AsepriteExternalFileEntryType} */ (data.nextByte());\n    data.skipBytes(7); // Zeroes (reserved)\n    const extensionId = readAsepriteStringBytes(data, textDecoder);\n    entries.push(createAsepriteExternalFileEntry(entryId, entryType, extensionId));\n  }\n  return {\n    entries\n  };\n}\n\n/** @typedef {ReturnType<createAsepriteExternalFileEntry>} AsepriteExternalFileEntry */\n\n/**\n * @param {number} entryId \n * @param {AsepriteExternalFileEntryType} entryType \n * @param {string} extensionId\n */\nfunction createAsepriteExternalFileEntry(entryId, entryType, extensionId) {\n  return {\n    entryId,\n    entryType,\n    extensionId,\n  };\n}\n","import { readAsepriteStringBytes } from './AsepriteBytesHelper';\nimport { ByteReader } from './ByteReader';\n\n/** @typedef {AsepriteAnimationDirections[keyof AsepriteAnimationDirections]} AsepriteAnimationDirection */\n\nexport const AsepriteAnimationDirections = /** @type {const} */ ({\n  FORWARD: 0,\n  REVERSE: 1,\n  PING_PONG: 2,\n  PING_PONG_REVERSE: 3,\n});\n\n/**\n * @param {ByteReader} data\n * @param {TextDecoder} textDecoder\n */\nexport function readAsepriteChunkTags(data, textDecoder) {\n  /** @type {Array<AsepriteTag>} */\n  let tags = [];\n  const numTags = data.nextWord();\n  data.skipBytes(8); // Zeroes (for future)\n  for(let i = 0; i < numTags; ++i) {\n    const fromFrame = data.nextWord();\n    const toFrame = data.nextWord();\n    const direction = /** @type {AsepriteAnimationDirection} */ (data.nextByte());\n    const nTimes = data.nextWord();\n    data.skipBytes(6); // Zeroes (for future)\n    data.skipBytes(3); // Deprecated tag color\n    data.skipBytes(1); // Zeroes (extra)\n    const tagName = readAsepriteStringBytes(data, textDecoder);\n    tags.push(createAsepriteTag(fromFrame, toFrame, direction, nTimes, tagName));\n  }\n  return {\n    tags,\n  };\n}\n\n/** @typedef {ReturnType<createAsepriteTag>} AsepriteTag */\n\n/**\n * @param {number} fromFrame \n * @param {number} toFrame \n * @param {number} direction \n * @param {number} nTimes \n * @param {string} tagName\n */\nfunction createAsepriteTag(fromFrame, toFrame, direction, nTimes, tagName) {\n  return {\n    fromFrame,\n    toFrame,\n    direction,\n    nTimes,\n    tagName,\n  };\n}\n","import { rgba } from '@milquejs/color';\nimport { readAsepriteStringBytes } from './AsepriteBytesHelper';\nimport { ByteReader } from './ByteReader';\n\nconst AsepriteUserDataFlags = /** @type {const} */ ({\n  HAS_TEXT: 1,\n  HAS_COLOR: 2,\n  HAS_PROPERTIES: 4,\n});\n\n/** @typedef {AsepriteValueTypes[keyof AsepriteValueTypes]} AsepriteValueType */\n\nconst AsepriteValueTypes = /** @type {const} */ ({\n  BOOL: 0x0001,\n  INT8: 0x0002,\n  UINT8: 0x0003,\n  INT16: 0x0004,\n  UINT16: 0x0005,\n  INT32: 0x0006,\n  UINT32: 0x0007,\n  INT64: 0x0008,\n  UINT64: 0x0009,\n  FIXED: 0x000A,\n  FLOAT: 0x000B,\n  DOUBLE: 0x000C,\n  STRING: 0x000D,\n  POINT: 0x000E,\n  SIZE: 0x000F,\n  RECT: 0x0010,\n  VECTOR: 0x0011,\n  NESTED: 0x0012,\n  UUID: 0x0013,\n});\n\n/**\n * @param {ByteReader} data\n * @param {TextDecoder} textDecoder\n */\nexport function readAsepriteChunkUserData(data, textDecoder) {\n  const flags = data.nextDoubleWord();\n  let text = null;\n  if (flags & AsepriteUserDataFlags.HAS_TEXT) {\n    text = readAsepriteStringBytes(data, textDecoder);\n  }\n  let color = null;\n  if (flags & AsepriteUserDataFlags.HAS_COLOR) {\n    const red = data.nextByte();\n    const green = data.nextByte();\n    const blue = data.nextByte();\n    const alpha = data.nextByte();\n    color = rgba.fromBytes(red, green, blue, alpha);\n  }\n  let props = null;\n  if (flags & AsepriteUserDataFlags.HAS_PROPERTIES) {\n    let maps = [];\n    const mapSize = data.nextDoubleWord(); // Bytes in properties map.\n    const numMaps = data.nextDoubleWord();\n    for(let i = 0; i < numMaps; ++i) {\n      const mapKey = data.nextDoubleWord();\n      const numProps = data.nextDoubleWord();\n      /** @type {Record<string, any>} */\n      let values = {};\n      for(let j = 0; j < numProps; ++j) {\n        const name = readAsepriteStringBytes(data, textDecoder);\n        const type = /** @type {AsepriteValueType} */ (data.nextWord());\n        const value = readAsepriteValue(data, type, textDecoder);\n        values[name] = value;\n      }\n      maps.push({\n        mapKey,\n        values,\n      });\n    }\n    props = {\n      mapSize,\n      maps,\n    };\n  }\n  return {\n    text,\n    color,\n    props,\n  };\n}\n\n/**\n * @param {ByteReader} data\n * @param {AsepriteValueType} type \n * @param {TextDecoder} textDecoder\n */\nfunction readAsepriteValue(data, type, textDecoder) {\n  switch (type) {\n    case AsepriteValueTypes.BOOL:\n      return data.nextByte() === 0 ? false : true;\n    case AsepriteValueTypes.INT8:\n      return data.nextByte();\n    case AsepriteValueTypes.UINT8:\n      return data.nextByte();\n    case AsepriteValueTypes.INT16:\n      return data.nextShort();\n    case AsepriteValueTypes.UINT16:\n      return data.nextWord();\n    case AsepriteValueTypes.INT32:\n      return data.nextLong();\n    case AsepriteValueTypes.UINT32:\n      return data.nextDoubleWord();\n    case AsepriteValueTypes.INT64:\n      return data.nextDoubleLong();\n    case AsepriteValueTypes.UINT64:\n      return data.nextQuadWord();\n    case AsepriteValueTypes.FIXED:\n      return data.nextFixed();\n    case AsepriteValueTypes.FLOAT:\n      return data.nextFloat();\n    case AsepriteValueTypes.DOUBLE:\n      return data.nextDouble();\n    case AsepriteValueTypes.STRING:\n      return readAsepriteStringBytes(data, textDecoder);\n    case AsepriteValueTypes.POINT: {\n      const coordX = data.nextLong();\n      const coordY = data.nextLong();\n      return { coordX, coordY };\n    }\n    case AsepriteValueTypes.SIZE: {\n      const width = data.nextLong();\n      const height = data.nextLong();\n      return { width, height };\n    }\n    case AsepriteValueTypes.RECT: {\n      const originX = data.nextLong();\n      const originY = data.nextLong();\n      const width = data.nextLong();\n      const height = data.nextLong();\n      return {\n        originX,\n        originY,\n        width,\n        height,\n      };\n    }\n    case AsepriteValueTypes.UUID: {\n      const buf = data.nextBytes(16);\n      return textDecoder.decode(buf);\n    }\n    case AsepriteValueTypes.VECTOR:\n    case AsepriteValueTypes.NESTED:\n    default:\n      throw new Error(`Unsupported value type \"${type}\" for user data property.`);\n  }\n}","import { readAsepriteStringBytes } from './AsepriteBytesHelper';\nimport { ByteReader } from './ByteReader';\n\nconst AsepriteSliceFlags = /** @type {const} */ ({\n  HAS_9_PATCHES: 1,\n  HAS_PIVOT_INFO: 2,\n});\n\n/**\n * @param {ByteReader} data\n * @param {TextDecoder} textDecoder\n */\nexport function readAsepriteChunkSlice(data, textDecoder) {\n  const numKeys = data.nextDoubleWord();\n  const flags = data.nextDoubleWord();\n  data.nextDoubleWord(); // Reserved.\n  const name = readAsepriteStringBytes(data, textDecoder);\n  let keys = [];\n  for(let i = 0; i < numKeys; ++i) {\n    const frameNumber = data.nextDoubleWord();\n    const originX = data.nextLong();\n    const originY = data.nextLong();\n    const sliceWidth = data.nextDoubleWord();\n    const sliceHeight= data.nextDoubleWord();\n    let ninePatch = null;\n    if (flags & AsepriteSliceFlags.HAS_9_PATCHES) {\n      const centerX = data.nextLong();\n      const centerY = data.nextLong();\n      const centerWidth = data.nextDoubleWord();\n      const centerHeight = data.nextDoubleWord();\n      ninePatch = {\n        centerX,\n        centerY,\n        centerWidth,\n        centerHeight,\n      };\n    }\n    let pivot = null;\n    if (flags & AsepriteSliceFlags.HAS_PIVOT_INFO) {\n      const pivotX = data.nextLong();\n      const pivotY = data.nextLong();\n      pivot = {\n        pivotX,\n        pivotY,\n      };\n    }\n    keys.push(createAsepriteSliceKey(frameNumber, originX, originY, sliceWidth, sliceHeight, ninePatch, pivot));\n  }\n  return {\n    name,\n    keys,\n  };\n}\n\n/** @typedef {ReturnType<createAsepriteSliceKey>} AsepriteSliceKey */\n\n/**\n * @param {number} frameNumber \n * @param {number} originX \n * @param {number} originY \n * @param {number} sliceWidth \n * @param {number} sliceHeight \n * @param {{ centerX: number, centerY: number, centerWidth: number, centerHeight: number }|null} [ninePatch] \n * @param {{ pivotX: number, pivotY: number }|null} [pivot]\n */\nfunction createAsepriteSliceKey(frameNumber, originX, originY, sliceWidth, sliceHeight, ninePatch = null, pivot = null) {\n  return {\n    frameNumber,\n    originX,\n    originY,\n    sliceWidth,\n    sliceHeight,\n    ninePatch,\n    pivot,\n  };\n}\n","import { readAsepriteStringBytes } from './AsepriteBytesHelper';\nimport { ByteReader } from './ByteReader';\n\nconst AsepriteTilesetFlags = /** @type {const} */ ({\n  EXTERNAL_TILESET: 1,\n  INCLUDED_TILESET: 2,\n  NEW_EMPTY_TILE_FORMAT: 4,\n  MATCH_FLIPPED_X: 8,\n  MATCH_FLIPPED_Y: 16,\n  MATCH_FLIPPED_DIAG: 32,\n});\n\n/**\n * @param {ByteReader} data\n * @param {TextDecoder} textDecoder\n */\nexport function readAsepriteChunkTileset(data, textDecoder) {\n  const tilesetId = data.nextDoubleWord();\n  const flags = data.nextDoubleWord();\n  const numTiles = data.nextDoubleWord();\n  const tileWidth = data.nextWord();\n  const tileHeight = data.nextWord();\n  const baseIndex = data.nextShort();\n  data.skipBytes(14); // Zeroes (for future)\n  const name = readAsepriteStringBytes(data, textDecoder);\n  let externalTileset = null;\n  if (flags & AsepriteTilesetFlags.EXTERNAL_TILESET) {\n    const entryId = data.nextDoubleWord();\n    const externalTilesetId = data.nextDoubleWord();\n    externalTileset = {\n      entryId,\n      externalTilesetId,\n    };\n  }\n  let includedTileset = null;\n  if (flags & AsepriteTilesetFlags.INCLUDED_TILESET) {\n    const imageSize = data.nextDoubleWord();\n    const compressedPixels = data.nextBytes(imageSize);\n    includedTileset = {\n      compressedPixels\n    };\n  }\n  return {\n    tilesetId,\n    numTiles,\n    tileWidth,\n    tileHeight,\n    baseIndex,\n    name,\n    externalTileset,\n    includedTileset,\n  };\n}\n","/** @typedef {AsepriteChunkTypes[keyof AsepriteChunkTypes]} AsepriteChunkType */\n\nexport const AsepriteChunkTypes = /** @type {const} */ ({\n  PALETTE_0004: 0x0004,\n  PALETTE_0011: 0x0011,\n  LAYER: 0x2004,\n  CEL: 0x2005,\n  CEL_EXTRA: 0x2006,\n  COLOR_PROFILE: 0x2007,\n  EXTERNAL_FILE: 0x2008,\n  MASK: 0x2016,\n  PATH: 0x2017,\n  TAGS: 0x2018,\n  PALETTE: 0x2019,\n  USER_DATA: 0x2020,\n  SLICE: 0x2022,\n  TILESET: 0x2023,\n});\n","import { ByteReader } from './ByteReader';\nimport { readAsepriteChunkPalette } from './AsepriteChunkPalette';\nimport { readAsepriteChunkLayer } from './AsepriteChunkLayer';\nimport { readAsepriteChunkCel } from './AsepriteChunkCel';\nimport { readAsepriteChunkCelExtra } from './AsepriteChunkCelExtra';\nimport { readAsepriteChunkColorProfile } from './AsepriteChunkColorProfile';\nimport { readAsepriteChunkExternalFiles } from './AsepriteChunkExternalFiles';\nimport { readAsepriteChunkTags } from './AsepriteChunkTags';\nimport { readAsepriteChunkUserData } from './AsepriteChunkUserData';\nimport { readAsepriteChunkSlice } from './AsepriteChunkSlice';\nimport { readAsepriteChunkTileset } from './AsepriteChunkTileset';\nimport { AsepriteChunkTypes } from './AsepriteChunkTypes';\n\n/**\n * @param {import('./AsepriteChunkTypes').AsepriteChunkType} chunkType \n * @param {ArrayBuffer} chunkData\n * @param {import('./AsepritePixelFormats').AsepritePixelFormat} pixelFormat\n */\nexport function parseAsepriteChunk(chunkType, chunkData, pixelFormat) {\n  const data = new ByteReader(chunkData);\n  switch(chunkType) {\n    case AsepriteChunkTypes.PALETTE_0004: // Skip in favor of new palette chunk\n    case AsepriteChunkTypes.PALETTE_0011: // Skip in favor of new palette chunk\n      return null;\n    case AsepriteChunkTypes.LAYER:\n      return readAsepriteChunkLayer(data, new TextDecoder());\n    case AsepriteChunkTypes.CEL:\n      return readAsepriteChunkCel(data, pixelFormat);\n    case AsepriteChunkTypes.CEL_EXTRA:\n      return readAsepriteChunkCelExtra(data);\n    case AsepriteChunkTypes.COLOR_PROFILE:\n      return readAsepriteChunkColorProfile(data);\n    case AsepriteChunkTypes.EXTERNAL_FILE:\n      return readAsepriteChunkExternalFiles(data, new TextDecoder());\n    case AsepriteChunkTypes.MASK: // Deprecated\n      return null;\n    case AsepriteChunkTypes.PATH: // Never used\n      return null;\n    case AsepriteChunkTypes.TAGS:\n      return readAsepriteChunkTags(data, new TextDecoder());\n    case AsepriteChunkTypes.PALETTE:\n      return readAsepriteChunkPalette(data, new TextDecoder());\n    case AsepriteChunkTypes.USER_DATA:\n      return readAsepriteChunkUserData(data, new TextDecoder());\n    case AsepriteChunkTypes.SLICE:\n      return readAsepriteChunkSlice(data, new TextDecoder());\n    case AsepriteChunkTypes.TILESET:\n      return readAsepriteChunkTileset(data, new TextDecoder());\n  }\n}\n","import { ByteReader } from './ByteReader';\nimport { parseAsepriteChunk } from './AsepriteChunks';\nimport { getPixelFormatFromColorDepth } from './AsepritePixelFormats';\n\nconst HEADER_MAGIC_NUMBER = 0xa5e0;\nconst FRAME_HEADER_MAGIC_NUMBER = 0xf1fa;\n\n/** @typedef {ReturnType<readAsepriteFileBytes>} AsepriteFile */\n\n/**\n * @see https://github.com/aseprite/aseprite/blob/master/docs/ase-file-specs.md\n * @param {ByteReader} data \n */\nexport function readAsepriteFileBytes(data) {\n  const header = readAsepriteHeaderBytes(data);\n  let frames = [];\n  for(let i = 0; i < header.frames; ++i) {\n    const frameHeader = readAsepriteFrameHeaderBytes(data);\n    let chunks = [];\n    for(let j = 0; j < frameHeader.chunks; ++j) {\n      const chunk = readAsepriteChunkBytes(data);\n      let result = parseAsepriteChunk(\n        chunk.chunkType,\n        chunk.chunkData,\n        getPixelFormatFromColorDepth(header.colorDepth));\n      chunks.push({\n        chunkHeader: {\n          chunkType: chunk.chunkType,\n          chunkSize: chunk.chunkSize,\n        },\n        ...result,\n      });\n    }\n    frames.push({\n      frameHeader,\n      chunks,\n    });\n  }\n  return {\n    header,\n    frames,\n  };\n}\n\n/**\n * @param {ByteReader} data\n */\nexport function readAsepriteHeaderBytes(data) {\n  const fileSize = data.nextDoubleWord();\n  const magicNumber = data.nextWord();\n  if (magicNumber !== HEADER_MAGIC_NUMBER) {\n    throw new Error('Invalid Aseprite header byte format.');\n  }\n  const frames = data.nextWord();\n  const width = data.nextWord();\n  const height = data.nextWord();\n  const colorDepth = data.nextWord();\n  data.nextDoubleWord(); // Layer opacity flag\n  data.nextWord(); // Deprecated speed (ms) between frames\n  data.nextDoubleWord(); // Zeroes\n  data.nextDoubleWord(); // Zeroes\n  const paletteIndex = data.nextByte();\n  data.skipBytes(3); // Zeroes (ignored bytes)\n  const numColors = data.nextWord();\n  const pixelWidth = data.nextByte();\n  const pixelHeight = data.nextByte();\n  const gridX = data.nextShort();\n  const gridY = data.nextShort();\n  const gridWidth = data.nextWord();\n  const gridHeight = data.nextWord();\n  data.skipBytes(84); // Zeroes (reserved for the future)\n  return {\n    /** Bytes in this file. */\n    fileSize,\n    /** Number of frames in this file. */\n    frames,\n    width,\n    height,\n    colorDepth,\n    paletteIndex,\n    numColors,\n    pixelWidth,\n    pixelHeight,\n    gridX,\n    gridY,\n    gridWidth,\n    gridHeight,\n  };\n}\n\n/**\n * @param {ByteReader} data\n */\nexport function readAsepriteFrameHeaderBytes(data) {\n  const frameSize = data.nextDoubleWord();\n  const magicNumber = data.nextWord();\n  if (magicNumber !== FRAME_HEADER_MAGIC_NUMBER) {\n    throw new Error('Invalid Aseprite frame header byte format.');\n  }\n  const oldChunks = data.nextWord(); // Old num chunks field\n  const frameDuration = data.nextWord(); // In milliseconds\n  data.skipBytes(2); // Zeroes (for future)\n  const newChunks = data.nextDoubleWord(); // If 0, use old num chunks field\n  return {\n    /** Bytes in this frame. */\n    frameSize,\n    /** Duration of this frame in milliseconds. */\n    frameDuration,\n    /** Number of chunks in this frame. */\n    chunks: newChunks > 0 ? newChunks : oldChunks,\n  };\n}\n\n/** @typedef {ReturnType<readAsepriteChunkBytes>} AsepriteChunk */\n\n/**\n * @param {ByteReader} data\n */\nexport function readAsepriteChunkBytes(data) {\n  const chunkSize = data.nextDoubleWord();\n  const chunkType = /** @type {import('./AsepriteChunkTypes').AsepriteChunkType} */ (data.nextWord());\n  const numBytes = chunkSize - 6;\n  if (numBytes < 0) {\n    throw new Error('Invalid Aseprite chunk size - must be at least 6 bytes (to include chunk size and type info).');\n  }\n  const chunkData = data.nextBytes(numBytes);\n  return {\n    /** Bytes in this chunk. */\n    chunkSize,\n    chunkType,\n    chunkData,\n  };\n}\n","import { readAsepriteFileBytes } from './AsepriteFile';\nimport { getPixelFormatFromColorDepth } from './AsepritePixelFormats';\nimport { ByteReader } from './ByteReader';\n\nexport class Aseprite {\n\n  /**\n   * @param {ArrayBuffer} arrayBuffer\n   */\n  static fromArrayBuffer(arrayBuffer) {\n    const data = new ByteReader(arrayBuffer);\n    const file = readAsepriteFileBytes(data);\n    let result = new Aseprite(\n      file.header.fileSize,\n      file.header.width,\n      file.header.height,\n      file.header.colorDepth,\n      `${file.header.pixelWidth}:${file.header.pixelHeight}`,\n      file);\n    return result;\n  }\n\n  /**\n   * @param {number} fileSize\n   * @param {number} width\n   * @param {number} height\n   * @param {number} colorDepth\n   * @param {string} pixelRatio\n   * @param {import('./AsepriteFile').AsepriteFile} fileData\n   */\n  constructor(fileSize, width, height, colorDepth, pixelRatio, fileData) {\n    /** @readonly */\n    this.fileSize = fileSize;\n    /** @readonly */\n    this.fileData = fileData;\n\n    this.frames = [];\n    this.layers = [];\n    this.slices = [];\n    this.tags = [];\n    this.tilesets = [];\n\n    /** @readonly */\n    this.width = width;\n    /** @readonly */\n    this.height = height;\n    /** @readonly */\n    this.colorDepth = colorDepth;\n    /** @readonly */\n    this.pixelRatio = pixelRatio;\n    /** @readonly */\n    this.pixelFormat = getPixelFormatFromColorDepth(this.colorDepth);\n  }\n}\n"],"names":[],"mappings":"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"}